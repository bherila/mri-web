{"version":3,"file":"component---src-pages-admin-site-tsx-36c4db5b4c992bf8fab0.js","mappings":"kPAaaA,EAAkB,SAAAC,GAE9B,SAAAD,EAAYE,EAAOC,GAAU,IAADC,EAEkB,OAD7CA,EAAAH,EAAAI,KAAA,KAAMH,EAAOC,IAAQ,MAChBG,MAAQJ,EAAMK,qBAAuB,CAAC,EAAEH,CAC9C,EAACI,EAAAA,EAAAA,GAAAR,EAAAC,GAAA,IAAAQ,EAAAT,EAAAU,UAkIA,OAlIAD,EAEME,aAAP,SAAoBC,GACnBC,KAAKC,SAAS,CAACF,kBAAAA,IACVA,GACJC,KAAKC,SAAS,CAACC,WAAW,GAE5B,EAACN,EAEMO,aAAP,SAAoBC,GACnBJ,KAAKC,SAAS,CAACG,kBAAAA,IACVA,GACJJ,KAAKC,SAAS,CAACC,WAAW,GAE5B,EAACN,EAEMS,OAAP,SAAcC,GACbN,KAAKC,SAAS,CAACK,kBAAAA,IACVA,GACJN,KAAKC,SAAS,CAACC,WAAW,GAE5B,EAACN,EAEMW,UAAP,SAAiBC,GAChBR,KAAKC,SAAS,CAACO,iBAAAA,IACVA,GACJR,KAAKC,SAAS,CAACC,WAAW,GAE5B,EAACN,EAEMa,WAAP,SAAkBP,GACjBF,KAAKC,SAAS,CAACC,UAAAA,GAChB,EAACN,EAEMc,SAAP,WAAmB,IAADC,EAAA,MACjB,IAAIC,EAAAA,IAAcC,sBAAsB,CACvCC,WAAWC,EAAAA,EAAAA,KACXC,KAAKC,EAAAA,EAAAA,GAAgBjB,KAAKP,SACxByB,MAAK,SAACC,GAGJA,EAAWC,QACVT,EAAKtB,MAAMgC,qBAAqBC,UACnCX,EAAKtB,MAAMgC,YAGZE,MAAMJ,EAAWK,SAAW,QAE9B,GACD,EAAC5B,EAEM6B,OAAP,WAAiB,IAADC,EAAA,KACTC,EAAO3B,KAAKP,OAAS,CAAC,EAC5B,OACCmC,EAAAA,cAAA,OAAKC,UAAU,YACdD,EAAAA,cAAA,UAAI,uBACJA,EAAAA,cAAA,UAAK5B,KAAKX,MAAMK,oBAAoBoC,QACpCF,EAAAA,cAAA,UAAKD,EAAKI,UAAU,IAAEJ,EAAKK,UAC1BC,EAAAA,EAAaC,mBACb,oCACAP,EAAK5B,oBAAqB,GAC1B,SAACoC,GAAC,OAAKT,EAAK5B,aAAaqC,EAAE,IAE3BF,EAAAA,EAAaC,mBACb,8CACAP,EAAKvB,oBAAqB,GAC1B,SAAC+B,GAAC,OAAKT,EAAKvB,aAAagC,EAAE,IAE3BF,EAAAA,EAAaC,mBACb,0CACAP,EAAKrB,oBAAqB,GAC1B,SAAC6B,GAAC,OAAKT,EAAKrB,OAAO8B,EAAE,IAErBF,EAAAA,EAAaC,mBACb,gCACAP,EAAKnB,mBAAoB,GACzB,SAAC2B,GAAC,OAAKT,EAAKnB,UAAU4B,EAAE,IAExBF,EAAAA,EAAaC,mBACb,YACAP,EAAKzB,YAAa,GAClB,SAACiC,GAAC,OAAKT,EAAKjB,WAAW0B,EAAE,IAE1BP,EAAAA,cAAA,OAAKC,UAAU,YACdD,EAAAA,cAAA,UAAQC,UAAU,kBAAkBO,KAAK,SAASC,QAAS,SAACC,GAAC,OAAKZ,EAAKa,QAAQD,EAAE,GAC/EtC,KAAKwC,UAAY,UAAY,QAE/BZ,EAAAA,cAAA,UAAQC,UAAU,kBAAkBO,KAAK,SAASC,QAAS,SAACC,GAAC,OAAKZ,EAAKe,SAASH,EAAE,GAAE,qBACpFV,EAAAA,cAAA,UAAQC,UAAU,kBAAkBO,KAAK,SAASC,QAAS,SAACC,GAAC,OAAKZ,EAAKgB,OAAOJ,EAAE,GAAE,cAItF,EAAC1C,EAEO4C,QAAR,WACC,QAAKxC,KAAKP,MAAMM,sBAGXC,KAAKP,MAAMW,sBAGXJ,KAAKP,MAAMa,sBAGXN,KAAKP,MAAMe,oBAGXR,KAAKP,MAAMS,YAIjB,EAACN,EAEO2C,QAAR,SAAgBD,GACfA,EAAEK,iBACF3C,KAAKU,UACN,EAACd,EAEO8C,OAAR,SAAeJ,GACdA,EAAEK,iBACE3C,KAAKX,MAAMuD,oBAAoBtB,UAClCtB,KAAKX,MAAMuD,UAEb,EAAChD,EAEO6C,SAAR,SAAiBH,GAChBA,EAAEK,iBACE3C,KAAKX,MAAMwD,yBAAyBvB,UACvCtB,KAAKX,MAAMwD,eAEb,EAAC1D,CAAA,CAvI6B,CAASyC,EAAAA,W,SCV3BkB,EAAgB,SAAHC,GAAA,OAAAC,EAAAA,EAAAA,GAAAD,GACzBnB,EAAAA,cAAA,UAAQQ,KAAK,SAASP,UAAU,kBAAkBQ,QAAS,WAAF,OAAQY,EAAAA,EAAAA,IAAe,GAAE,WAEzE,E,UCMGC,EAAkB,SAAA9D,GAE9B,SAAA8D,EAAY7D,EAAOC,GAAU,IAADC,EAEO,OADlCA,EAAAH,EAAAI,KAAA,KAAMH,EAAOC,IAAQ,MAChBG,MAAQ,CAAC0D,aAAa,GAAO5D,CACnC,EAACI,EAAAA,EAAAA,GAAAuD,EAAA9D,GAAA,IAAAQ,EAAAsD,EAAArD,UA+CA,OA/CAD,EAEMwD,UAAP,WAAoB,IAADzC,EAAA,MAClB,IAAIC,EAAAA,IAAcyC,yBAAyB,CAC1CvC,WAAWC,EAAAA,EAAAA,KACXC,KAAKC,EAAAA,EAAAA,GAAgBjB,KAAKX,MAAMiE,6BAA6BC,qBAC3DrC,MAAK,SAACC,GACJA,EAAWC,QACVT,EAAKtB,MAAMgC,qBAAqBC,UACnCX,EAAKtB,MAAMgC,YAGZE,MAAMJ,EAAWK,SAAW,QAE9B,GACD,EAAC5B,EAEM6B,OAAP,WAAiB,IAADC,EAAA,KACTC,EAAO3B,KAAKX,MAAMiE,6BAA6BC,mBAAqB,CAAC,EAC3E,OAAO5B,GACNC,EAAAA,cAAA,OAAKC,UAAU,YACdD,EAAAA,cAAA,UAAI,wBACJA,EAAAA,cAAA,UAAK5B,KAAKX,MAAMiE,6BAA6BE,QAC7C5B,EAAAA,cAAA,UAAKD,EAAKI,UAAU,IAAEJ,EAAKK,UAC3BJ,EAAAA,cAAA,SAAG,oDACHA,EAAAA,cAAA,SAAG,qDACHA,EAAAA,cAAA,SACCA,EAAAA,cAAA,SAAO6B,MAAO,CAACC,WAAY,SAC1B9B,EAAAA,cAAA,SACAQ,KAAK,WACLuB,SAAU,SAACrB,GAAC,OAAKZ,EAAKzB,SAAS,CAACkD,YAAab,EAAEsB,cAAcC,SAAS,IACrE,6DAIHjC,EAAAA,cAAA,OAAKC,UAAU,YAEbD,EAAAA,cAAA,UACCkC,UAAW9D,KAAKP,MAAM0D,YACtBtB,WAAa7B,KAAKP,MAAM0D,YAA2B,SAAb,YAAyB,YAC/Df,KAAK,SACLC,QAAS,WAAF,OAAQX,EAAK0B,WAAW,GAAE,WAEnCxB,EAAAA,cAAA,UAAQC,UAAU,kBAAkBO,KAAK,SAASC,QAAS,WAAF,OAAQX,EAAKrC,MAAMuD,UAAU,GAAE,cAI5F,EAACM,CAAA,CApD6B,CAAStB,EAAAA,W,6BCuRxC,EAxQc,SAAAxC,GACb,SAAA2E,EAAY1E,EAAOC,GAAU,IAADC,EAazB,OAZFA,EAAAH,EAAAI,KAAA,KAAMH,EAAOC,IAAQ,MAChBG,MAAQ,CACZuE,iBAAiB,EACjBC,eAAe,EACfC,MAAM,EACNC,qBAAqB,EACrBjE,WAAW,EACXkE,OAAQ,GACRC,MAAO,KACPC,KAAM,GACNC,aAAc,KACdC,MAAO,GACNjF,CACH,EAACI,EAAAA,EAAAA,GAAAoE,EAAA3E,GAAA,IAAAQ,EAAAmE,EAAAlE,UAoPA,OApPAD,EAEM6E,kBAAP,WAA4B,IAAD9D,EAAA,MAC1B,IAAI+D,EAAAA,IAAkBC,aAAa,CAClCP,OAAQ,GACRtD,WAAWC,EAAAA,EAAAA,KACX6D,WAAY,GACZC,cAAc,EACdL,KAAMxE,KAAKP,MAAM+E,OAERtD,MAAK,SAAC4D,GACfnE,EAAKV,SAAS,CAACqE,KAAMQ,EAAOC,OAAS,IACtC,IAAG,SAACC,GACHC,QAAQC,IAAIF,EACb,GACD,EAACpF,EAEMuF,UAAP,SAAiB7C,EAAGiC,GACfjC,GACHA,EAAEK,iBAEH3C,KAAKC,SAAS,CAACsE,aAAAA,EAAcF,MAAO,WACrC,EAACzE,EAEMwF,OAAP,SAAc9C,EAAGiC,GACZjC,GACHA,EAAEK,iBAEH,IACM0C,EAAG,oBADD,QAAWC,mBAAmBC,KAAKC,UAAUjB,KAGrDkB,OAAOvB,KAAKmB,EAAK,SAClB,EAACzF,EAEO8F,iBAAR,SAAyBpD,EAAwCqD,GAC5DrD,GACHA,EAAEK,iBAEEgD,EAAKnC,OAIVxD,KAAKC,SAAS,CACboE,MAAO,OACPE,aAAc,CACbf,OAAQmC,EAAKnC,OACbD,kBAAmB,CAClBqC,aAAcD,EAAKnC,OAAOqC,MAAM,KAAK,GACrC/D,OAAQ6D,EAAKnC,OACbsC,WAAYH,EAAKG,WACjBC,cAAe,IAEhBC,aAAa,EACbC,qBAAqB,EACrBC,oBAAoB,EACpBC,UAAU,EACVL,WAAYH,EAAKG,WACjBM,KAAMT,EAAKS,QAlBZ7E,MAAM,aAqBR,EAAC3B,EAEMwD,UAAP,SAAiBd,EAAGiC,GACfjC,GACHA,EAAEK,iBAEH3C,KAAKC,SAAS,CAACsE,aAAAA,EAAcF,MAAO,WACrC,EAACzE,EAEMyG,WAAP,WACCrG,KAAKC,SAAS,CAACoE,MAAO,OACtBrE,KAAKyE,mBACN,EAAC7E,EAEM6B,OAAP,WACC,OACCG,EAAAA,cAAC0E,EAAAA,EAAW,KACX1E,EAAAA,cAAC2E,EAAAA,EAAI,KACHvG,KAAKwG,eAIV,EAAC5G,EAEM6G,QAAP,SAAed,GACd,QAAI3F,KAAKP,MAAMyE,OAASyB,EAAKK,iBAGzBhG,KAAKP,MAAMuE,kBAAoB2B,EAAKK,iBAGpChG,KAAKP,MAAMwE,gBAAiB0B,EAAKK,iBAGjChG,KAAKP,MAAM0E,qBAAkD,OAA3BwB,EAAKpC,wBAGvCvD,KAAKP,MAAMS,WACTyF,EAAKpC,mBAAsBoC,EAAKpC,kBAAkBrD,aAKzD,EAACN,EAEM4G,YAAP,WAAsB,IAAD9E,EAAA,KACpB,OACCE,EAAAA,cAAA,WACCA,EAAAA,cAAA,UAAI,iBACJA,EAAAA,cAAA,OAAK6B,MAAO,CAACiD,QAAS,OAAQC,cAAe,MAAOC,aAAc,YACjEhF,EAAAA,cAAA,OAAK6B,MAAO,CAACiD,QAAS,OAAQC,cAAe,QAC5C/E,EAAAA,cAAA,UAAQC,UAAU,kBAAkBQ,QAAS,SAACC,GAAC,OAAKZ,EAAKzB,SAAS,CAACuE,MAAO9C,EAAKjC,MAAM+E,MAAQ,GAAK,KAAK,kBAAM9C,EAAK+C,mBAAmB,GAAC,GAAE,cACxI7C,EAAAA,cAAA,UAAQC,UAAU,kBAAkBQ,QAAS,SAACC,GAAC,OAAKZ,EAAKzB,SAAS,CAACuE,MAAO9C,EAAKjC,MAAM+E,MAAQ,GAAK,KAAK,kBAAM9C,EAAK+C,mBAAmB,GAAC,GAAE,WAEzI7C,EAAAA,cAAA,UAAQC,UAAU,kBAAkBO,KAAK,SAASC,QAAS,WAAF,OAAQwE,EAAAA,EAAAA,IAAS,eAAe,GAAE,6BAG3FjF,EAAAA,cAACkB,EAAa,OAEflB,EAAAA,cAAA,OAAK6B,MAAO,CAACiD,QAAS,OAAQC,cAAe,MAAOC,aAAc,YACjEhF,EAAAA,cAAA,OAAK6B,MAAO,CAACiD,QAAS,OAAQC,cAAe,QAC3C1E,EAAAA,EAAa6E,kBAAkB,GAAI9G,KAAKP,MAAM2E,QAAQ,SAACA,GAAM,OAAK1C,EAAKzB,SAAS,CAACmE,OAAAA,GAAQ,GAAE,WAE7FxC,EAAAA,cAAA,OAAK6B,MAAO,CAACiD,QAAS,OAAQC,cAAe,MAAOI,YAAa,aAChEnF,EAAAA,cAAA,cAASK,EAAAA,EAAaC,mBAAmB,mBAAoBlC,KAAKP,MAAMuE,iBAAiB,SAACA,GAAe,OAAKtC,EAAKzB,SAAS,CAAC+D,gBAAAA,GAAiB,IAAE,IAChJpC,EAAAA,cAAA,cAASK,EAAAA,EAAaC,mBAAmB,iBAAkBlC,KAAKP,MAAMwE,eAAe,SAACA,GAAa,OAAKvC,EAAKzB,SAAS,CAACgE,cAAAA,GAAe,IAAE,IACxIrC,EAAAA,cAAA,cAASK,EAAAA,EAAaC,mBAAmB,OAAQlC,KAAKP,MAAMyE,MAAM,SAACA,GAAI,OAAKxC,EAAKzB,SAAS,CAACiE,KAAAA,EAAMF,iBAAiB,GAAO,IAAE,IAC3HpC,EAAAA,cAAA,cAASK,EAAAA,EAAaC,mBAAmB,wBAAyBlC,KAAKP,MAAM0E,qBAAqB,SAACA,GAAmB,OAAKzC,EAAKzB,SAAS,CAACkE,oBAAAA,GAAqB,IAAE,IACjKvC,EAAAA,cAAA,cAASK,EAAAA,EAAaC,mBAAmB,YAAalC,KAAKP,MAAMS,WAAW,SAACA,GAAS,OAAKwB,EAAKsF,aAAa9G,EAAU,IAAE,OAGzHF,KAAKP,MAAM6E,MAAQ,IAAI2C,KAAI,SAACC,GAAI,OACjCtF,EAAAA,cAAA,OAAKuF,IAAKD,EAAKE,eACfxF,EAAAA,cAAA,UAAKsF,EAAKE,eACVxF,EAAAA,cAAA,SAAOC,UAAU,OAAO4B,MAAO,CAAC4D,SAAU,SACzCzF,EAAAA,cAAA,cACGsF,EAAKI,OAAS,IAAIL,KAAI,SAACtB,GACxB,IAAKjE,EAAK+E,QAAQd,GACjB,OAAO,EAER,IAAI4B,EAAY,GAYhB,OAXM5B,EAAKpC,oBACLoC,EAAKpC,kBAAkBiE,iBAC3BD,EAAY,MAET5B,EAAKpC,kBAAkBrD,YAC1BqH,EAAY,MAERE,EAAAA,EAAAA,SAAQ9B,EAAKpC,kBAAkBmE,kBACnCH,EAAY,OAIb3F,EAAAA,cAAA,MAAIuF,IAAKxB,EAAKnC,QACb5B,EAAAA,cAAA,UAAKsF,EAAKE,cAAc,KAAGzB,EAAKS,KAAK,QACrCxE,EAAAA,cAAA,UAAK2F,GACL3F,EAAAA,cAAA,UAAK+D,EAAKK,YAAc,YAAc,eACrCtE,EAAKiG,qBAAqBhC,GAG9B,MAGI,IAEN3F,KAAK4H,eAGT,EAAChI,EAEO+H,qBAAR,SAA6BhC,GAAiC,IAADkC,EAAA,KAC5D,OAAIlC,EAAKK,YAEPpE,EAAAA,cAAA,UACCA,EAAAA,cAAA,UAAQC,UAAU,qBAAqBO,KAAK,SAASC,QAAS,SAACC,GAAC,OAAKuF,EAAKnC,iBAAiBpD,EAAGqD,EAAK,GAAE,oBAMlGA,EAAKpC,kBAET3B,EAAAA,cAAA,UACCA,EAAAA,cAAA,UAAQC,UAAU,qBAAqBO,KAAK,SAASC,QAAS,SAACC,GAAC,OAAKuF,EAAK1C,UAAU7C,EAAGqD,EAAK,GAAE,WAC9F/D,EAAAA,cAAA,UAAQC,UAAU,qBAAqBO,KAAK,SAASC,QAAS,SAACC,GAAC,OAAKuF,EAAKzE,UAAUd,EAAGqD,EAAK,GAAE,WAC9F/D,EAAAA,cAAA,UAAQC,UAAU,qBAAqBO,KAAK,SAASC,QAAS,SAACC,GAAC,OAAKuF,EAAKzC,OAAO9C,EAAGqD,EAAK,GAAE,SAK7F/D,EAAAA,cAAA,UAAI,IAEN,EAAChC,EAEOoH,aAAR,SAAqB9G,GACpBF,KAAKC,SAAS,CAACC,UAAAA,EAAW+D,eAAe,IACrC/D,GACHF,KAAKC,SAAS,CAACkE,qBAAqB,EAAOD,MAAM,GAEnD,EAACtE,EAEOgI,aAAR,WAAwB,IAADE,EAAA,KACtB,QAAK9H,KAAKP,MAAM8E,cAIf3C,EAAAA,cAACA,EAAAA,SAAc,KACdA,EAAAA,cAACmG,IAAU,CAACC,OAA6B,YAArBhI,KAAKP,MAAM4E,MAAqB4D,eAAgB,WAAF,OAAQH,EAAKzB,YAAY,EACxFxE,UAAU,kCACVqG,iBAAiB,iBACnBtG,EAAAA,cAACsB,EAAkB,CAClBI,6BAA8BtD,KAAKP,MAAM8E,aACzClD,UAAW,WAAF,OAAQyG,EAAKzB,YAAY,EAClCzD,SAAU,WAAF,OAAQkF,EAAKzB,YAAY,EACjCxD,cAAe,WAAF,OAAQiF,EAAKzB,YAAY,KAIvCrG,KAAKP,MAAM8E,aAAahB,mBACxB3B,EAAAA,cAACmG,IAAU,CAACC,OAA6B,YAArBhI,KAAKP,MAAM4E,MAAqB4D,eAAgB,WAAF,OAAQH,EAAKzB,YAAY,EACxFxE,UAAU,kCACVqG,iBAAiB,iBACnBtG,EAAAA,cAACzC,EAAkB,CAClBO,oBAAqBM,KAAKP,MAAM8E,aAAahB,kBAC7ClC,UAAW,WAAF,OAAQyG,EAAKzB,YAAY,EAClCzD,SAAU,WAAF,OAAQkF,EAAKzB,YAAY,EACjCxD,cAAe,WAAF,OAAQiF,EAAK7H,SAAS,CAACoE,MAAO,QAAQ,KAKtDzC,EAAAA,cAACmG,IAAU,CAACC,OAA6B,SAArBhI,KAAKP,MAAM4E,MAAkB4D,eAAgB,WAAF,OAAQH,EAAKzB,YAAY,EACrFxE,UAAU,uCACVqG,iBAAiB,iBACnBtG,EAAAA,cAAA,OAAKC,UAAU,sBACdD,EAAAA,cAACuG,EAAAA,EAAkB,CAClB7E,6BAA8BtD,KAAKP,MAAM8E,aACzClD,UAAW,WAAF,OAAQyG,EAAKzB,YAAY,EAClCzD,SAAU,WAAF,OAAQkF,EAAKzB,YAAY,MAMvC,EAACtC,CAAA,CAnQY,CAASnC,EAAAA,U,sBC3BvB,SAASoB,EAA0BoF,GACjC,GAAI,MAAQA,EAAG,MAAM,IAAIC,UAAU,sBAAwBD,EAC7D,C","sources":["webpack://mri-web/./src/components/patient-confirm.tsx","webpack://mri-web/./src/components/sign-out.tsx","webpack://mri-web/./src/components/patient-release.tsx","webpack://mri-web/./src/pages/admin/site.tsx","webpack://mri-web/./node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js"],"sourcesContent":["import * as React from 'react';\nimport {EditFormBase} from \"../forms\";\nimport {Appointment, ScheduleApi} from \"../api/api\";\nimport {getAuthToken} from \"../helpers/authToken\";\nimport copyAppointment from \"../helpers/copyAppointment\";\n\nexport interface PatientConfirmFormProps {\n\tselectedAppointment: Appointment;\n\tonConfirm: () => any;\n\tonRequestEdit: () => any;\n\tonCancel: () => any;\n}\n\nexport class PatientConfirmForm extends React.Component<PatientConfirmFormProps, Appointment> {\n\n\tconstructor(props, context) {\n\t\tsuper(props, context);\n\t\tthis.state = props.selectedAppointment || {};\n\t}\n\n\tpublic setInsurance(insuranceVerified: boolean) {\n\t\tthis.setState({insuranceVerified});\n\t\tif (!insuranceVerified) {\n\t\t\tthis.setState({confirmed: false});\n\t\t}\n\t}\n\n\tpublic setPriorAuth(priorAuthObtained: boolean) {\n\t\tthis.setState({priorAuthObtained});\n\t\tif (!priorAuthObtained) {\n\t\t\tthis.setState({confirmed: false});\n\t\t}\n\t}\n\n\tpublic setRIS(orderEnteredToRIS: boolean) {\n\t\tthis.setState({orderEnteredToRIS});\n\t\tif (!orderEnteredToRIS) {\n\t\t\tthis.setState({confirmed: false});\n\t\t}\n\t}\n\n\tpublic setCalled(patientWasCalled: boolean) {\n\t\tthis.setState({patientWasCalled});\n\t\tif (!patientWasCalled) {\n\t\t\tthis.setState({confirmed: false});\n\t\t}\n\t}\n\n\tpublic setConfirm(confirmed: boolean) {\n\t\tthis.setState({confirmed});\n\t}\n\n\tpublic doUpdate() {\n\t\tnew ScheduleApi().appointmentHandlerPUT({\n\t\t\tauthToken: getAuthToken(),\n\t\t\treq: copyAppointment(this.state),\n\t\t}).then((updateResp) => {\n\n\t\t\t// finish\n\t\t\tif (updateResp.success) {\n\t\t\t\tif (this.props.onConfirm instanceof Function) {\n\t\t\t\t\tthis.props.onConfirm();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\talert(updateResp.message || 'Error');\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic render() {\n\t\tconst appt = this.state || {};\n\t\treturn (\n\t\t\t<div className=\"centered\">\n\t\t\t\t<h3>Confirm Reservation</h3>\n\t\t\t\t<h3>{this.props.selectedAppointment.rowKey}</h3>\n\t\t\t\t<h3>{appt.firstName} {appt.lastName}</h3>\n\t\t\t\t{EditFormBase.boundCheckboxValue(\n\t\t\t\t\t'Insurance verified, if applicable',\n\t\t\t\t\tappt.insuranceVerified || false,\n\t\t\t\t\t(v) => this.setInsurance(v)\n\t\t\t\t)}\n\t\t\t\t{EditFormBase.boundCheckboxValue(\n\t\t\t\t\t'Prior authorization obtained, if applicable',\n\t\t\t\t\tappt.priorAuthObtained || false,\n\t\t\t\t\t(v) => this.setPriorAuth(v)\n\t\t\t\t)}\n\t\t\t\t{EditFormBase.boundCheckboxValue(\n\t\t\t\t\t'Order and Demographics entered into RIS',\n\t\t\t\t\tappt.orderEnteredToRIS || false,\n\t\t\t\t\t(v) => this.setRIS(v)\n\t\t\t\t)}\n\t\t\t\t{EditFormBase.boundCheckboxValue(\n\t\t\t\t\t'Patient called, if applicable',\n\t\t\t\t\tappt.patientWasCalled || false,\n\t\t\t\t\t(v) => this.setCalled(v)\n\t\t\t\t)}\n\t\t\t\t{EditFormBase.boundCheckboxValue(\n\t\t\t\t\t'Confirmed',\n\t\t\t\t\tappt.confirmed || false,\n\t\t\t\t\t(v) => this.setConfirm(v)\n\t\t\t\t)}\n\t\t\t\t<div className=\"centered\">\n\t\t\t\t\t<button className=\"button w-button\" type=\"button\" onClick={(e) => this.confirm(e)}>\n\t\t\t\t\t\t{this.isValid() ? 'Confirm' : 'Save'}\n\t\t\t\t\t</button>\n\t\t\t\t\t<button className=\"button w-button\" type=\"button\" onClick={(e) => this.viewEdit(e)}>View/Edit Details</button>\n\t\t\t\t\t<button className=\"button w-button\" type=\"button\" onClick={(e) => this.cancel(e)}>Nevermind</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tprivate isValid() {\n\t\tif (!this.state.insuranceVerified) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!this.state.priorAuthObtained) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!this.state.orderEnteredToRIS) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!this.state.patientWasCalled) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!this.state.confirmed) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tprivate confirm(e: React.MouseEvent<HTMLButtonElement>) {\n\t\te.preventDefault();\n\t\tthis.doUpdate();\n\t}\n\n\tprivate cancel(e: React.MouseEvent<HTMLButtonElement>) {\n\t\te.preventDefault();\n\t\tif (this.props.onCancel instanceof Function) {\n\t\t\tthis.props.onCancel();\n\t\t}\n\t}\n\n\tprivate viewEdit(e: React.MouseEvent<HTMLButtonElement>) {\n\t\te.preventDefault();\n\t\tif (this.props.onRequestEdit instanceof Function) {\n\t\t\tthis.props.onRequestEdit();\n\t\t}\n\t}\n}\n","import * as React from 'react';\nimport {loginRedirect} from \"../helpers/authToken\";\n\nexport const SignOutButton = ({}) => (\n\t<button type=\"button\" className=\"button w-button\" onClick={() => loginRedirect()}>\n\t\tSign out\n\t</button>\n);\n","import * as React from 'react';\nimport {ScheduleApi, SlotAvailabilityTime} from \"../api/api\";\nimport {getAuthToken} from \"../helpers/authToken\";\nimport copyAppointment from \"../helpers/copyAppointment\";\n\nexport interface PatientReleaseFormProps {\n\tselectedSlotAvailabilityTime: SlotAvailabilityTime;\n\tonConfirm: () => any;\n\tonRequestEdit: () => any;\n\tonCancel: () => any;\n}\n\nexport class PatientReleaseForm extends React.Component<PatientReleaseFormProps, {isConfirmed: boolean}> {\n\n\tconstructor(props, context) {\n\t\tsuper(props, context);\n\t\tthis.state = {isConfirmed: false};\n\t}\n\n\tpublic doRelease() {\n\t\tnew ScheduleApi().appointmentHandlerDELETE({\n\t\t\tauthToken: getAuthToken(),\n\t\t\treq: copyAppointment(this.props.selectedSlotAvailabilityTime.linkedAppointment),\n\t\t}).then((updateResp) => {\n\t\t\tif (updateResp.success) {\n\t\t\t\tif (this.props.onConfirm instanceof Function) {\n\t\t\t\t\tthis.props.onConfirm();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\talert(updateResp.message || 'Error');\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic render() {\n\t\tconst appt = this.props.selectedSlotAvailabilityTime.linkedAppointment || {};\n\t\treturn appt && (\n\t\t\t<div className=\"centered\">\n\t\t\t\t<h3>Release Reservation?</h3>\n\t\t\t\t<h3>{this.props.selectedSlotAvailabilityTime.slotId}</h3>\n\t\t\t\t<h3>{appt.firstName} {appt.lastName}</h3>\n\t\t\t\t<p>This will open the time slot for future booking.</p>\n\t\t\t\t<p>Patient data will be removed from this time slot.</p>\n\t\t\t\t<p>\n\t\t\t\t\t<label style={{fontWeight: 'bold'}}>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\tonChange={(e) => this.setState({isConfirmed: e.currentTarget.checked})}\n\t\t\t\t\t/>\n\t\t\t\t\tPlease make sure this time slot is also open in the RIS!\n\t\t\t\t\t</label>\n\t\t\t\t</p>\n\t\t\t\t<div className=\"centered\">\n\t\t\t\t\t{(\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tdisabled={!this.state.isConfirmed}\n\t\t\t\t\t\t\tclassName={(!this.state.isConfirmed ? 'disabled' : 'button') + ' w-button'}\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\tonClick={() => this.doRelease()}>Release</button>\n\t\t\t\t\t)}\n\t\t\t\t\t<button className=\"button w-button\" type=\"button\" onClick={() => this.props.onCancel()}>Nevermind</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","import * as React from 'react'\nimport {EditFormBase} from '../../forms';\nimport * as Api from '../../api/api';\nimport Page from '../../components/Page'\nimport AdminLayout from '../../layouts/admin'\nimport {PatientDetailsForm} from \"../../components/patient-details\";\nimport {PatientConfirmForm} from \"../../components/patient-confirm\";\nimport {SignOutButton} from \"../../components/sign-out\";\nimport {getAuthToken} from \"../../helpers/authToken\";\nimport {navigate} from \"gatsby\";\nimport {PatientReleaseForm} from \"../../components/patient-release\";\nimport ReactModal from 'react-modal';\nimport {isEmpty} from 'ucshared';\n\ninterface ISiteFormState {\n\thideUnavailable: boolean;\n\thideAvailable: boolean;\n\topen: boolean;\n\treservedUnconfirmed: boolean;\n\tconfirmed: boolean;\n\tsearch: string;\n\tmodal: 'confirm' | 'edit' | 'release' | null;\n\tdata: Api.SlotAvailabilityDate[];\n\tselectedItem: Api.SlotAvailabilityTime | null;\n\tskip: number;\n}\n\nclass SitePage extends React.Component<{classes: any}, ISiteFormState>{\n\tconstructor(props, context) {\n\t\tsuper(props, context);\n\t\tthis.state = {\n\t\t\thideUnavailable: false,\n\t\t\thideAvailable: false,\n\t\t\topen: false,\n\t\t\treservedUnconfirmed: false,\n\t\t\tconfirmed: false,\n\t\t\tsearch: '',\n\t\t\tmodal: null,\n\t\t\tdata: [],\n\t\t\tselectedItem: null,\n\t\t\tskip: -1,\n\t\t};\n\t}\n\n\tpublic componentDidMount() {\n\t\tnew Api.ScheduleApi().timeSlotsGET({\n\t\t\tsearch: '',\n\t\t\tauthToken: getAuthToken(),\n\t\t\tlocationId: '',\n\t\t\twithContrast: false,\n\t\t\tskip: this.state.skip,\n\n\t\t} as any).then((result) => {\n\t\t\tthis.setState({data: result.value || []});\n\t\t}, (err) => {\n\t\t\tconsole.log(err);\n\t\t});\n\t}\n\n\tpublic doConfirm(e, selectedItem: Api.SlotAvailabilityTime) {\n\t\tif (e) {\n\t\t\te.preventDefault();\n\t\t}\n\t\tthis.setState({selectedItem, modal: 'confirm'});\n\t}\n\n\tpublic doEdit(e, selectedItem: Api.SlotAvailabilityTime) {\n\t\tif (e) {\n\t\t\te.preventDefault();\n\t\t}\n\t\tconst qs = `appt=${encodeURIComponent(JSON.stringify(selectedItem))}`;\n\t\tconst url = `/admin/details/?${qs}`;\n\t\t// navigate(url);\n\t\twindow.open(url, '_blank');\n\t}\n\n\tprivate doManualSchedule(e: React.MouseEvent<HTMLButtonElement>, slot: Api.SlotAvailabilityTime) {\n\t\tif (e) {\n\t\t\te.preventDefault();\n\t\t}\n\t\tif (!slot.slotId) {\n\t\t\talert('no slotId!');\n\t\t\treturn;\n\t\t}\n\t\tthis.setState({\n\t\t\tmodal: 'edit',\n\t\t\tselectedItem: {\n\t\t\t\tslotId: slot.slotId,\n\t\t\t\tlinkedAppointment: {\n\t\t\t\t\tpartitionKey: slot.slotId.split(' ')[1],\n\t\t\t\t\trowKey: slot.slotId,\n\t\t\t\t\tresourceId: slot.resourceId,\n\t\t\t\t\tserviceLength: 45,\n\t\t\t\t},\n\t\t\t\tisAvailable: false,\n\t\t\t\tisContrastAvailable: true,\n\t\t\t\tisContrastRequired: false,\n\t\t\t\tisHidden: false,\n\t\t\t\tresourceId: slot.resourceId,\n\t\t\t\ttime: slot.time,\n\t\t\t},\n\t\t});\n\t}\n\n\tpublic doRelease(e, selectedItem: Api.SlotAvailabilityTime) {\n\t\tif (e) {\n\t\t\te.preventDefault();\n\t\t}\n\t\tthis.setState({selectedItem, modal: 'release'});\n\t}\n\n\tpublic closeModal() {\n\t\tthis.setState({modal: null});\n\t\tthis.componentDidMount();\n\t}\n\n\tpublic render() {\n\t\treturn (\n\t\t\t<AdminLayout>\n\t\t\t\t<Page>\n\t\t\t\t\t{this.renderInner()}\n\t\t\t\t</Page>\n\t\t\t</AdminLayout>\n\t\t);\n\t}\n\n\tpublic applies(slot: Api.SlotAvailabilityTime) {\n\t\tif (this.state.open && !slot.isAvailable) {\n\t\t\treturn false;\n\t\t}\n\t\tif (this.state.hideUnavailable && !slot.isAvailable) {\n\t\t\treturn false;\n\t\t}\n\t\tif (this.state.hideAvailable && slot.isAvailable) {\n\t\t\treturn false;\n\t\t}\n\t\tif (this.state.reservedUnconfirmed && slot.linkedAppointment === null) {\n\t\t\treturn false;\n\t\t}\n\t\tif (this.state.confirmed) {\n\t\t\tif (!slot.linkedAppointment || !slot.linkedAppointment.confirmed) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic renderInner() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h1>Waco Location</h1>\n\t\t\t\t<div style={{display: 'flex', flexDirection: 'row', justifyItems: 'stretch'}}>\n\t\t\t\t\t<div style={{display: 'flex', flexDirection: 'row'}}>\n\t\t\t\t\t\t<button className=\"button w-button\" onClick={(e) => this.setState({skip: (this.state.skip || 0) - 14}, () => this.componentDidMount())}>&laquo; Previous</button>\n\t\t\t\t\t\t<button className=\"button w-button\" onClick={(e) => this.setState({skip: (this.state.skip || 0) + 14}, () => this.componentDidMount())}>Next &raquo;</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<button className=\"button w-button\" type=\"button\" onClick={() => navigate('/admin/rules')}>\n\t\t\t\t\t\tManage availability rules\n\t\t\t\t\t</button>\n\t\t\t\t\t<SignOutButton/>\n\t\t\t\t</div>\n\t\t\t\t<div style={{display: 'flex', flexDirection: 'row', justifyItems: 'stretch'}}>\n\t\t\t\t\t<div style={{display: 'flex', flexDirection: 'row'}}>\n\t\t\t\t\t\t{EditFormBase.boundTextboxValue('', this.state.search, (search) => this.setState({search}), 'Search')}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div style={{display: 'flex', flexDirection: 'row', justifySelf: 'flex-end'}}>\n\t\t\t\t\t\t<button>{EditFormBase.boundCheckboxValue('Hide Unavailable', this.state.hideUnavailable, (hideUnavailable) => this.setState({hideUnavailable}), false)}</button>\n\t\t\t\t\t\t<button>{EditFormBase.boundCheckboxValue('Hide Available', this.state.hideAvailable, (hideAvailable) => this.setState({hideAvailable}), false)}</button>\n\t\t\t\t\t\t<button>{EditFormBase.boundCheckboxValue('Open', this.state.open, (open) => this.setState({open, hideUnavailable: false}), false)}</button>\n\t\t\t\t\t\t<button>{EditFormBase.boundCheckboxValue('Reserved, Unconfirmed', this.state.reservedUnconfirmed, (reservedUnconfirmed) => this.setState({reservedUnconfirmed}), false)}</button>\n\t\t\t\t\t\t<button>{EditFormBase.boundCheckboxValue('Confirmed', this.state.confirmed, (confirmed) => this.setConfirmed(confirmed), false)}</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t{(this.state.data || []).map((date) => (\n\t\t\t\t\t<div key={date.friendlyBegin}>\n\t\t\t\t\t<h3>{date.friendlyBegin}</h3>\n\t\t\t\t\t<table className=\"blue\" style={{fontSize: '12pt'}}>\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t{(date.times || []).map((slot) => {\n\t\t\t\t\t\t\t\tif (!this.applies(slot)) {\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tlet warnState = '';\n\t\t\t\t\t\t\t\tif (!!slot.linkedAppointment) {\n\t\t\t\t\t\t\t\t\tif (!slot.linkedAppointment.surveyDataJson) {\n\t\t\t\t\t\t\t\t\t\twarnState = '⚠️';\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (slot.linkedAppointment.confirmed) {\n\t\t\t\t\t\t\t\t\t\twarnState = '✅';\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (!isEmpty(slot.linkedAppointment.safetyWarnings)) {\n\t\t\t\t\t\t\t\t\t\twarnState = '🛑';\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t\t\t<tr key={slot.slotId}>\n\t\t\t\t\t\t\t\t\t\t<td>{date.friendlyBegin}, {slot.time} CST</td>\n\t\t\t\t\t\t\t\t\t\t<td>{warnState}</td>\n\t\t\t\t\t\t\t\t\t\t<td>{slot.isAvailable ? 'Available' : 'Unavailable'}</td>\n\t\t\t\t\t\t\t\t\t\t{this.renderSlotActionCell(slot)}\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</table>\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t\t{this.renderModals()}\n\t\t\t</div>\n\t\t);\n\t}\n\n\tprivate renderSlotActionCell(slot: Api.SlotAvailabilityTime) {\n\t\tif (slot.isAvailable) {\n\t\t\treturn (\n\t\t\t\t<td>\n\t\t\t\t\t<button className=\"button sm w-button\" type=\"button\" onClick={(e) => this.doManualSchedule(e, slot)}>\n\t\t\t\t\t\tManual Schedule\n\t\t\t\t\t</button>\n\t\t\t\t</td>\n\t\t\t);\n\t\t}\n\t\tif (!!slot.linkedAppointment) {\n\t\t\treturn (\n\t\t\t\t<td>\n\t\t\t\t\t<button className=\"button sm w-button\" type=\"button\" onClick={(e) => this.doConfirm(e, slot)}>Confirm</button>\n\t\t\t\t\t<button className=\"button sm w-button\" type=\"button\" onClick={(e) => this.doRelease(e, slot)}>Release</button>\n\t\t\t\t\t<button className=\"button sm w-button\" type=\"button\" onClick={(e) => this.doEdit(e, slot)}>View</button>\n\t\t\t\t</td>\n\t\t\t);\n\t\t}\n\t\treturn (\n\t\t\t<td>&nbsp;</td>\n\t\t);\n\t}\n\n\tprivate setConfirmed(confirmed: boolean) {\n\t\tthis.setState({confirmed, hideAvailable: false});\n\t\tif (confirmed) {\n\t\t\tthis.setState({reservedUnconfirmed: false, open: false});\n\t\t}\n\t}\n\n\tprivate renderModals() {\n\t\tif (!this.state.selectedItem) {\n\t\t\treturn false;\n\t\t}\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<ReactModal isOpen={this.state.modal === 'release'} onRequestClose={() => this.closeModal()}\n\t\t\t\t\t\t\tclassName=\"modal-content animated fadeInUp\"\n\t\t\t\t\t\t\toverlayClassName=\"modal-wrapper\">\n\t\t\t\t\t<PatientReleaseForm\n\t\t\t\t\t\tselectedSlotAvailabilityTime={this.state.selectedItem}\n\t\t\t\t\t\tonConfirm={() => this.closeModal()}\n\t\t\t\t\t\tonCancel={() => this.closeModal()}\n\t\t\t\t\t\tonRequestEdit={() => this.closeModal()}\n\t\t\t\t\t/>\n\t\t\t\t</ReactModal>\n\n\t\t\t\t{this.state.selectedItem.linkedAppointment && (\n\t\t\t\t\t<ReactModal isOpen={this.state.modal === 'confirm'} onRequestClose={() => this.closeModal()}\n\t\t\t\t\t\t\t\tclassName=\"modal-content animated fadeInUp\"\n\t\t\t\t\t\t\t\toverlayClassName=\"modal-wrapper\">\n\t\t\t\t\t\t<PatientConfirmForm\n\t\t\t\t\t\t\tselectedAppointment={this.state.selectedItem.linkedAppointment}\n\t\t\t\t\t\t\tonConfirm={() => this.closeModal()}\n\t\t\t\t\t\t\tonCancel={() => this.closeModal()}\n\t\t\t\t\t\t\tonRequestEdit={() => this.setState({modal: 'edit'})}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</ReactModal>\n\t\t\t\t)}\n\n\t\t\t\t<ReactModal isOpen={this.state.modal === 'edit'} onRequestClose={() => this.closeModal()}\n\t\t\t\t\t\t\tclassName=\"modal-content-full animated fadeInUp\"\n\t\t\t\t\t\t\toverlayClassName=\"modal-wrapper\">\n\t\t\t\t\t<div className=\"centered white-box\">\n\t\t\t\t\t\t<PatientDetailsForm\n\t\t\t\t\t\t\tselectedSlotAvailabilityTime={this.state.selectedItem}\n\t\t\t\t\t\t\tonConfirm={() => this.closeModal()}\n\t\t\t\t\t\t\tonCancel={() => this.closeModal()}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</ReactModal>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\n// We need an intermediary variable for handling the recursive nesting.\nconst SitePageWrapped = SitePage;\nexport default SitePageWrapped;\n","function _objectDestructuringEmpty(t) {\n  if (null == t) throw new TypeError(\"Cannot destructure \" + t);\n}\nexport { _objectDestructuringEmpty as default };"],"names":["PatientConfirmForm","_React$Component","props","context","_this","call","state","selectedAppointment","_inheritsLoose","_proto","prototype","setInsurance","insuranceVerified","this","setState","confirmed","setPriorAuth","priorAuthObtained","setRIS","orderEnteredToRIS","setCalled","patientWasCalled","setConfirm","doUpdate","_this2","ScheduleApi","appointmentHandlerPUT","authToken","getAuthToken","req","copyAppointment","then","updateResp","success","onConfirm","Function","alert","message","render","_this3","appt","React","className","rowKey","firstName","lastName","EditFormBase","boundCheckboxValue","v","type","onClick","e","confirm","isValid","viewEdit","cancel","preventDefault","onCancel","onRequestEdit","SignOutButton","_ref","_objectDestructuringEmpty","loginRedirect","PatientReleaseForm","isConfirmed","doRelease","appointmentHandlerDELETE","selectedSlotAvailabilityTime","linkedAppointment","slotId","style","fontWeight","onChange","currentTarget","checked","disabled","SitePage","hideUnavailable","hideAvailable","open","reservedUnconfirmed","search","modal","data","selectedItem","skip","componentDidMount","Api","timeSlotsGET","locationId","withContrast","result","value","err","console","log","doConfirm","doEdit","url","encodeURIComponent","JSON","stringify","window","doManualSchedule","slot","partitionKey","split","resourceId","serviceLength","isAvailable","isContrastAvailable","isContrastRequired","isHidden","time","closeModal","AdminLayout","Page","renderInner","applies","display","flexDirection","justifyItems","navigate","boundTextboxValue","justifySelf","setConfirmed","map","date","key","friendlyBegin","fontSize","times","warnState","surveyDataJson","isEmpty","safetyWarnings","renderSlotActionCell","renderModals","_this4","_this5","ReactModal","isOpen","onRequestClose","overlayClassName","PatientDetailsForm","t","TypeError"],"sourceRoot":""}