{"version":3,"sources":["webpack:///./src/pages/safety-questions.tsx","webpack:///./src/models/SafetyState.ts","webpack:///./src/components/breadcrumb.tsx","webpack:///./src/helpers/FormBasePage.tsx","webpack:///./src/components/BigBtn.tsx","webpack:///./src/components/Questions.tsx"],"names":["qs","id","q","r","qEye","qPost","SafetyQuestions","props","context","_FormBasePage","call","this","componentDidMount","prototype","addImplant","implants","state","slice","push","currentImplant","setState","removeImplant","console","log","n","validate","qArray","i","length","ans","answers","renderQuestionSet","_this","map","item","react__WEBPACK_IMPORTED_MODULE_2__","createElement","_components_Questions__WEBPACK_IMPORTED_MODULE_5__","b","key","val","getAns","onChange","text","isValid","render","_this2","_layouts__WEBPACK_IMPORTED_MODULE_3__","a","className","_components_breadcrumb__WEBPACK_IMPORTED_MODULE_6__","num","c","value","haveOrder","scan","d","slot","timeSlot","reserved","react_modal__WEBPACK_IMPORTED_MODULE_7___default","isOpen","overrideSafetyWarning","overlayClassName","type","onClick","_components_BigBtn__WEBPACK_IMPORTED_MODULE_4__","href","img","wide","t","__webpack_exports__","default","f","162","e","SafetyState","fname","lname","email","phone","height","weight","doctorName","insFront","insBack","mriOrder","carrierNumber","groupNumber","policyNumber","err","dob","sessionStorage","JSON","parse","getItem","loadState","jsonState","o","Object","assign","168","s","l","Chevron","src","width","alt","translucent","Ez123","OrderBreadcrumb","gatsby__WEBPACK_IMPORTED_MODULE_3__","Link","to","style","display","MriTypeBreadcrumb","_ref","name","contrast","TimeslotBreadcrumb","slotId","replace","169","FormBasePage","_React$Component","_models_SafetyState__WEBPACK_IMPORTED_MODULE_3__","_babel_runtime_helpers_inheritsLoose__WEBPACK_IMPORTED_MODULE_1___default","_proto","saveState","setItem","stringify","Component","185","__webpack_require__","BigButton","react__WEBPACK_IMPORTED_MODULE_0__","gatsby__WEBPACK_IMPORTED_MODULE_1__","YesNoQuestion","TextQuestion","htmlFor","children","maxLength","currentTarget","data-name"],"mappings":"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","file":"component---src-pages-safety-questions-tsx-48ae15fbf928ad709184.js","sourcesContent":["import * as React from 'react'\n\nimport IndexLayout from '../layouts'\nimport {BigButton} from \"../components/BigBtn\";\nimport {TextQuestion, YesNoQuestion} from \"../components/Questions\";\nimport {Ez123, MriTypeBreadcrumb, OrderBreadcrumb, TimeslotBreadcrumb} from \"../components/breadcrumb\";\nimport ReactModal from 'react-modal';\nimport {FormBasePage} from \"../helpers/FormBasePage\";\n\nconst qs = [\n\t{id: 'pacemaker', q: 'a cardiac pacemaker?', r: false},\n\t{id: 'defibrillatorImplant', q: 'implanted defibrillator (also called ICD or AICD)?', r: false},\n\t{id: 'spinalStimulator', q: 'a spinal stimulator?', r: false},\n\t{id: 'loopRecorder', q: 'a loop recorder?', r: false},\n\t{id: 'neurostimulator', q: 'a brain neurostimulator?', r: false},\n];\n\nconst qEye = [\n\t{id: 'e1', q: 'Was it completely removed?', r: true },\n\t{id: 'e2', q: 'Have you had an xray of your eyes showing no metal?', r: false },\n\t{id: 'e3', q: 'Have you had an MRI since the injury?', r: false },\n];\n\nconst qPost = [\n\t{id: 'p1', q: 'Are you claustrophobic?', r: false},\n\t{id: 'p2', q: 'Are you allergic to IV contrast or MRI contrast?', r: false},\n\t{id: 'p3', q: 'Do you have any kidney disease?', r: false},\n\t{id: 'p4', q: 'Do you have diabetes?', r: false},\n];\n\n\nclass SafetyQuestions extends FormBasePage {\n\tconstructor(props, context) {\n\t\tsuper(props, context);\n\t}\n\tpublic componentDidMount() {\n\t\tsuper.componentDidMount();\n\t}\n\n\tpublic addImplant() {\n\t\tconst implants = this.state.implants.slice(0);\n\t\timplants.push(this.state.currentImplant);\n\t\tthis.setState({implants});\n\t}\n\n\tpublic removeImplant() {\n\t\tconsole.log('TODO');\n\t}\n\n\tpublic validate(qArray) {\n\t\tfor (let i = 0; i < qArray.length; ++i) {\n\t\t\tconst ans = this.state.answers[qArray[i].q];\n\t\t\tif (typeof ans === 'undefined') {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (ans !== qArray[i].r) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic renderQuestionSet(qArray) {\n\t\treturn qArray.map((item) => {\n\t\t\tif (typeof item.q === 'string') {\n\t\t\t\treturn (\n\t\t\t\t\t<YesNoQuestion\n\t\t\t\t\t\tkey={item.q}\n\t\t\t\t\t\tid={item.id}\n\t\t\t\t\t\tval={this.getAns(item.q)}\n\t\t\t\t\t\tonChange={(val) => this.ans(item.q, val)}\n\t\t\t\t\t\ttext={item.q}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic isValid() {\n\t\tif (!this.validate(qs)) return false;\n\t\tif (!this.validate(qEye)) return false;\n\t\treturn true;\n\t}\n\n\tpublic render() {\n\t\treturn (\n\t\t\t<IndexLayout>\n\t\t\t\t<section id=\"Q2\" className=\"vspace80 w-container\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Ez123 num={3} />\n\t\t\t\t\t\t<div className=\"breadcrumb-stack\">\n\t\t\t\t\t\t\t<OrderBreadcrumb value={this.state.haveOrder}/>\n\t\t\t\t\t\t\t<MriTypeBreadcrumb value={this.state.scan}/>\n\t\t\t\t\t\t\t<TimeslotBreadcrumb slot={this.state.timeSlot} reserved={true} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<h2>We need to ask some safety questions before we can finish scheduling you.</h2>\n\n\t\t\t\t\t<h3>Do you have...</h3>\n\n\t\t\t\t\t{this.renderQuestionSet(qs)}\n\n\t\t\t\t\t<ReactModal\n\t\t\t\t\t\tisOpen={!this.isValid() && !this.state.overrideSafetyWarning}\n\t\t\t\t\t\t\t\tclassName=\"modal-content animated fadeInUp\"\n\t\t\t\t\t\t\t\toverlayClassName=\"modal-wrapper\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<p>Due to your medical history, we are unable to safely perform an MRI. If you feel that you are still a candidate for an MRI, you may submit the form anyway and we will contact you for further information.</p>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t<button type=\"button\"\n\t\t\t\t\t\t\t\t\tclassName=\"button w-button\"\n\t\t\t\t\t\t\t\t\tonClick={() => this.setState({overrideSafetyWarning: true})}>\n\t\t\t\t\t\t\t\tContinue Anyway\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</ReactModal>\n\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<YesNoQuestion\n\t\t\t\t\t\t\tid=\"implants\"\n\t\t\t\t\t\t\ttext=\"Do you have any other implants?\"\n\t\t\t\t\t\t\tonChange={(val) => this.ans('implants', val)}\n\t\t\t\t\t\t\tval={this.getAns('implants')}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<TextQuestion\n\t\t\t\t\t\t\t\tid=\"implants\"\n\t\t\t\t\t\t\t\tval={this.state.currentImplant}\n\t\t\t\t\t\t\t\tonChange={(currentImplant) => this.setState({currentImplant})}\n\t\t\t\t\t\t\t\ttext=\"Tell us as much as you can about them.\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</YesNoQuestion>\n\n\t\t\t\t\t\t<YesNoQuestion\n\t\t\t\t\t\t\tid=\"eye\"\n\t\t\t\t\t\t\ttext=\"Have you ever had injury to your eye with metal, or metal in your eye?\"\n\t\t\t\t\t\t\tonChange={(val) => this.ans('MetalInEye', val)}\n\t\t\t\t\t\t\tval={this.getAns('MetalInEye')}\n\t\t\t\t\t\t>\n\n\t\t\t\t\t\t\t{this.renderQuestionSet(qEye)}\n\n\t\t\t\t\t\t\t<TextQuestion\n\t\t\t\t\t\t\t\tid=\"eyeDetails\"\n\t\t\t\t\t\t\t\tval={this.state.currentImplant}\n\t\t\t\t\t\t\t\tonChange={(currentImplant) => this.setState({currentImplant})}\n\t\t\t\t\t\t\t\ttext=\"Additional details\"\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t</YesNoQuestion>\n\n\t\t\t\t\t\t{this.renderQuestionSet(qPost)}\n\n\t\t\t\t\t</div>\n\n\t\t\t\t\t{(this.isValid() || this.state.overrideSafetyWarning) && <div className=\"cta-subitem distributed\">\n\t\t\t\t\t\t<BigButton\n\t\t\t\t\t\t\thref=\"/done\"\n\t\t\t\t\t\t\timg=\"https://uploads-ssl.webflow.com/5b9e87c40899a487ba8091e4/5b9ead2f3661e73d2f76eedd_Meet%20Our%20Team.svg\"\n\t\t\t\t\t\t\ttext=\"Continue to Schedule\"\n\t\t\t\t\t\t\twide\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>}\n\t\t\t\t</section>\n\t\t\t</IndexLayout>\n\t\t);\n\t}\n}\n\nexport default SafetyQuestions;","import {SlotAvailabilityTime} from \"../api/api\";\nimport {IScan} from \"./Scan\";\n\nexport class SafetyState {\n\tconstructor() {\n\t\tthis.fname =  '';\n\t\tthis.lname =  '';\n\t\tthis.answers =  {};\n\t\tthis.implants =  [];\n\t\tthis.currentImplant =  '';\n\t\tthis.scan =  null;\n\t\tthis.haveOrder =  false;\n\t\tthis.overrideSafetyWarning =  false;\n\t\tthis.email = '';\n\t\tthis.phone = '';\n\t\tthis.height = '';\n\t\tthis.weight = '';\n\t\tthis.doctorName = '';\n\t\tthis.insFront = '';\n\t\tthis.insBack = '';\n\t\tthis.mriOrder = '';\n\t\tif (typeof sessionStorage !== 'undefined') {\n\t\t\tthis.timeSlot = JSON.parse(sessionStorage.getItem('timeSlot') || '{}');\n\t\t}\n\t\tthis.err = '';\n\t\tthis.dob = '';\n\t\tthis.carrierNumber = '';\n\t\tthis.groupNumber = '';\n\t\tthis.policyNumber = '';\n\t}\n\tpublic fname: string;\n\tpublic lname: string;\n\tpublic email: string;\n\tpublic phone: string;\n\tpublic answers: any;\n\tpublic implants: string[];\n\tpublic currentImplant: string;\n\tpublic haveOrder: boolean;\n\tpublic scan: IScan | null;\n\tpublic overrideSafetyWarning: boolean;\n\tpublic height: string;\n\tpublic weight: string;\n\tpublic doctorName: string;\n\tpublic insFront: string;\n\tpublic insBack: string;\n\tpublic mriOrder: string;\n\tpublic carrierNumber: string;\n\tpublic groupNumber: string;\n\tpublic policyNumber: string;\n\tpublic timeSlot: SlotAvailabilityTime | null;\n\tpublic err: string;\n\tpublic dob: string;\n\n\tpublic static loadState(): SafetyState {\n\t\tif (typeof sessionStorage !== 'undefined') {\n\t\t\tconst jsonState = JSON.parse(sessionStorage.getItem('wizard') || '{}');\n\t\t\tconst o = {\n\t\t\t\t// fname: sessionStorage.getItem('fname') || '',\n\t\t\t\t// lname: sessionStorage.getItem('lname') || '',\n\t\t\t\t// email: sessionStorage.getItem('email') || '',\n\t\t\t\t// phone: sessionStorage.getItem('phone') || '',\n\t\t\t\t// height: sessionStorage.getItem('height') || '',\n\t\t\t\t// weight: sessionStorage.getItem('weight') || '',\n\t\t\t\t// doctorName: sessionStorage.getItem('doctorName') || '',\n\t\t\t\t// insFront: sessionStorage.getItem('insFront') || '',\n\t\t\t\t// insBack: sessionStorage.getItem('insBack') || '',\n\t\t\t\t// mriOrder: sessionStorage.getItem('mriOrder') || '',\n\t\t\t\tscan: JSON.parse(sessionStorage.getItem('scan') || '{}'),\n\t\t\t\thaveOrder: sessionStorage.getItem('haveOrder') === 'true',\n\t\t\t};\n\t\t\treturn Object.assign(new SafetyState(), jsonState, o);\n\t\t}\n\t\treturn new SafetyState();\n\t}\n}\n","import * as React from 'react';\nimport {Link} from 'gatsby';\nimport {SlotAvailabilityTime} from \"../api/api\";\n\nconst Chevron = (props: {translucent?: boolean}) => (\n\t<img\n\t\tsrc=\"https://uploads-ssl.webflow.com/5b9e87c40899a487ba8091e4/5be12c8e888fb5963088dc64_chevron-right-blue-2.svg\"\n\t\twidth=\"38\" height=\"38\" alt=\"Chevron right\" className={props.translucent ? 'translucent' : ''}/>\n);\n\nexport const Ez123 = (props: {num: number}) => (\n\t<div>\n\t\t<div className=\"breadcrumb-row\">\n\t\t\t<div className={'circled ' + (props.num < 1 ? 'translucent' : '') }>1</div>\n\t\t\t<Chevron translucent={props.num < 2} />\n\t\t\t<div className={'circled ' + (props.num < 2 ? 'translucent' : '') }>2</div>\n\t\t\t<Chevron translucent={props.num < 3} />\n\t\t\t<div className={'circled ' + (props.num < 3 ? 'translucent' : '') }>3</div>\n\t\t</div>\n\t\t<div className=\"breadcrumb-row\">\n\t\t\t{props.num === 1 && <h3><strong>Step 1.</strong> Your details</h3>}\n\t\t\t{props.num === 2 && <h3><strong>Step 2.</strong> Choose your scan</h3>}\n\t\t\t{props.num === 3 && <h3><strong>Step 3.</strong> Health &amp; Safety Information</h3>}\n\t\t</div>\n\t</div>\n);\n\nexport const OrderBreadcrumb = (props: {value: boolean}) => (\n    <Link to=\"/have-order\"\n       className=\"breadcrumb w-button\" style={{display: 'none'}}>\n\t\t{props.value ? 'Have Doctor\\'s Order' : 'No Order'} ✓\n\t</Link>\n);\n\nexport const MriTypeBreadcrumb = ({value}) => {\n\tif (!value) {\n\t\treturn (\n\t\t\t<Link to=\"/mri-type\" className=\"breadcrumb w-button\">\n\t\t\t\tClick here to select MRI type\n\t\t\t</Link>\n\t\t);\n\t}\n\tif (typeof value === 'string') {\n\t\treturn (\n\t\t\t<Link to=\"/mri-type\" className=\"breadcrumb w-button\">\n\t\t\t\tScan type: {value}\n\t\t\t</Link>\n\t\t);\n\t}\n\treturn (\n\t\t<Link to=\"/mri-type\" className=\"breadcrumb w-button\">\n\t\t\tScan type: {value.name || 'e!name'} {value.contrast || 'e!contrast'}\n\t\t</Link>\n\t)\n};\n\nexport const TimeslotBreadcrumb = (props: {slot: SlotAvailabilityTime | null, reserved?: boolean}) => (\n\t!!props.slot ? (\n\t\t<Link to=\"/pick-time\" className=\"breadcrumb w-button\">\n\t\t\t{(props.slot.slotId || 'no time selected').replace(/(\\d{4})-(\\d{2})-(\\d{2})T([^\\s]{5}).*/g, \"$2/$3/$1 at $4\")}\n\t\t\t<br /><small>(not yet reserved)</small>\n\t\t</Link>\n\t) : <div />\n);\n","import * as React from 'react';\nimport {SafetyState} from \"../models/SafetyState\";\n\nexport abstract class FormBasePage extends React.Component<{}, SafetyState> {\n\tconstructor(props, context) {\n\t\tsuper(props, context);\n\t\tthis.state = SafetyState.loadState();\n\t}\n\n\tpublic getAns(q) {\n\t\treturn this.state.answers[q];\n\t}\n\n\tpublic componentDidMount() {\n\t\tconst state = SafetyState.loadState();\n\t\tthis.setState(state);\n\t}\n\n\tpublic ans(q, val) {\n\t\tconst answers = Object.assign(new SafetyState(), this.state.answers);\n\t\tanswers[q] = val;\n\t\tconsole.log(q, val, answers);\n\t\tthis.setState({answers}, () => this.saveState());\n\t}\n\n\tpublic saveState() {\n\t\tif (typeof sessionStorage !== 'undefined') {\n\t\t\tsessionStorage.setItem('wizard', JSON.stringify({\n\t\t\t\tanswers: this.state.answers,\n\t\t\t\timplants: this.state.implants,\n\t\t\t\tcurrentImplant: this.state.currentImplant,\n\t\t\t\tfname: this.state.fname,\n\t\t\t\tlname: this.state.lname,\n\t\t\t\temail: this.state.email,\n\t\t\t\tphone: this.state.phone,\n\t\t\t\theight: this.state.height,\n\t\t\t\tweight: this.state.weight,\n\t\t\t\tdoctorName: this.state.doctorName,\n\t\t\t\tinsFront: this.state.insFront,\n\t\t\t\tinsBack: this.state.insBack,\n\t\t\t\tmriOrder: this.state.mriOrder,\n\t\t\t\tscan: this.state.scan || null,\n\t\t\t\thaveOrder: this.state.haveOrder,\n\t\t\t\tdob: this.state.dob,\n\t\t\t}));\n\t\t}\n\t}\n\n\tabstract render();\n}","import * as React from \"react\";\nimport {Link} from \"gatsby\";\n\nexport const BigButton = ({href, img, wide, text}) => (\n\t<Link\n\t\tto={href}\n\t\tclassName={`cta-link ${wide ? 'wider' : ''} w-inline-block`}\n\t>\n\t\t<img\n\t\t\tsrc={img}\n\t\t\tclassName=\"image\"\n\t\t/>\n\t\t<div>{text}</div>\n\t</Link>\n);\n\n","import * as React from \"react\";\n\nexport const YesNoQuestion = (props: {text: string, val: boolean | null, onChange: any, id: string, children?: any}) => (\n\t<div>\n\t\t<div className=\"inputrow\">\n\t\t\t<label htmlFor={props.id} className=\"flexlabel\">{props.text}<br /></label>\n\t\t\t<div className=\"flexinput\">\n\t\t\t\t<a href=\"javascript:void(0);\" onClick={() => props.onChange(true)} className={`button green small ${props.val === true && 'selected'} w-button`}>\n\t\t\t\t\tYes\n\t\t\t\t</a>\n\t\t\t\t<a href=\"javascript:void(0);\" onClick={() => props.onChange(false)} className={`button green small ${props.val === false && 'selected'} w-button`}>\n\t\t\t\t\tNo\n\t\t\t\t</a>\n\t\t\t</div>\n\t\t</div>\n\t\t{props.val === true && typeof props.children !== 'undefined' && <div className=\"inputrow\">\n            <span className=\"flexlabel\">&nbsp;</span>\n            <div className=\"flexinput\">\n\t\t\t{props.children}\n\t\t\t</div>\n\t\t</div>}\n\t</div>\n);\n\nexport const TextQuestion = ({text, val, onChange, id}) => (\n\t<div className=\"inputrow\"><label htmlFor={id} className=\"flexlabel\">{text}<br /></label>\n\t\t<input\n\t\t\ttype=\"text\"\n\t\t\tclassName=\"flexinput w-input\"\n\t\t\tmaxLength={256}\n\t\t\tname={id}\n\t\t\tonClick={(e) => onChange(e.currentTarget.value)}\n\t\t\tvalue={val || ''}\n\t\t\tdata-name={id}\n\t\t\tid={id}\n\t\t/>\n\t</div>\n);\n\n// export class ListQuestiton = ({text, val, onChange, id})"],"sourceRoot":""}