{"version":3,"sources":["webpack:///./src/pages/questions-2.tsx","webpack:///./src/models/SafetyState.ts","webpack:///./node_modules/@babel/runtime/helpers/objectDestructuringEmpty.js","webpack:///./src/helpers/FormBasePage.tsx","webpack:///./src/components/BigBtn.tsx","webpack:///./src/components/Questions.tsx"],"names":["Questions2","props","context","_FormBasePage","call","this","componentDidMount","prototype","render","_this","react__WEBPACK_IMPORTED_MODULE_1__","createElement","_layouts__WEBPACK_IMPORTED_MODULE_5__","a","_components_Questions__WEBPACK_IMPORTED_MODULE_2__","id","val","state","currentImplant","onChange","setState","text","b","ans","getAns","className","_components_BigBtn__WEBPACK_IMPORTED_MODULE_3__","href","img","wide","t","_helpers_FormBasePage__WEBPACK_IMPORTED_MODULE_4__","__webpack_exports__","default","c","161","e","n","d","i","SafetyState","fname","lname","email","phone","answers","implants","haveOrder","scan","overrideSafetyWarning","height","weight","doctorName","doctorContact","insFront","insBack","mriOrder","carrierNumber","groupNumber","policyNumber","timeSlot","err","dob","address1","address2","city","zip","optedIn","sessionStorage","JSON","parse","getItem","loadState","jsonState","o","Object","assign","162","module","exports","obj","TypeError","169","r","s","FormBasePage","_React$Component","_models_SafetyState__WEBPACK_IMPORTED_MODULE_3__","_babel_runtime_helpers_inheritsLoose__WEBPACK_IMPORTED_MODULE_1___default","_proto","q","_this2","console","log","saveState","setItem","stringify","react__WEBPACK_IMPORTED_MODULE_2__","Component","185","__webpack_require__","BigButton","react__WEBPACK_IMPORTED_MODULE_0__","gatsby__WEBPACK_IMPORTED_MODULE_1__","_ref","Link","to","src","YesNoQuestion","TextQuestion","htmlFor","onClick","children","type","maxLength","name","currentTarget","value","data-name"],"mappings":"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","file":"component---src-pages-questions-2-tsx-270f7a5497aada6abbb5.js","sourcesContent":["import * as React from 'react';\r\nimport {TextQuestion, YesNoQuestion} from \"../components/Questions\";\r\nimport {BigButton} from \"../components/BigBtn\";\r\nimport {FormBasePage} from \"../helpers/FormBasePage\";\r\nimport IndexLayout from \"../layouts\";\r\n\r\nclass Questions2 extends FormBasePage {\r\n\tconstructor(props, context) {\r\n\t\tsuper(props, context);\r\n\t}\r\n\tpublic componentDidMount() {\r\n\t\tsuper.componentDidMount();\r\n\t}\r\n\r\n\tpublic render() {\r\n\t\treturn (\r\n\t\t\t<IndexLayout>\r\n\t\t\t\t<h3>Tell us a little more about your medical history.</h3>\r\n\t\t\t\t<p>This information improves the accuracy of your results, but is optional.</p>\r\n\r\n\t\t\t\tWhy are you having an MRI?\r\n\r\n\t\t\t\t<TextQuestion\r\n\t\t\t\t\tid=\"eyeDetails\"\r\n\t\t\t\t\tval={this.state.currentImplant}\r\n\t\t\t\t\tonChange={(currentImplant) => this.setState({currentImplant})}\r\n\t\t\t\t\ttext=\"Additional details\"\r\n\t\t\t\t/>\r\n\r\n\t\t\t\tDo you have pain? Where?\r\n\r\n\t\t\t\t<YesNoQuestion\r\n\t\t\t\t\tid=\"pain\"\r\n\t\t\t\t\ttext=\"Do you have pain?\"\r\n\t\t\t\t\tonChange={(val) => this.ans('pain', val)}\r\n\t\t\t\t\tval={this.getAns('pain')}\r\n\t\t\t\t>\r\n\t\t\t\t\t<TextQuestion\r\n\t\t\t\t\t\tid=\"painDetails\"\r\n\t\t\t\t\t\tval={this.getAns('painDetails')}\r\n\t\t\t\t\t\tonChange={(val) => this.ans('painDetails', val)}\r\n\t\t\t\t\t\ttext=\"Where?\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</YesNoQuestion>\r\n\r\n\t\t\t\t<YesNoQuestion\r\n\t\t\t\t\tid=\"injury\"\r\n\t\t\t\t\ttext=\"Did you have an injury?\"\r\n\t\t\t\t\tonChange={(val) => this.ans('injury', val)}\r\n\t\t\t\t\tval={this.getAns('injury')}\r\n\t\t\t\t>\r\n\t\t\t\t\t<TextQuestion\r\n\t\t\t\t\t\tid=\"injuryDetails\"\r\n\t\t\t\t\t\tval={this.getAns('injuryDetails')}\r\n\t\t\t\t\t\tonChange={(val) => this.ans('injuryDetails', val)}\r\n\t\t\t\t\t\ttext=\"Please add details\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</YesNoQuestion>\r\n\r\n\t\t\t\t<YesNoQuestion\r\n\t\t\t\t\tid=\"cancer\"\r\n\t\t\t\t\ttext=\"Do you have a diagnosis of cancer?\"\r\n\t\t\t\t\tonChange={(val) => this.ans('cancer', val)}\r\n\t\t\t\t\tval={this.getAns('cancer')}\r\n\t\t\t\t>\r\n\t\t\t\t\t<TextQuestion\r\n\t\t\t\t\t\tid=\"cancerDetails\"\r\n\t\t\t\t\t\tval={this.getAns('cancerDetails')}\r\n\t\t\t\t\t\tonChange={(val) => this.ans('cancerDetails', val)}\r\n\t\t\t\t\t\ttext=\"What type?\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</YesNoQuestion>\r\n\r\n\t\t\t\t<YesNoQuestion\r\n\t\t\t\t\tid=\"priorImaging_Mri\"\r\n\t\t\t\t\ttext=\"Have you had an MRI before?\"\r\n\t\t\t\t\tonChange={(val) => this.ans('priorImaging_Mri', val)}\r\n\t\t\t\t\tval={this.getAns('priorImaging_Mri')}\r\n\t\t\t\t>\r\n\t\t\t\t\t<TextQuestion\r\n\t\t\t\t\t\tid=\"priorImaging_MriDetails\"\r\n\t\t\t\t\t\tval={this.getAns('priorImaging_MriDetails')}\r\n\t\t\t\t\t\tonChange={(val) => this.ans('priorImaging_MriDetails', val)}\r\n\t\t\t\t\t\ttext=\" When/where?\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</YesNoQuestion>\r\n\r\n\t\t\t\t<YesNoQuestion\r\n\t\t\t\t\tid=\"priorImaging_BodyPartImg\"\r\n\t\t\t\t\ttext=\"Have you had this body part imaged before?\"\r\n\t\t\t\t\tonChange={(val) => this.ans('priorImaging_BodyPartImg', val)}\r\n\t\t\t\t\tval={this.getAns('priorImaging_BodyPartImg')}\r\n\t\t\t\t>\r\n\t\t\t\t\t<TextQuestion\r\n\t\t\t\t\t\tid=\"priorImaging_BodyPartImgDetails\"\r\n\t\t\t\t\t\tval={this.getAns('priorImaging_BodyPartImgDetails')}\r\n\t\t\t\t\t\tonChange={(val) => this.ans('priorImaging_BodyPartImgDetails', val)}\r\n\t\t\t\t\t\ttext=\"How/when/where\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</YesNoQuestion>\r\n\r\n\t\t\t\t<YesNoQuestion\r\n\t\t\t\t\tid=\"priorSurgery_Area\"\r\n\t\t\t\t\ttext=\"Have you had surgery on the area being scanned?\"\r\n\t\t\t\t\tonChange={(val) => this.ans('priorSurgery_Area', val)}\r\n\t\t\t\t\tval={this.getAns('priorSurgery_Area')}\r\n\t\t\t\t>\r\n\t\t\t\t\t<TextQuestion\r\n\t\t\t\t\t\tid=\"priorSurgery_Area_when\"\r\n\t\t\t\t\t\tval={this.getAns('priorSurgery_when')}\r\n\t\t\t\t\t\tonChange={(val) => this.ans('priorSurgery_when', val)}\r\n\t\t\t\t\t\ttext=\"When?\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t</YesNoQuestion>\r\n\r\n\t\t\t\t<TextQuestion\r\n\t\t\t\t\tid=\"priorSurgery_Other\"\r\n\t\t\t\t\tval={this.getAns('priorSurgery_Other')}\r\n\t\t\t\t\tonChange={(val) => this.ans('priorSurgery_Other', val)}\r\n\t\t\t\t\ttext=\"What other surgeries have you had?\"\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t<div className=\"cta-subitem distributed\">\r\n\t\t\t\t\t<BigButton\r\n\t\t\t\t\t\thref=\"/contact-info\"\r\n\t\t\t\t\t\timg=\"https://uploads-ssl.webflow.com/5b9e87c40899a487ba8091e4/5b9ead2f3661e73d2f76eedd_Meet%20Our%20Team.svg\"\r\n\t\t\t\t\t\ttext=\"Continue\"\r\n\t\t\t\t\t\twide\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</IndexLayout>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Questions2;\r\n","import {SlotAvailabilityTime} from \"../api/api\";\r\nimport {IScan} from \"./Scan\";\r\n\r\nexport class SafetyState {\r\n\tconstructor() {\r\n\t\tthis.fname =  '';\r\n\t\tthis.lname =  '';\r\n\t\tthis.answers =  {};\r\n\t\tthis.implants =  [];\r\n\t\tthis.currentImplant =  '';\r\n\t\tthis.scan =  null;\r\n\t\tthis.haveOrder =  false;\r\n\t\tthis.overrideSafetyWarning =  false;\r\n\t\tthis.email = '';\r\n\t\tthis.phone = '';\r\n\t\tthis.height = '';\r\n\t\tthis.weight = '';\r\n\t\tthis.doctorName = '';\r\n\t\tthis.doctorContact = '';\r\n\t\tthis.insFront = '';\r\n\t\tthis.insBack = '';\r\n\t\tthis.mriOrder = '';\r\n\t\tif (typeof sessionStorage !== 'undefined') {\r\n\t\t\tthis.timeSlot = JSON.parse(sessionStorage.getItem('timeSlot') || '{}');\r\n\t\t} else {\r\n\t\t\tthis.timeSlot = null;\r\n\t\t}\r\n\t\tthis.err = '';\r\n\t\tthis.dob = '';\r\n\t\tthis.carrierNumber = '';\r\n\t\tthis.groupNumber = '';\r\n\t\tthis.policyNumber = '';\r\n\t\tthis.address1 = '';\r\n\t\tthis.address2 = '';\r\n\t\tthis.city = '';\r\n\t\tthis.state = '';\r\n\t\tthis.zip = '';\r\n\t\tthis.optedIn = true;\r\n\t}\r\n\tpublic fname: string;\r\n\tpublic lname: string;\r\n\tpublic email: string;\r\n\tpublic phone: string;\r\n\tpublic answers: any;\r\n\tpublic implants: string[];\r\n\tpublic currentImplant: string;\r\n\tpublic haveOrder: boolean;\r\n\tpublic scan: IScan | null;\r\n\tpublic overrideSafetyWarning: boolean;\r\n\tpublic height: string;\r\n\tpublic weight: string;\r\n\tpublic doctorName: string;\r\n\tpublic doctorContact: string;\r\n\tpublic insFront: string;\r\n\tpublic insBack: string;\r\n\tpublic mriOrder: string;\r\n\tpublic carrierNumber: string;\r\n\tpublic groupNumber: string;\r\n\tpublic policyNumber: string;\r\n\tpublic timeSlot: SlotAvailabilityTime | null;\r\n\tpublic err: string;\r\n\tpublic dob: string;\r\n\tpublic address1: string;\r\n\tpublic address2: string;\r\n\tpublic city: string;\r\n\tpublic state: string;\r\n\tpublic zip: string;\r\n\tpublic optedIn: boolean;\r\n\r\n\tpublic static loadState(): SafetyState {\r\n\t\tif (typeof sessionStorage !== 'undefined') {\r\n\t\t\tconst jsonState = JSON.parse(sessionStorage.getItem('wizard') || '{}');\r\n\t\t\tconst o = {\r\n\t\t\t\t// fname: sessionStorage.getItem('fname') || '',\r\n\t\t\t\t// lname: sessionStorage.getItem('lname') || '',\r\n\t\t\t\t// email: sessionStorage.getItem('email') || '',\r\n\t\t\t\t// phone: sessionStorage.getItem('phone') || '',\r\n\t\t\t\t// height: sessionStorage.getItem('height') || '',\r\n\t\t\t\t// weight: sessionStorage.getItem('weight') || '',\r\n\t\t\t\t// doctorName: sessionStorage.getItem('doctorName') || '',\r\n\t\t\t\t// insFront: sessionStorage.getItem('insFront') || '',\r\n\t\t\t\t// insBack: sessionStorage.getItem('insBack') || '',\r\n\t\t\t\t// mriOrder: sessionStorage.getItem('mriOrder') || '',\r\n\t\t\t\tscan: JSON.parse(sessionStorage.getItem('scan') || '{}'),\r\n\t\t\t\thaveOrder: sessionStorage.getItem('haveOrder') === 'true',\r\n\t\t\t};\r\n\t\t\treturn Object.assign(new SafetyState(), jsonState, o);\r\n\t\t}\r\n\t\treturn new SafetyState();\r\n\t}\r\n}\r\n","function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure undefined\");\n}\n\nmodule.exports = _objectDestructuringEmpty;","import * as React from 'react';\r\nimport {SafetyState} from \"../models/SafetyState\";\r\n\r\nexport abstract class FormBasePage extends React.Component<{}, SafetyState> {\r\n\tconstructor(props, context) {\r\n\t\tsuper(props, context);\r\n\t\tthis.state = SafetyState.loadState();\r\n\t}\r\n\r\n\tpublic getAns(q) {\r\n\t\treturn this.state.answers[q];\r\n\t}\r\n\r\n\tpublic componentDidMount() {\r\n\t\tconst state = SafetyState.loadState();\r\n\t\tthis.setState(state);\r\n\t}\r\n\r\n\tpublic ans(q, val) {\r\n\t\tconst answers = Object.assign(new SafetyState(), this.state.answers);\r\n\t\tanswers[q] = val;\r\n\t\tconsole.log(q, val, answers);\r\n\t\tthis.setState({answers}, () => this.saveState());\r\n\t}\r\n\r\n\tpublic saveState() {\r\n\t\tif (typeof sessionStorage !== 'undefined') {\r\n\t\t\tsessionStorage.setItem('wizard', JSON.stringify({\r\n\t\t\t\tanswers: this.state.answers,\r\n\t\t\t\timplants: this.state.implants,\r\n\t\t\t\tcurrentImplant: this.state.currentImplant,\r\n\t\t\t\tfname: this.state.fname,\r\n\t\t\t\tlname: this.state.lname,\r\n\t\t\t\temail: this.state.email,\r\n\t\t\t\tphone: this.state.phone,\r\n\t\t\t\theight: this.state.height,\r\n\t\t\t\tweight: this.state.weight,\r\n\t\t\t\tdoctorName: this.state.doctorName,\r\n\t\t\t\tdoctorContact: this.state.doctorContact,\r\n\t\t\t\tinsFront: this.state.insFront,\r\n\t\t\t\tinsBack: this.state.insBack,\r\n\t\t\t\tmriOrder: this.state.mriOrder,\r\n\t\t\t\tscan: this.state.scan || null,\r\n\t\t\t\thaveOrder: this.state.haveOrder,\r\n\t\t\t\tdob: this.state.dob,\r\n\t\t\t}));\r\n\t\t}\r\n\t}\r\n\r\n\tabstract render();\r\n}","import * as React from \"react\";\r\nimport {Link} from \"gatsby\";\r\n\r\nexport const BigButton = ({href, img, wide, text}) => (\r\n\t<Link\r\n\t\tto={href}\r\n\t\tclassName={`cta-link ${wide ? 'wider' : ''} w-inline-block`}\r\n\t>\r\n\t\t<img\r\n\t\t\tsrc={img}\r\n\t\t\tclassName=\"image\"\r\n\t\t/>\r\n\t\t<div>{text}</div>\r\n\t</Link>\r\n);\r\n\r\n","import * as React from \"react\";\r\n\r\nexport const YesNoQuestion = (props: {text: string, val: boolean | null, onChange: any, id: string, children?: any}) => (\r\n\t<div>\r\n\t\t<div className=\"inputrow\">\r\n\t\t\t<label htmlFor={props.id} className=\"flexlabel\">{props.text}<br /></label>\r\n\t\t\t<div className=\"flexinput\">\r\n\t\t\t\t<a href=\"javascript:void(0);\" onClick={() => props.onChange(true)} className={`button green small ${props.val === true && 'selected'} w-button`}>\r\n\t\t\t\t\tYes\r\n\t\t\t\t</a>\r\n\t\t\t\t<a href=\"javascript:void(0);\" onClick={() => props.onChange(false)} className={`button green small ${props.val === false && 'selected'} w-button`}>\r\n\t\t\t\t\tNo\r\n\t\t\t\t</a>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t{props.val === true && typeof props.children !== 'undefined' && <div className=\"inputrow\">\r\n            <span className=\"flexmargin\">&nbsp;</span>\r\n            <div className=\"flexsubitem\">\r\n\t\t\t{props.children}\r\n\t\t\t</div>\r\n\t\t</div>}\r\n\t</div>\r\n);\r\n\r\nexport const TextQuestion = ({text, val, onChange, id}) => (\r\n\t<div className=\"inputrow\"><label htmlFor={id} className=\"flexlabel\">{text}<br /></label>\r\n\t\t<input\r\n\t\t\ttype=\"text\"\r\n\t\t\tclassName=\"flexinput w-input\"\r\n\t\t\tmaxLength={256}\r\n\t\t\tname={id}\r\n\t\t\tonClick={(e) => onChange(e.currentTarget.value)}\r\n\t\t\tvalue={val || ''}\r\n\t\t\tdata-name={id}\r\n\t\t\tid={id}\r\n\t\t/>\r\n\t</div>\r\n);\r\n\r\n// export class ListQuestiton = ({text, val, onChange, id})"],"sourceRoot":""}