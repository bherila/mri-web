{"version":3,"sources":["webpack:///./src/components/FileUpload.tsx","webpack:///./src/pages/addl-info.tsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/models/SafetyState.ts","webpack:///./src/components/Header.tsx","webpack:///./src/components/LayoutRoot.tsx","webpack:///./src/components/LayoutMain.tsx","webpack:///./src/components/Footer.tsx","webpack:///./src/components/FooterNav.tsx","webpack:///./src/layouts/index.tsx","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/breadcrumb.tsx","webpack:///./src/api/api.ts","webpack:///./src/helpers/FormBasePage.tsx","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/helpers/phone.ts"],"names":["__webpack_require__","showImageOrPlaceholder","img","length","react","createElement","alt","src","className","style","maxHeight","maxWidth","Component","d","n","f","p","v","addl_info_$","addl_info_ContactInformation","ContactInformation","props","context","_FormBasePage","call","this","componentDidMount","_this","state","SafetyState","a","loadState","haveOrder","setState","saveState","render","_this2","layouts","id","breadcrumb","num","b","value","scan","slot","timeSlot","name","data-name","action","onSubmit","e","handleSubmit","dateOfBirth","weight","firstName","lastName","addressBlock","doctorName","doctorContact","uploadMri","insFront","insBack","type","onDrop","files","_this3","console","log","sObj","fd","FormData","append","ajax","url","api","enctype","processData","cacheData","contentType","data","then","o","JSON","parse","error","_this4","preventDefault","slotId","appointmentHandlerPOST","req","partitionKey","split","rowKey","lname","fname","address1","confirmed","email","phone","height","insuranceBackUrl","insuranceFrontUrl","insuranceCarrier","insuranceGroupNumber","insurancePolicyNumber","insuranceVerified","orderImageUrl","mriOrder","resourceId","serviceType","stringify","birthday","dob","serviceLength","search","authToken","withContrast","locationId","res","success","sessionStorage","setItem","Object","gatsby_browser_entry","navigate","err","message","alert","_this6","htmlFor","es","accept","_this7","_this8","_this9","maxLength","onChange","currentTarget","_this10","_this11","Fragment","field","address2","city","zip","display","_this12","_this13","required","_this14","_this15","FormBasePage","__webpack_exports__","default","g","160","t","r","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","withPrefix","push","replace","navigateTo","_wait_for_route_change__WEBPACK_IMPORTED_MODULE_3__","c","_public_page_renderer__WEBPACK_IMPORTED_MODULE_4__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_4___default","_parse_path__WEBPACK_IMPORTED_MODULE_5__","createContext","Consumer","staticQueryData","query","children","Error","propTypes","object","string","isRequired","func","answers","implants","currentImplant","overrideSafetyWarning","carrierNumber","groupNumber","policyNumber","optedIn","getItem","jsonState","assign","163","i","s","l","u","components_Header","_ref","objectDestructuringEmpty_default","href","data-collapse","data-animation","data-duration","role","StyledLayoutRoot","index_esm","target","components_LayoutRoot","components_LayoutMain","components_Footer","Helmet_default","integrity","crossOrigin","FooterNav","title","site","siteMetadata","meta","content","description","_991718019","m","module","exports","Chevron","react__WEBPACK_IMPORTED_MODULE_2__","width","translucent","Ez123","OrderBreadcrumb","gatsby__WEBPACK_IMPORTED_MODULE_3__","Link","to","MriTypeBreadcrumb","contrast","TimeslotBreadcrumb","169","h","E","F","z","BASE_PATH","BaseAPI","fetch","basePath","isomorphic_fetch__WEBPACK_IMPORTED_MODULE_4__","AuthApiFp","params","options","fetchArgs","urlObj","url__WEBPACK_IMPORTED_MODULE_3__","core_js_library_fn_object_assign__WEBPACK_IMPORTED_MODULE_5__","contentTypeHeader","fetchOptions","method","Content-Type","body","headers","format","AuthApiFetchParamCreator","response","status","json","AuthApi","_BaseAPI","apply","arguments","_babel_runtime_helpers_inheritsLoose__WEBPACK_IMPORTED_MODULE_1___default","prototype","auth","LeadGenApiFp","LeadGenApiFetchParamCreator","LeadGenApi","_BaseAPI2","_proto2","runGET","runPOST","QuestionApiFp","QuestionApiFetchParamCreator","QuestionApi","_BaseAPI4","getQuestions","ResourceApiFp","ResourceApiFetchParamCreator","ResourceApi","_BaseAPI5","_proto5","availabilityRulesDELETE","availabilityRulesGET","availabilityRulesPOST","availabilityRulesPUT","locationsGET","locationsPOST","ScheduleApiFp","ScheduleApiFetchParamCreator","ScheduleApi","_BaseAPI6","_proto6","appointmentHandlerDELETE","appointmentHandlerGET","appointmentHandlerPUT","timeSlotsGET","_React$Component","_models_SafetyState__WEBPACK_IMPORTED_MODULE_3__","_proto","getAns","q","ans","val","171","_page_renderer__WEBPACK_IMPORTED_MODULE_2__","_loader__WEBPACK_IMPORTED_MODULE_3__","ProdPageRenderer","location","pageResources","getResourcesForPathname","pathname","shape","174","175","177","179","181","220","formatPhone","ph","exec","formatDate","date","dt"],"mappings":"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","file":"component---src-pages-addl-info-tsx-7a5510310de9a48cd24b.js","sourcesContent":["import Dropzone from \"react-dropzone\";\r\nimport * as React from \"react\";\r\nimport {BASE_PATH} from \"ucshared\";\r\nconst $ = require('jquery');\r\n\r\nexport function showImageOrPlaceholder(img: string | null) {\r\n\tif (typeof img !== 'string' || img === null || img.length < 1) {\r\n\t\treturn <div>Click here to select picture/PDF</div>;\r\n\t}\r\n\treturn (\r\n\t\t<img alt=\"Uploaded image\" src={`https://mrisched9e42.blob.core.windows.net/uploads/${img}`} className=\"img-fluid\" style={{maxHeight: '100px', maxWidth: '100%'}}/>\r\n\t);\r\n}\r\n\r\nexport class FileUpload extends React.Component<{bucket: string, url: string, onNewUrl: (url: string)=>any}, {isLoading: boolean}> {\r\n\tconstructor(props, context) {\r\n\t\tsuper(props, context);\r\n\t\tthis.state = {isLoading: false};\r\n\t}\r\n\tpublic render() {\r\n\t\treturn (\r\n\t\t\t<Dropzone\r\n\t\t\t\taccept=\"image/*\"\r\n\t\t\t\tclassName=\"button green small w-button\"\r\n\t\t\t\tonDrop={(files) => this.onDrop(this.props.bucket, files)}\r\n\t\t\t>{showImageOrPlaceholder(this.props.url)}\r\n\t\t\t</Dropzone>\r\n\t\t);\r\n\t}\r\n\r\n\tprivate onDrop(bucket: string, files: File[]) {\r\n\t\tconst fd = new FormData();\r\n\t\tfd.append('file', files[0]);\r\n\r\n\t\t$.ajax({\r\n\t\t\turl: BASE_PATH + '/api/upload/?to=' + bucket,\r\n\t\t\ttype: 'POST',\r\n\t\t\tenctype: 'multipart/form-data',\r\n\t\t\tprocessData: false,  // Important!\r\n\t\t\tcacheData: false,\r\n\t\t\tcontentType: false,\r\n\t\t\tdata: fd,\r\n\t\t}).then(\r\n\t\t\t(data: any, textStatus: string, jqXhr: any) => {\r\n\t\t\t\tconsole.log(textStatus, data);\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tisLoading: false,\r\n\t\t\t\t\tuploadedUri: data,\r\n\t\t\t\t} as any, () => {\r\n\t\t\t\t\tif (this.props.onNewUrl) {\r\n\t\t\t\t\t\tthis.props.onNewUrl(data);\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t\t(error) => {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t},\r\n\t\t);\r\n\t}\r\n}\r\n","import * as React from 'react'\r\nimport { navigate } from 'gatsby'\r\nimport IndexLayout from '../layouts'\r\nimport {Ez123, MriTypeBreadcrumb, TimeslotBreadcrumb} from \"../components/breadcrumb\";\r\nimport Dropzone from \"react-dropzone\";\r\nimport {showImageOrPlaceholder} from \"../components/FileUpload\";\r\nimport {BASE_PATH, ScheduleApi} from \"../api/api\";\r\nimport {getAuthToken} from \"../helpers/authToken\";\r\nimport {SafetyState} from \"../models/SafetyState\";\r\nimport {FormBasePage} from \"../helpers/FormBasePage\";\r\nimport {formatDate} from \"../helpers/phone\";\r\nconst $ = require('jquery');\r\n\r\nclass ContactInformation extends FormBasePage {\r\n\tconstructor(props, context) {\r\n\t\tsuper(props, context);\r\n\t}\r\n\r\n\tpublic componentDidMount() {\r\n\t\tconst state = SafetyState.loadState();\r\n\t\tstate.haveOrder = false;\r\n\t\tthis.setState(state, () => this.saveState());\r\n\t}\r\n\r\n\tpublic render() {\r\n\t\treturn (\r\n\t\t\t<IndexLayout>\r\n\t\t\t\t<section id=\"Q1\" className=\"vspace80 w-container\">\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<Ez123 num={3}/>\r\n\t\t\t\t\t\t<div className=\"breadcrumb-stack\">\r\n\t\t\t\t\t\t\t<MriTypeBreadcrumb value={this.state.scan}/>\r\n\t\t\t\t\t\t\t<TimeslotBreadcrumb slot={this.state.timeSlot}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"vspace80 centered w-row\">\r\n\t\t\t\t\t\t<div className=\"w-hidden-small w-hidden-tiny w-col w-col-3\">\r\n\t\t\t\t\t\t\t{/*<img src=\"https://uploads-ssl.webflow.com/5b9e87c40899a487ba8091e4/5ba72c92e33cb6832a1bd949_idealMRI_lady_3.png\" alt=\"\"/>*/}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"w-col w-col-6\">\r\n\t\t\t\t\t\t\t<div className=\"w-form\">\r\n\t\t\t\t\t\t\t\t<form\r\n\t\t\t\t\t\t\t\t\tid=\"email-form\"\r\n\t\t\t\t\t\t\t\t\tname=\"email-form\"\r\n\t\t\t\t\t\t\t\t\tdata-name=\"Email Form\"\r\n\t\t\t\t\t\t\t\t\taction=\"#\"\r\n\t\t\t\t\t\t\t\t\tonSubmit={(e) => this.handleSubmit(e)}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<h3>Additional Information</h3>\r\n\t\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t\t<strong>Thanks! You're all set. </strong>We will give you\r\n\t\t\t\t\t\t\t\t\t\ta call to confirm any details. &nbsp;We'll also send you a\r\n\t\t\t\t\t\t\t\t\t\treminder before your scan. &nbsp;You can fill out this\r\n\t\t\t\t\t\t\t\t\t\tadditional information now, to save time. It takes about 2\r\n\t\t\t\t\t\t\t\t\t\tor 3 more minutes.\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t\t{this.dateOfBirth()}\r\n\t\t\t\t\t\t\t\t\t{/*{this.height()}*/}\r\n\t\t\t\t\t\t\t\t\t{this.weight()}\r\n\t\t\t\t\t\t\t\t\t{this.firstName()}\r\n\t\t\t\t\t\t\t\t\t{this.lastName()}\r\n\t\t\t\t\t\t\t\t\t{this.addressBlock()}\r\n\t\t\t\t\t\t\t\t\t{this.doctorName()}\r\n\t\t\t\t\t\t\t\t\t{this.doctorContact()}\r\n\t\t\t\t\t\t\t\t\t{this.uploadMri()}\r\n\t\t\t\t\t\t\t\t\t{this.insFront()}\r\n\t\t\t\t\t\t\t\t\t{this.insBack()}\r\n\t\t\t\t\t\t\t\t\t<div className=\"cta-subitem distributed\">\r\n\t\t\t\t\t\t\t\t\t\t<button className=\"cta-link wider w-inline-block\" type=\"submit\">\r\n\t\t\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\t\t\tsrc=\"https://uploads-ssl.webflow.com/5b9e87c40899a487ba8091e4/5b9ead2f3661e73d2f76eedd_Meet%20Our%20Team.svg\"\r\n\t\t\t\t\t\t\t\t\t\t\t\talt=\"Submit\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"image\"\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t<div>Submit</div>\r\n\t\t\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</form>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"w-hidden-small w-hidden-tiny w-col w-col-3\">\r\n\t\t\t\t\t\t\t{/*<img src=\"https://uploads-ssl.webflow.com/5b9e87c40899a487ba8091e4/5ba72c92e33cb6832a1bd949_idealMRI_lady_3.png\" alt=\"\"/>*/}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</section>\r\n\t\t\t</IndexLayout>\r\n\t\t);\r\n\t}\r\n\r\n\tprivate onDrop(insBack: string, files: File[]) {\r\n\t\tconsole.log(insBack, files);\r\n\t\tif (files.length) {\r\n\t\t\tif (files[0]) {\r\n\t\t\t\tconst sObj = {};\r\n\t\t\t\tsObj[insBack] = files[0].name;\r\n\t\t\t\tthis.setState(sObj, () => this.saveState());\r\n\t\t\t\tconst fd = new FormData();\r\n\t\t\t\tfd.append('file', files[0]);\r\n\t\t\t\t$.ajax({\r\n\t\t\t\t\turl: `${BASE_PATH}/api/file`,\r\n\t\t\t\t\ttype: 'POST',\r\n\t\t\t\t\tenctype: 'multipart/form-data',\r\n\t\t\t\t\tprocessData: false,  // Important!\r\n\t\t\t\t\tcacheData: false,\r\n\t\t\t\t\tcontentType: false,\r\n\t\t\t\t\tdata: fd,\r\n\t\t\t\t}).then(\r\n\t\t\t\t\t(data) => {\r\n\t\t\t\t\t\tconst o = {};\r\n\t\t\t\t\t\to[insBack] = JSON.parse(data)[0];\r\n\t\t\t\t\t\tthis.setState(o);\r\n\t\t\t\t\t\tconsole.log('success', o);\r\n\t\t\t\t\t},\r\n\t\t\t\t\t(error) => {\r\n\t\t\t\t\t\tconsole.log(error);\r\n\t\t\t\t\t},\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate handleSubmit(e: React.FormEvent<HTMLFormElement>) {\r\n\t\te.preventDefault();\r\n\t\tif (!this.state.timeSlot) {\r\n\t\t\talert('missing timeSlot');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst slotId = this.state.timeSlot.slotId || '';\r\n\t\tnew ScheduleApi().appointmentHandlerPOST({\r\n\t\t\treq: {\r\n\t\t\t\tpartitionKey: slotId.split(' ')[1], // extract location from slotId\r\n\t\t\t\trowKey: slotId,\r\n\t\t\t\tlastName: this.state.lname,\r\n\t\t\t\tfirstName: this.state.fname,\r\n\t\t\t\taddress1: '',\r\n\t\t\t\tconfirmed: false,\r\n\t\t\t\tdoctorName: this.state.doctorName,\r\n\t\t\t\temail: this.state.email,\r\n\t\t\t\tphone: this.state.phone,\r\n\t\t\t\theight: this.state.height || '',\r\n\t\t\t\tinsuranceBackUrl: this.state.insBack,\r\n\t\t\t\tinsuranceFrontUrl: this.state.insFront,\r\n\t\t\t\tinsuranceCarrier: '',\r\n\t\t\t\tinsuranceGroupNumber: '',\r\n\t\t\t\tinsurancePolicyNumber: '',\r\n\t\t\t\tinsuranceVerified: false,\r\n\t\t\t\torderImageUrl: this.state.mriOrder,\r\n\t\t\t\tresourceId: this.state.timeSlot.resourceId,\r\n\t\t\t\tserviceType: JSON.stringify(this.state.scan),\r\n\t\t\t\tweight: this.state.weight,\r\n\t\t\t\tbirthday: this.state.dob,\r\n\t\t\t\tserviceLength: 45, // TODO: Update service length?\r\n\t\t\t},\r\n\t\t\tsearch: '',\r\n\t\t\tauthToken: '',\r\n\t\t\twithContrast: false,\r\n\t\t\tlocationId: ''\r\n\t\t}).then((res) => {\r\n\t\t\tif (res.success && !!res.value && !!res.value.length) {\r\n\t\t\t\tsessionStorage.setItem('appointmentEntity', JSON.stringify(res.value[0] || null));\r\n\t\t\t\tnavigate('/safety-questions');\r\n\t\t\t} else {\r\n\t\t\t\tthis.setState({err: res.message || ''});\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tprivate height() {\r\n\t\treturn false; // hidden\r\n\t\treturn (\r\n\t\t\t<div className=\"inputrow\">\r\n\t\t\t\t<label htmlFor=\"Height\" className=\"flexlabel\">\r\n\t\t\t\t\tHeight\r\n\t\t\t\t</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tclassName=\"flexinput w-input\"\r\n\t\t\t\t\tmaxLength={256}\r\n\t\t\t\t\tname=\"Height\"\r\n\t\t\t\t\tdata-name=\"Height\"\r\n\t\t\t\t\tid=\"Height\"\r\n\t\t\t\t\tvalue={this.state.height}\r\n\t\t\t\t\tonChange={(e) => this.setState({height: e.currentTarget.value}, () => this.saveState())}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tprivate uploadMri() {\r\n\t\treturn (\r\n\t\t\t<div className=\"inputrow\">\r\n\t\t\t\t<label htmlFor=\"name-6\" className=\"flexlabel\">\r\n\t\t\t\t\tUpload MRI&nbsp;order\r\n\t\t\t\t</label>\r\n\t\t\t\t<div className=\"flexinput\">\r\n\t\t\t\t\t<Dropzone\r\n\t\t\t\t\t\taccept=\"image/*\"\r\n\t\t\t\t\t\tclassName=\"button green small w-button\"\r\n\t\t\t\t\t\tonDrop={(files) => this.onDrop('mriOrder', files)}\r\n\t\t\t\t\t>{showImageOrPlaceholder(this.state.mriOrder)}\r\n\t\t\t\t\t</Dropzone>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tprivate insFront() {\r\n\t\treturn (\r\n\t\t\t<div className=\"inputrow\">\r\n\t\t\t\t<label htmlFor=\"name-6\" className=\"flexlabel\">\r\n\t\t\t\t\t<strong>Insurance Card Front</strong>\r\n\t\t\t\t</label>\r\n\t\t\t\t<div className=\"flexinput\">\r\n\t\t\t\t\t<Dropzone\r\n\t\t\t\t\t\taccept=\"image/*\"\r\n\t\t\t\t\t\tclassName=\"button green small w-button\"\r\n\t\t\t\t\t\tonDrop={(files) => this.onDrop('insFront', files)}\r\n\t\t\t\t\t>{showImageOrPlaceholder(this.state.insFront)}\r\n\t\t\t\t\t</Dropzone>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tprivate insBack() {\r\n\t\treturn (\r\n\t\t\t<div className=\"inputrow\">\r\n\t\t\t\t<label htmlFor=\"name-6\" className=\"flexlabel\">\r\n\t\t\t\t\t<strong>Insurance Card Back</strong>\r\n\t\t\t\t</label>\r\n\t\t\t\t<div className=\"flexinput\">\r\n\t\t\t\t\t<Dropzone\r\n\t\t\t\t\t\taccept=\"image/*\"\r\n\t\t\t\t\t\tclassName=\"button green small w-button\"\r\n\t\t\t\t\t\tonDrop={(files) => this.onDrop('insBack', files)}\r\n\t\t\t\t\t>{showImageOrPlaceholder(this.state.insBack)}\r\n\t\t\t\t\t</Dropzone>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tprivate weight() {\r\n\t\treturn (\r\n\t\t\t<div className=\"inputrow\">\r\n\t\t\t\t<label htmlFor=\"Weight\" className=\"flexlabel\">\r\n\t\t\t\t\tWeight\r\n\t\t\t\t</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tclassName=\"flexinput w-input\"\r\n\t\t\t\t\tmaxLength={256}\r\n\t\t\t\t\tname=\"Weight\"\r\n\t\t\t\t\tdata-name=\"Weight\"\r\n\t\t\t\t\tid=\"Weight\"\r\n\t\t\t\t\tvalue={this.state.weight}\r\n\t\t\t\t\tonChange={(e) => this.setState({weight: e.currentTarget.value}, () => this.saveState())}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tprivate doctorName() {\r\n\t\treturn (\r\n\t\t\t<div className=\"inputrow\">\r\n\t\t\t\t<label htmlFor=\"DoctorName\" className=\"flexlabel\">\r\n\t\t\t\t\tWho is your doctor?\r\n\t\t\t\t</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tclassName=\"flexinput w-input\"\r\n\t\t\t\t\tmaxLength={256}\r\n\t\t\t\t\tname=\"DoctorName\"\r\n\t\t\t\t\tdata-name=\"DoctorName\"\r\n\t\t\t\t\tid=\"DoctorName\"\r\n\t\t\t\t\tvalue={this.state.doctorName}\r\n\t\t\t\t\tonChange={(e) => this.setState({doctorName: e.currentTarget.value}, () => this.saveState())}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tprivate addressBlock() {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<div className=\"inputrow\">\r\n\t\t\t\t\t{this.field('address1', 'Address', this.state.address1, (address1) => this.setState({address1}))}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"inputrow\">\r\n\t\t\t\t\t{this.field('address2', 'Address 2', this.state.address2, (address2) => this.setState({address2}))}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"inputrow\">\r\n\t\t\t\t\t{this.field('city', 'City', this.state.city, (city) => this.setState({city}))}\r\n\t\t\t\t\t{this.field('state', 'State', this.state.state, (state) => this.setState({state}))}\r\n\t\t\t\t\t{this.field('zip', 'Zip', this.state.zip, (zip) => this.setState({zip}))}\r\n\t\t\t\t</div>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n\r\n\tprivate field(name: string, display: string, value: string, onChange: any) {\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<label htmlFor={name} className=\"flexlabel\">\r\n\t\t\t\t\t{display}\r\n\t\t\t\t</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tclassName=\"flexinput w-input\"\r\n\t\t\t\t\tmaxLength={256}\r\n\t\t\t\t\tname={name}\r\n\t\t\t\t\tdata-name={name}\r\n\t\t\t\t\tid={name}\r\n\t\t\t\t\tvalue={value}\r\n\t\t\t\t\tonChange={(e) => onChange(e.currentTarget.value)}\r\n\t\t\t\t/>\r\n\t\t\t</React.Fragment>\r\n\t\t);\r\n\t}\r\n\r\n\tprivate doctorContact() {\r\n\t\treturn (\r\n\t\t\t<div className=\"inputrow\">\r\n\t\t\t\t<label htmlFor=\"DoctorName\" className=\"flexlabel\">\r\n\t\t\t\t\tDoctor contact information\r\n\t\t\t\t</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tclassName=\"flexinput w-input\"\r\n\t\t\t\t\tmaxLength={256}\r\n\t\t\t\t\tname=\"doctorContact\"\r\n\t\t\t\t\tdata-name=\"doctorContact\"\r\n\t\t\t\t\tid=\"doctorContact\"\r\n\t\t\t\t\tvalue={this.state.doctorContact}\r\n\t\t\t\t\tonChange={(e) => this.setState({doctorContact: e.currentTarget.value}, () => this.saveState())}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tprivate dateOfBirth() {\r\n\t\treturn (\r\n\t\t\t<div className=\"inputrow\">\r\n\t\t\t\t<label htmlFor=\"email\" className=\"flexlabel\">Date of Birth</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tclassName=\"flexinput w-input\"\r\n\t\t\t\t\tmaxLength={256}\r\n\t\t\t\t\tname=\"dob\"\r\n\t\t\t\t\tdata-name=\"Date of Birth\"\r\n\t\t\t\t\tid=\"dob\"\r\n\t\t\t\t\trequired\r\n\t\t\t\t\tvalue={this.state.dob}\r\n\t\t\t\t\tonChange={(e) => this.setState({dob: formatDate(e.currentTarget.value)}, () => this.saveState())}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tprivate firstName() {\r\n\t\treturn (\r\n\t\t\t<div className=\"inputrow\">\r\n\t\t\t\t<label htmlFor=\"fname\" className=\"flexlabel\">First name</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tclassName=\"flexinput w-input\"\r\n\t\t\t\t\tmaxLength={256}\r\n\t\t\t\t\tname=\"fname\"\r\n\t\t\t\t\tdata-name=\"First Name\"\r\n\t\t\t\t\tid=\"fname\"\r\n\t\t\t\t\tvalue={this.state.fname}\r\n\t\t\t\t\tonChange={(e) => this.setState({fname: e.currentTarget.value}, () => this.saveState())}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tprivate lastName() {\r\n\t\treturn (\r\n\t\t\t<div className=\"inputrow\">\r\n\t\t\t\t<label htmlFor=\"lname\" className=\"flexlabel\">Last name</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tclassName=\"flexinput w-input\"\r\n\t\t\t\t\tmaxLength={256}\r\n\t\t\t\t\tname=\"lname\"\r\n\t\t\t\t\tdata-name=\"Last Name\"\r\n\t\t\t\t\tid=\"lname\"\r\n\t\t\t\t\tvalue={this.state.lname}\r\n\t\t\t\t\tonChange={(e) => this.setState({lname: e.currentTarget.value}, () => this.saveState())}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default ContactInformation;\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport { waitForRouteChange } from \"./wait-for-route-change\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  waitForRouteChange,\n}\n","import {SlotAvailabilityTime} from \"../api/api\";\r\nimport {IScan} from \"./Scan\";\r\n\r\nexport class SafetyState {\r\n\tconstructor() {\r\n\t\tthis.fname =  '';\r\n\t\tthis.lname =  '';\r\n\t\tthis.answers =  {};\r\n\t\tthis.implants =  [];\r\n\t\tthis.currentImplant =  '';\r\n\t\tthis.scan =  null;\r\n\t\tthis.haveOrder =  false;\r\n\t\tthis.overrideSafetyWarning =  false;\r\n\t\tthis.email = '';\r\n\t\tthis.phone = '';\r\n\t\tthis.height = '';\r\n\t\tthis.weight = '';\r\n\t\tthis.doctorName = '';\r\n\t\tthis.doctorContact = '';\r\n\t\tthis.insFront = '';\r\n\t\tthis.insBack = '';\r\n\t\tthis.mriOrder = '';\r\n\t\tif (typeof sessionStorage !== 'undefined') {\r\n\t\t\tthis.timeSlot = JSON.parse(sessionStorage.getItem('timeSlot') || '{}');\r\n\t\t} else {\r\n\t\t\tthis.timeSlot = null;\r\n\t\t}\r\n\t\tthis.err = '';\r\n\t\tthis.dob = '';\r\n\t\tthis.carrierNumber = '';\r\n\t\tthis.groupNumber = '';\r\n\t\tthis.policyNumber = '';\r\n\t\tthis.address1 = '';\r\n\t\tthis.address2 = '';\r\n\t\tthis.city = '';\r\n\t\tthis.state = '';\r\n\t\tthis.zip = '';\r\n\t\tthis.optedIn = true;\r\n\t}\r\n\tpublic fname: string;\r\n\tpublic lname: string;\r\n\tpublic email: string;\r\n\tpublic phone: string;\r\n\tpublic answers: any;\r\n\tpublic implants: string[];\r\n\tpublic currentImplant: string;\r\n\tpublic haveOrder: boolean;\r\n\tpublic scan: IScan | null;\r\n\tpublic overrideSafetyWarning: boolean;\r\n\tpublic height: string;\r\n\tpublic weight: string;\r\n\tpublic doctorName: string;\r\n\tpublic doctorContact: string;\r\n\tpublic insFront: string;\r\n\tpublic insBack: string;\r\n\tpublic mriOrder: string;\r\n\tpublic carrierNumber: string;\r\n\tpublic groupNumber: string;\r\n\tpublic policyNumber: string;\r\n\tpublic timeSlot: SlotAvailabilityTime | null;\r\n\tpublic err: string;\r\n\tpublic dob: string;\r\n\tpublic address1: string;\r\n\tpublic address2: string;\r\n\tpublic city: string;\r\n\tpublic state: string;\r\n\tpublic zip: string;\r\n\tpublic optedIn: boolean;\r\n\r\n\tpublic static loadState(): SafetyState {\r\n\t\tif (typeof sessionStorage !== 'undefined') {\r\n\t\t\tconst jsonState = JSON.parse(sessionStorage.getItem('wizard') || '{}');\r\n\t\t\tconst o = {\r\n\t\t\t\t// fname: sessionStorage.getItem('fname') || '',\r\n\t\t\t\t// lname: sessionStorage.getItem('lname') || '',\r\n\t\t\t\t// email: sessionStorage.getItem('email') || '',\r\n\t\t\t\t// phone: sessionStorage.getItem('phone') || '',\r\n\t\t\t\t// height: sessionStorage.getItem('height') || '',\r\n\t\t\t\t// weight: sessionStorage.getItem('weight') || '',\r\n\t\t\t\t// doctorName: sessionStorage.getItem('doctorName') || '',\r\n\t\t\t\t// insFront: sessionStorage.getItem('insFront') || '',\r\n\t\t\t\t// insBack: sessionStorage.getItem('insBack') || '',\r\n\t\t\t\t// mriOrder: sessionStorage.getItem('mriOrder') || '',\r\n\t\t\t\tscan: JSON.parse(sessionStorage.getItem('scan') || '{}'),\r\n\t\t\t\thaveOrder: sessionStorage.getItem('haveOrder') === 'true',\r\n\t\t\t};\r\n\t\t\treturn Object.assign(new SafetyState(), jsonState, o);\r\n\t\t}\r\n\t\treturn new SafetyState();\r\n\t}\r\n}\r\n","import * as React from 'react'\r\nimport styled from 'react-emotion'\r\nimport { transparentize } from 'polished'\r\nimport { Link } from 'gatsby'\r\n\r\nimport { heights, dimensions, colors } from '../styles/variables'\r\nimport Container from './Container'\r\nimport * as Webflow from '../styles/webflow';\r\nimport { css } from \"emotion\";\r\n\r\nconst StyledHeader = styled.header('navContainer');\r\n\r\nconst Header: React.SFC<{}> = ({}) => (\r\n\t<header>\r\n\t\t<div className=\"nav-grid\">\r\n\t\t\t<div id=\"w-node-82dfbff5e208-14f3913a\" className=\"header-cta-top\">\r\n\t\t\t\t<div className=\"header-inline-block\">\r\n\t\t\t\t\t<div className=\"cta-heading inline-block blue\">Call :</div>\r\n\t\t\t\t\t<div className=\"cta-heading inline-block\"><a href=\"tel:+18334332567\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t className=\"white\">833-IDEAL-MR</a></div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<a href=\"/schedule\" className=\"button-3\">Schedule Online</a></div>\r\n\t\t\t<a href=\"/\" id=\"w-node-82dfbff5e20f-14f3913a\" className=\"brand w-nav-brand w--current\"><img\r\n\t\t\t\tsrc=\"https://uploads-ssl.webflow.com/5b9e87c40899a487ba8091e4/5ba3081aff7d475f9a6fa6d1_Logo%20Dark.svg\"\r\n\t\t\t\talt=\"\" className=\"image-3\"/></a>\r\n\t\t\t<div data-collapse=\"medium\" data-animation=\"default\" data-duration=\"400\" id=\"w-node-82dfbff5e211-14f3913a\"\r\n\t\t\t\t className=\"navbar w-nav\">\r\n\t\t\t\t<nav role=\"navigation\" className=\"navigation-menu w-nav-menu\"><a href=\"/why-ideal-mri\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t className=\"navigation-link-2 white w-nav-link\">Why\r\n\t\t\t\t\tideal MRI</a><a href=\"/for-clinicians\" className=\"navigation-link-2 white w-nav-link\">Meet Our\r\n\t\t\t\t\tTeam</a><a href=\"/what-to-expect\" className=\"navigation-link-2 white w-nav-link\">What to\r\n\t\t\t\t\tExpect</a><a href=\"/pricing-and-insurance\"\r\n\t\t\t\t\t\t\t\t className=\"navigation-link-2 white w-nav-link\">Pricing &amp; Insurance</a><a\r\n\t\t\t\t\thref=\"/for-clinicians\" className=\"navigation-link-2 white w-nav-link\">For Clinicians</a><a\r\n\t\t\t\t\thref=\"/come-see-us\" className=\"navigation-link-2 white w-nav-link\">Find Us</a></nav>\r\n\t\t\t\t<div className=\"hamburger-button-2 white w-nav-button\">\r\n\t\t\t\t\t<div className=\"w-icon-nav-menu\"></div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div className=\"nav-spacer\">&nbsp;</div>\r\n\t</header>\r\n);\r\n\r\nexport default Header\r\n","import * as React from 'react'\r\nimport styled from 'react-emotion'\r\n\r\nconst StyledLayoutRoot = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-height: 100vh;\r\n`\r\n\r\ninterface LayoutRootProps {\r\n  className?: string\r\n}\r\n\r\nconst LayoutRoot: React.SFC<LayoutRootProps> = ({ children, className }) => (\r\n  <StyledLayoutRoot className={className}>{children}</StyledLayoutRoot>\r\n)\r\n\r\nexport default LayoutRoot\r\n","import * as React from 'react'\r\n// import styled from 'react-emotion'\r\n// const StyledLayoutMain = styled.main`\r\n//   display: flex;\r\n//   flex-direction: column;\r\n//   flex: 1;\r\n//\r\n\r\ninterface LayoutMainProps {\r\n  className?: string\r\n}\r\n\r\n// <StyledLayoutMain className={className}>{children}</StyledLayoutMain>\r\nconst LayoutMain: React.SFC<LayoutMainProps> = ({ children, className }) => (\r\n  <main className={className || \"white-section\"}>\r\n      <div className=\"vspace80 w-container\">\r\n          {children}\r\n      </div>\r\n  </main>\r\n);\r\n\r\nexport default LayoutMain\r\n","import * as React from 'react'\r\nimport Helmet from \"react-helmet\";\r\n\r\nconst Footer: React.SFC<{}> = ({}) => (\r\n\t<footer className=\"cta-section centered-accented\">\r\n\t\t<div className=\"cta-footer\">\r\n\t\t\t<div className=\"footer-inline-block\">\r\n\t\t\t\t<h2 className=\"cta-heading inline-block blue\"><a href=\"tel:+18334332567\">Call</a> : </h2>\r\n\t\t\t\t<h2 className=\"cta-heading inline-block\"><a href=\"tel:+18334332567\" className=\"white\">833-IDEAL-MR</a>\r\n\t\t\t\t</h2>\r\n\t\t\t</div>\r\n\t\t\t<a href=\"/schedule\" className=\"button large\">Schedule Online</a></div>\r\n\t\t<div className=\"cta-footer\"><img\r\n\t\t\tsrc=\"https://uploads-ssl.webflow.com/5b9e87c40899a487ba8091e4/5ba3081aff7d475f9a6fa6d1_Logo%20Dark.svg\"\r\n\t\t\theight=\"60\" alt=\"\" className=\"cta-branding\"/><a href=\"/policies-and-hipaa-notice\">Policies and\r\n\t\t\tInformation</a></div>\r\n\t\t<Helmet>\r\n\t\t\t<script src=\"https://code.jquery.com/jquery-3.3.1.min.js\" type=\"text/javascript\"\r\n\t\t\t\t\tintegrity=\"sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8=\" crossOrigin=\"anonymous\" />\r\n\t\t\t<script src=\"https://uploads-ssl.webflow.com/5b9e87c40899a487ba8091e4/js/ideal-mri.71c22ec14.js\"\r\n\t\t\t\t\ttype=\"text/javascript\" />\r\n\t\t</Helmet>\r\n\t</footer>\r\n);\r\n\r\nexport default Footer\r\n","import * as React from 'react'\r\n\r\nconst Footer: React.SFC<{}> = ({}) => (\r\n\t<section className=\"cta-section\">\r\n\t\t<div className=\"w-container\">\r\n\t\t\t<div className=\"w-layout-grid grid-2\"><a href=\"/why-ideal-mri\" id=\"w-node-774288a9e25a-774089fe\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t className=\"cta-grid-item w-inline-block\"><img\r\n\t\t\t\tsrc=\"https://uploads-ssl.webflow.com/5b9e87c40899a487ba8091e4/5b9ead31fb9e09c21b36b101_Why.svg\" alt=\"\"\r\n\t\t\t\tclassName=\"cta-button-image\"/>\r\n\t\t\t\t<div id=\"w-node-774288a9e25c-774089fe\">Why ideal MRI</div>\r\n\t\t\t</a><a href=\"/what-to-expect\" id=\"w-node-774288a9e25e-774089fe\"\r\n\t\t\t\t   className=\"cta-grid-item w-inline-block\"><img\r\n\t\t\t\tsrc=\"https://uploads-ssl.webflow.com/5b9e87c40899a487ba8091e4/5b9ead2f69d670128b342c0a_Expect.svg\"\r\n\t\t\t\talt=\"\" className=\"cta-button-image\"/>\r\n\t\t\t\t<div>What to Expect</div>\r\n\t\t\t</a><a href=\"/meet-our-team\" id=\"w-node-774288a9e262-774089fe\" className=\"cta-grid-item w-inline-block\"><img\r\n\t\t\t\tsrc=\"https://uploads-ssl.webflow.com/5b9e87c40899a487ba8091e4/5b9ead2f3661e73d2f76eedd_Meet%20Our%20Team.svg\"\r\n\t\t\t\talt=\"\" className=\"cta-button-image\"/>\r\n\t\t\t\t<div>Meet Our Team</div>\r\n\t\t\t</a><a href=\"/for-clinicians\" id=\"w-node-774288a9e266-774089fe\"\r\n\t\t\t\t   className=\"cta-grid-item w-inline-block\"><img\r\n\t\t\t\tsrc=\"https://uploads-ssl.webflow.com/5b9e87c40899a487ba8091e4/5b9ead313661e7266876eedf_Providers.svg\"\r\n\t\t\t\talt=\"\" className=\"cta-button-image\"/>\r\n\t\t\t\t<div>For Clinicians</div>\r\n\t\t\t</a><a href=\"/pricing-and-insurance\" id=\"w-node-774288a9e26a-774089fe\"\r\n\t\t\t\t   className=\"cta-grid-item w-inline-block\"><img\r\n\t\t\t\tsrc=\"https://uploads-ssl.webflow.com/5b9e87c40899a487ba8091e4/5b9ead313661e7547b76eee0_Pricing.svg\"\r\n\t\t\t\talt=\"\" className=\"cta-button-image\"/>\r\n\t\t\t\t<div>Pricing &amp; Insurance</div>\r\n\t\t\t</a><a href=\"/come-see-us\" id=\"w-node-774288a9e26e-774089fe\" className=\"cta-grid-item w-inline-block\"><img\r\n\t\t\t\tsrc=\"https://uploads-ssl.webflow.com/5b9e87c40899a487ba8091e4/5b9ead2f08470e4beefa3f54_Find%20Us.svg\"\r\n\t\t\t\talt=\"\" className=\"cta-button-image\"/>\r\n\t\t\t\t<div>Find Us</div>\r\n\t\t\t</a></div>\r\n\t\t</div>\r\n\t</section>\r\n);\r\n\r\nexport default Footer\r\n","import * as React from 'react'\r\nimport Helmet from 'react-helmet'\r\nimport {StaticQuery, graphql} from 'gatsby'\r\n\r\n// import 'modern-normalize'\r\n// import '../styles/normalize'\r\nimport '../styles/webflow.css'\r\nimport '../styles/webflow.grid.css'\r\nimport '../styles/animate.css'\r\nimport '../styles/tables.css'\r\n\r\nimport Header from '../components/Header'\r\nimport LayoutRoot from '../components/LayoutRoot'\r\nimport LayoutMain from '../components/LayoutMain'\r\nimport Footer from \"../components/Footer\";\r\nimport FooterNav from \"../components/FooterNav\";\r\n\r\ntype StaticQueryProps = {\r\n\tsite: {\r\n\t\tsiteMetadata: {\r\n\t\t\ttitle: string\r\n\t\t\tdescription: string\r\n\t\t}\r\n\t}\r\n}\r\n\r\nconst IndexLayout: React.SFC = ({children}) => (\r\n\t<StaticQuery\r\n\t\tquery={graphql`\r\n      query IndexLayoutQuery {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n          }\r\n        }\r\n      }\r\n    `}\r\n\t\trender={(data: StaticQueryProps) => (\r\n\t\t\t<LayoutRoot>\r\n\t\t\t\t<Helmet\r\n\t\t\t\t\ttitle={data.site.siteMetadata.title}\r\n\t\t\t\t\tmeta={[\r\n\t\t\t\t\t\t{name: 'description', content: data.site.siteMetadata.description},\r\n\t\t\t\t\t\t{name: 'keywords', content: 'gatsbyjs, gatsby, javascript, sample, something'}\r\n\t\t\t\t\t]}\r\n\t\t\t\t/>\r\n\t\t\t\t<Header/>\r\n\t\t\t\t<LayoutMain>{children}</LayoutMain>\r\n\t\t\t\t<FooterNav/>\r\n\t\t\t\t<Footer/>\r\n\t\t\t</LayoutRoot>\r\n\t\t)}\r\n\t/>\r\n)\r\n\r\nexport default IndexLayout\r\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import * as React from 'react';\r\nimport {Link} from 'gatsby';\r\nimport {SlotAvailabilityTime} from \"../api/api\";\r\n\r\nconst Chevron = (props: {translucent?: boolean}) => (\r\n\t<img\r\n\t\tsrc=\"https://uploads-ssl.webflow.com/5b9e87c40899a487ba8091e4/5be12c8e888fb5963088dc64_chevron-right-blue-2.svg\"\r\n\t\twidth=\"38\" height=\"38\" alt=\"Chevron right\" className={props.translucent ? 'translucent' : ''}/>\r\n);\r\n\r\nexport const Ez123 = (props: {num: number}) => (\r\n\t<div>\r\n\t\t<div className=\"breadcrumb-row\">\r\n\t\t\t<div className={'circled ' + (props.num < 1 ? 'translucent' : '') }>1</div>\r\n\t\t\t<Chevron translucent={props.num < 2} />\r\n\t\t\t<div className={'circled ' + (props.num < 2 ? 'translucent' : '') }>2</div>\r\n\t\t\t<Chevron translucent={props.num < 3} />\r\n\t\t\t<div className={'circled ' + (props.num < 3 ? 'translucent' : '') }>3</div>\r\n\t\t</div>\r\n\t\t<div className=\"breadcrumb-row\">\r\n\t\t\t{props.num === 1 && <h3><strong>Step 1.</strong> Your details</h3>}\r\n\t\t\t{props.num === 2 && <h3><strong>Step 2.</strong> Choose your scan</h3>}\r\n\t\t\t{props.num === 3 && <h3><strong>Step 3.</strong> Health &amp; Safety Information</h3>}\r\n\t\t</div>\r\n\t</div>\r\n);\r\n\r\nexport const OrderBreadcrumb = (props: {value: boolean}) => (\r\n    <Link to=\"/have-order\"\r\n       className=\"breadcrumb w-button\" style={{display: 'none'}}>\r\n\t\t{props.value ? 'Have Doctor\\'s Order' : 'No Order'} ✓\r\n\t</Link>\r\n);\r\n\r\nexport const MriTypeBreadcrumb = ({value}) => {\r\n\tif (!value) {\r\n\t\treturn (\r\n\t\t\t<Link to=\"/mri-type\" className=\"breadcrumb w-button\">\r\n\t\t\t\tClick here to select MRI type\r\n\t\t\t</Link>\r\n\t\t);\r\n\t}\r\n\tif (typeof value === 'string') {\r\n\t\treturn (\r\n\t\t\t<Link to=\"/mri-type\" className=\"breadcrumb w-button\">\r\n\t\t\t\tScan type: {value} &times;\r\n\t\t\t</Link>\r\n\t\t);\r\n\t}\r\n\treturn (\r\n\t\t<Link to=\"/mri-type\" className=\"breadcrumb w-button\">\r\n\t\t\tScan type: {value.name || 'e!name'} {value.contrast || 'e!contrast'} &times;\r\n\t\t</Link>\r\n\t)\r\n};\r\n\r\nexport const TimeslotBreadcrumb = (props: {slot: SlotAvailabilityTime | null, reserved?: boolean}) => (\r\n\t!!props.slot ? (\r\n\t\t<Link to=\"/pick-time\" className=\"breadcrumb w-button\">\r\n\t\t\t{(props.slot.slotId || 'no time selected').replace(/(\\d{4})-(\\d{2})-(\\d{2})T([^\\s]{5}).*/g, \"$2/$3/$1 at $4\")} &times;<br /><small>(not yet reserved)</small>\r\n\t\t</Link>\r\n\t) : <div />\r\n);\r\n","/**\r\n * ideal MRI\r\n * Signup Center API\r\n *\r\n * OpenAPI spec version: v1\r\n * Contact: ben@herila.net\r\n *\r\n * NOTE: This class is auto generated by the swagger code generator program.\r\n * https://github.com/swagger-api/swagger-codegen.git\r\n * Do not edit the class manually.\r\n */\r\n\r\nimport * as querystring from \"querystring\";\r\nimport * as url from \"url\";\r\n\r\nimport * as isomorphicFetch from \"isomorphic-fetch\";\r\nimport * as assign from \"core-js/library/fn/object/assign\";\r\n\r\ninterface Dictionary<T> { [index: string]: T; }\r\nexport interface FetchAPI { (url: string, init?: any): Promise<any>; }\r\n\r\nexport const BASE_PATH = \"https://mrisched.azurewebsites.net\".replace(/\\/+$/, \"\");\r\n\r\nexport interface FetchArgs {\r\n    url: string;\r\n    options: any;\r\n}\r\n\r\nexport class BaseAPI {\r\n    basePath: string;\r\n    fetch: FetchAPI;\r\n\r\n    constructor(fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) {\r\n        this.basePath = basePath;\r\n        this.fetch = fetch;\r\n    }\r\n};\r\n\r\nexport interface ApiResultListAppointment {\r\n    \"value\"?: Array<Appointment>;\r\n    \"success\"?: boolean;\r\n    \"message\"?: string;\r\n    \"stackTrace\"?: Array<Stack>;\r\n}\r\n\r\nexport interface ApiResultListAvailabilityRule {\r\n    \"value\"?: Array<AvailabilityRule>;\r\n    \"success\"?: boolean;\r\n    \"message\"?: string;\r\n    \"stackTrace\"?: Array<Stack>;\r\n}\r\n\r\nexport interface ApiResultListSlotAvailabilityDate {\r\n    \"value\"?: Array<SlotAvailabilityDate>;\r\n    \"success\"?: boolean;\r\n    \"message\"?: string;\r\n    \"stackTrace\"?: Array<Stack>;\r\n}\r\n\r\nexport interface Appointment {\r\n    \"resourceId\"?: string;\r\n    \"serviceType\"?: string;\r\n    \"serviceLength\"?: number;\r\n    \"firstName\"?: string;\r\n    \"lastName\"?: string;\r\n    \"phone\"?: string;\r\n    \"email\"?: string;\r\n    \"address1\"?: string;\r\n    \"city\"?: string;\r\n    \"state\"?: string;\r\n    \"zip\"?: string;\r\n    \"height\"?: string;\r\n    \"weight\"?: string;\r\n    \"reminder\"?: number;\r\n    \"doctorName\"?: string;\r\n    \"doctorPhone\"?: string;\r\n    \"insuranceCarrier\"?: string;\r\n    \"insuranceGroupNumber\"?: string;\r\n    \"insurancePolicyNumber\"?: string;\r\n    \"insuranceVerified\"?: boolean;\r\n    \"priorAuthObtained\"?: boolean;\r\n    \"orderEnteredToRIS\"?: boolean;\r\n    \"patientWasCalled\"?: boolean;\r\n    \"confirmed\"?: boolean;\r\n    \"orderImageUrl\"?: string;\r\n    \"insuranceFrontUrl\"?: string;\r\n    \"insuranceBackUrl\"?: string;\r\n    \"surveyDataJson\"?: string;\r\n    \"approvedDate\"?: Date;\r\n    \"submittedDate\"?: Date;\r\n    \"confirmedDate\"?: Date;\r\n    \"birthday\"?: string;\r\n    \"partitionKey\"?: string;\r\n    \"rowKey\"?: string;\r\n    \"timestamp\"?: Date;\r\n    \"eTag\"?: string;\r\n}\r\n\r\nexport interface AvailabilityRule {\r\n    \"priority\"?: number;\r\n    \"resourceID\"?: string;\r\n    \"onThisDay\"?: string;\r\n    \"startTime\"?: string;\r\n    \"endTime\"?: string;\r\n    \"comment\"?: string;\r\n    \"status\"?: string;\r\n    \"partitionKey\"?: string;\r\n    \"rowKey\"?: string;\r\n    \"timestamp\"?: Date;\r\n    \"eTag\"?: string;\r\n}\r\n\r\nexport interface CustomerLead {\r\n    \"firstName\"?: string;\r\n    \"lastName\"?: string;\r\n    \"dob\"?: string;\r\n    \"phone\"?: string;\r\n    \"email\"?: string;\r\n    \"serviceType\"?: string;\r\n    \"timeSlot\"?: string;\r\n    \"withContrast\"?: boolean;\r\n    \"partitionKey\"?: string;\r\n    \"rowKey\"?: string;\r\n    \"timestamp\"?: Date;\r\n    \"eTag\"?: string;\r\n}\r\n\r\nexport interface Location {\r\n    \"partitionKey\"?: string;\r\n    \"rowKey\"?: string;\r\n    \"timestamp\"?: Date;\r\n    \"eTag\"?: string;\r\n}\r\n\r\nexport interface SlotAvailabilityDate {\r\n    \"date\"?: Date;\r\n    \"friendlyBegin\"?: string;\r\n    \"times\"?: Array<SlotAvailabilityTime>;\r\n}\r\n\r\nexport interface SlotAvailabilityTime {\r\n    \"time\"?: string;\r\n    \"resourceId\"?: string;\r\n    \"isHidden\"?: boolean;\r\n    \"isAvailable\"?: boolean;\r\n    \"isContrastAvailable\"?: boolean;\r\n    \"isContrastRequired\"?: boolean;\r\n    \"linkedAppointment\"?: Appointment;\r\n    \"slotId\"?: string;\r\n}\r\n\r\nexport interface Stack {\r\n    \"in\"?: string;\r\n    \"at\"?: string;\r\n}\r\n\r\nexport interface SurveyQuestion {\r\n    \"questionId\"?: string;\r\n    \"questionShowIf\"?: string;\r\n    \"questionShowIfAnswer\"?: string;\r\n    \"questionText\"?: string;\r\n    \"questionType\"?: string;\r\n    \"isRequired\"?: boolean;\r\n    \"isHidden\"?: boolean;\r\n    \"order\"?: number;\r\n    \"partitionKey\"?: string;\r\n    \"rowKey\"?: string;\r\n    \"timestamp\"?: Date;\r\n    \"eTag\"?: string;\r\n}\r\n\r\nexport interface TableResult {\r\n    \"result\"?: any;\r\n    \"httpStatusCode\"?: number;\r\n    \"etag\"?: string;\r\n}\r\n\r\nexport interface User {\r\n    \"apiKey\"?: string;\r\n    \"immutableId\"?: string;\r\n    \"referenceRowKey\"?: string;\r\n    \"partitionKey\"?: string;\r\n    \"rowKey\"?: string;\r\n    \"timestamp\"?: Date;\r\n    \"eTag\"?: string;\r\n}\r\n\r\n\r\n\r\n/**\r\n * AuthApi - fetch parameter creator\r\n */\r\nexport const AuthApiFetchParamCreator = {\r\n    /**\r\n     *\r\n     * @summary Auth\r\n     * @param req\r\n     * @param authToken\r\n     */\r\n    auth(params: {  \"req\"?: User; \"authToken\"?: string; }, options?: any): FetchArgs {\r\n        const baseUrl = `/api/auth`;\r\n        let urlObj = url.parse(baseUrl, true);\r\n        urlObj.query = assign({}, urlObj.query, {\r\n            \"authToken\": params[\"authToken\"],\r\n        });\r\n        let fetchOptions: RequestInit = assign({}, { method: \"POST\" }, options);\r\n\r\n        let contentTypeHeader: Dictionary<string> = {};\r\n        contentTypeHeader = { \"Content-Type\": \"application/json\" };\r\n        if (params[\"req\"]) {\r\n            fetchOptions.body = JSON.stringify(params[\"req\"] || {});\r\n        }\r\n        if (contentTypeHeader) {\r\n            fetchOptions.headers = assign({}, contentTypeHeader, fetchOptions.headers);\r\n        }\r\n        return {\r\n            url: url.format(urlObj),\r\n            options: fetchOptions,\r\n        };\r\n    },\r\n};\r\n\r\n/**\r\n * AuthApi - functional programming interface\r\n */\r\nexport const AuthApiFp = {\r\n    /**\r\n     *\r\n     * @summary Auth\r\n     * @param req\r\n     * @param authToken\r\n     */\r\n    auth(params: { \"req\"?: User; \"authToken\"?: string;  }, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<User> {\r\n        const fetchArgs = AuthApiFetchParamCreator.auth(params, options);\r\n        return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {\r\n            return fetch(basePath + fetchArgs.url, fetchArgs.options).then((response) => {\r\n                if (response.status >= 200 && response.status < 300) {\r\n                    return response.json();\r\n                } else {\r\n                    throw response;\r\n                }\r\n            });\r\n        };\r\n    },\r\n};\r\n\r\n/**\r\n * AuthApi - object-oriented interface\r\n */\r\nexport class AuthApi extends BaseAPI {\r\n    /**\r\n     *\r\n     * @summary Auth\r\n     * @param req\r\n     * @param authToken\r\n     */\r\n    auth(params: {  \"req\"?: User; \"authToken\"?: string; }, options?: any) {\r\n        return AuthApiFp.auth(params, options)(this.fetch, this.basePath);\r\n    }\r\n};\r\n\r\n/**\r\n * AuthApi - factory interface\r\n */\r\nexport const AuthApiFactory = function (fetch?: FetchAPI, basePath?: string) {\r\n    return {\r\n        /**\r\n         *\r\n         * @summary Auth\r\n         * @param req\r\n         * @param authToken\r\n         */\r\n        auth(params: {  \"req\"?: User; \"authToken\"?: string; }, options?: any) {\r\n            return AuthApiFp.auth(params, options)(fetch, basePath);\r\n        },\r\n    };\r\n};\r\n\r\n\r\n/**\r\n * LeadGenApi - fetch parameter creator\r\n */\r\nexport const LeadGenApiFetchParamCreator = {\r\n    /**\r\n     *\r\n     * @summary Run\r\n     * @param req\r\n     * @param authToken\r\n     */\r\n    runGET(params: {  \"req\"?: CustomerLead; \"authToken\"?: string; }, options?: any): FetchArgs {\r\n        const baseUrl = `/api/leadGen`;\r\n        let urlObj = url.parse(baseUrl, true);\r\n        urlObj.query = assign({}, urlObj.query, {\r\n            \"authToken\": params[\"authToken\"],\r\n        });\r\n        let fetchOptions: RequestInit = assign({}, { method: \"GET\" }, options);\r\n\r\n        let contentTypeHeader: Dictionary<string> = {};\r\n        contentTypeHeader = { \"Content-Type\": \"application/json\" };\r\n        if (params[\"req\"]) {\r\n            fetchOptions.body = JSON.stringify(params[\"req\"] || {});\r\n        }\r\n        if (contentTypeHeader) {\r\n            fetchOptions.headers = assign({}, contentTypeHeader, fetchOptions.headers);\r\n        }\r\n        return {\r\n            url: url.format(urlObj),\r\n            options: fetchOptions,\r\n        };\r\n    },\r\n    /**\r\n     *\r\n     * @summary Run\r\n     * @param req\r\n     * @param authToken\r\n     */\r\n    runPOST(params: {  \"req\"?: CustomerLead; \"authToken\"?: string; }, options?: any): FetchArgs {\r\n        const baseUrl = `/api/leadGen`;\r\n        let urlObj = url.parse(baseUrl, true);\r\n        urlObj.query = assign({}, urlObj.query, {\r\n            \"authToken\": params[\"authToken\"],\r\n        });\r\n        let fetchOptions: RequestInit = assign({}, { method: \"POST\" }, options);\r\n\r\n        let contentTypeHeader: Dictionary<string> = {};\r\n        contentTypeHeader = { \"Content-Type\": \"application/json\" };\r\n        if (params[\"req\"]) {\r\n            fetchOptions.body = JSON.stringify(params[\"req\"] || {});\r\n        }\r\n        if (contentTypeHeader) {\r\n            fetchOptions.headers = assign({}, contentTypeHeader, fetchOptions.headers);\r\n        }\r\n        return {\r\n            url: url.format(urlObj),\r\n            options: fetchOptions,\r\n        };\r\n    },\r\n};\r\n\r\n/**\r\n * LeadGenApi - functional programming interface\r\n */\r\nexport const LeadGenApiFp = {\r\n    /**\r\n     *\r\n     * @summary Run\r\n     * @param req\r\n     * @param authToken\r\n     */\r\n    runGET(params: { \"req\"?: CustomerLead; \"authToken\"?: string;  }, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<CustomerLead> {\r\n        const fetchArgs = LeadGenApiFetchParamCreator.runGET(params, options);\r\n        return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {\r\n            return fetch(basePath + fetchArgs.url, fetchArgs.options).then((response) => {\r\n                if (response.status >= 200 && response.status < 300) {\r\n                    return response.json();\r\n                } else {\r\n                    throw response;\r\n                }\r\n            });\r\n        };\r\n    },\r\n    /**\r\n     *\r\n     * @summary Run\r\n     * @param req\r\n     * @param authToken\r\n     */\r\n    runPOST(params: { \"req\"?: CustomerLead; \"authToken\"?: string;  }, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<CustomerLead> {\r\n        const fetchArgs = LeadGenApiFetchParamCreator.runPOST(params, options);\r\n        return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {\r\n            return fetch(basePath + fetchArgs.url, fetchArgs.options).then((response) => {\r\n                if (response.status >= 200 && response.status < 300) {\r\n                    return response.json();\r\n                } else {\r\n                    throw response;\r\n                }\r\n            });\r\n        };\r\n    },\r\n};\r\n\r\n/**\r\n * LeadGenApi - object-oriented interface\r\n */\r\nexport class LeadGenApi extends BaseAPI {\r\n    /**\r\n     *\r\n     * @summary Run\r\n     * @param req\r\n     * @param authToken\r\n     */\r\n    runGET(params: {  \"req\"?: CustomerLead; \"authToken\"?: string; }, options?: any) {\r\n        return LeadGenApiFp.runGET(params, options)(this.fetch, this.basePath);\r\n    }\r\n    /**\r\n     *\r\n     * @summary Run\r\n     * @param req\r\n     * @param authToken\r\n     */\r\n    runPOST(params: {  \"req\"?: CustomerLead; \"authToken\"?: string; }, options?: any) {\r\n        return LeadGenApiFp.runPOST(params, options)(this.fetch, this.basePath);\r\n    }\r\n};\r\n\r\n/**\r\n * LeadGenApi - factory interface\r\n */\r\nexport const LeadGenApiFactory = function (fetch?: FetchAPI, basePath?: string) {\r\n    return {\r\n        /**\r\n         *\r\n         * @summary Run\r\n         * @param req\r\n         * @param authToken\r\n         */\r\n        runGET(params: {  \"req\"?: CustomerLead; \"authToken\"?: string; }, options?: any) {\r\n            return LeadGenApiFp.runGET(params, options)(fetch, basePath);\r\n        },\r\n        /**\r\n         *\r\n         * @summary Run\r\n         * @param req\r\n         * @param authToken\r\n         */\r\n        runPOST(params: {  \"req\"?: CustomerLead; \"authToken\"?: string; }, options?: any) {\r\n            return LeadGenApiFp.runPOST(params, options)(fetch, basePath);\r\n        },\r\n    };\r\n};\r\n\r\n\r\n/**\r\n * PostQuestionApi - fetch parameter creator\r\n */\r\nexport const PostQuestionApiFetchParamCreator = {\r\n    /**\r\n     *\r\n     * @summary GetQuestions\r\n     * @param req\r\n     */\r\n    postQuestion(params: {  \"req\"?: SurveyQuestion; }, options?: any): FetchArgs {\r\n        const baseUrl = `/api/question`;\r\n        let urlObj = url.parse(baseUrl, true);\r\n        let fetchOptions: RequestInit = assign({}, { method: \"POST\" }, options);\r\n\r\n        let contentTypeHeader: Dictionary<string> = {};\r\n        contentTypeHeader = { \"Content-Type\": \"application/json\" };\r\n        if (params[\"req\"]) {\r\n            fetchOptions.body = JSON.stringify(params[\"req\"] || {});\r\n        }\r\n        if (contentTypeHeader) {\r\n            fetchOptions.headers = assign({}, contentTypeHeader, fetchOptions.headers);\r\n        }\r\n        return {\r\n            url: url.format(urlObj),\r\n            options: fetchOptions,\r\n        };\r\n    },\r\n};\r\n\r\n/**\r\n * PostQuestionApi - functional programming interface\r\n */\r\nexport const PostQuestionApiFp = {\r\n    /**\r\n     *\r\n     * @summary GetQuestions\r\n     * @param req\r\n     */\r\n    postQuestion(params: { \"req\"?: SurveyQuestion;  }, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<TableResult> {\r\n        const fetchArgs = PostQuestionApiFetchParamCreator.postQuestion(params, options);\r\n        return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {\r\n            return fetch(basePath + fetchArgs.url, fetchArgs.options).then((response) => {\r\n                if (response.status >= 200 && response.status < 300) {\r\n                    return response.json();\r\n                } else {\r\n                    throw response;\r\n                }\r\n            });\r\n        };\r\n    },\r\n};\r\n\r\n/**\r\n * PostQuestionApi - object-oriented interface\r\n */\r\nexport class PostQuestionApi extends BaseAPI {\r\n    /**\r\n     *\r\n     * @summary GetQuestions\r\n     * @param req\r\n     */\r\n    postQuestion(params: {  \"req\"?: SurveyQuestion; }, options?: any) {\r\n        return PostQuestionApiFp.postQuestion(params, options)(this.fetch, this.basePath);\r\n    }\r\n};\r\n\r\n/**\r\n * PostQuestionApi - factory interface\r\n */\r\nexport const PostQuestionApiFactory = function (fetch?: FetchAPI, basePath?: string) {\r\n    return {\r\n        /**\r\n         *\r\n         * @summary GetQuestions\r\n         * @param req\r\n         */\r\n        postQuestion(params: {  \"req\"?: SurveyQuestion; }, options?: any) {\r\n            return PostQuestionApiFp.postQuestion(params, options)(fetch, basePath);\r\n        },\r\n    };\r\n};\r\n\r\n\r\n/**\r\n * QuestionApi - fetch parameter creator\r\n */\r\nexport const QuestionApiFetchParamCreator = {\r\n    /**\r\n     *\r\n     * @summary GetQuestions\r\n     */\r\n    getQuestions(options?: any): FetchArgs {\r\n        const baseUrl = `/api/question`;\r\n        let urlObj = url.parse(baseUrl, true);\r\n        let fetchOptions: RequestInit = assign({}, { method: \"GET\" }, options);\r\n\r\n        let contentTypeHeader: Dictionary<string> = {};\r\n        if (contentTypeHeader) {\r\n            fetchOptions.headers = assign({}, contentTypeHeader, fetchOptions.headers);\r\n        }\r\n        return {\r\n            url: url.format(urlObj),\r\n            options: fetchOptions,\r\n        };\r\n    },\r\n};\r\n\r\n/**\r\n * QuestionApi - functional programming interface\r\n */\r\nexport const QuestionApiFp = {\r\n    /**\r\n     *\r\n     * @summary GetQuestions\r\n     */\r\n    getQuestions(options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Array<SurveyQuestion>> {\r\n        const fetchArgs = QuestionApiFetchParamCreator.getQuestions(options);\r\n        return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {\r\n            return fetch(basePath + fetchArgs.url, fetchArgs.options).then((response) => {\r\n                if (response.status >= 200 && response.status < 300) {\r\n                    return response.json();\r\n                } else {\r\n                    throw response;\r\n                }\r\n            });\r\n        };\r\n    },\r\n};\r\n\r\n/**\r\n * QuestionApi - object-oriented interface\r\n */\r\nexport class QuestionApi extends BaseAPI {\r\n    /**\r\n     *\r\n     * @summary GetQuestions\r\n     */\r\n    getQuestions(options?: any) {\r\n        return QuestionApiFp.getQuestions(options)(this.fetch, this.basePath);\r\n    }\r\n};\r\n\r\n/**\r\n * QuestionApi - factory interface\r\n */\r\nexport const QuestionApiFactory = function (fetch?: FetchAPI, basePath?: string) {\r\n    return {\r\n        /**\r\n         *\r\n         * @summary GetQuestions\r\n         */\r\n        getQuestions(options?: any) {\r\n            return QuestionApiFp.getQuestions(options)(fetch, basePath);\r\n        },\r\n    };\r\n};\r\n\r\n\r\n/**\r\n * ResourceApi - fetch parameter creator\r\n */\r\nexport const ResourceApiFetchParamCreator = {\r\n    /**\r\n     *\r\n     * @summary AvailabilityRules\r\n     * @param req\r\n     * @param authToken\r\n     */\r\n    availabilityRulesDELETE(params: {  \"req\"?: AvailabilityRule; \"authToken\"?: string; }, options?: any): FetchArgs {\r\n        const baseUrl = `/api/timeslot/rules`;\r\n        let urlObj = url.parse(baseUrl, true);\r\n        urlObj.query = assign({}, urlObj.query, {\r\n            \"authToken\": params[\"authToken\"],\r\n        });\r\n        let fetchOptions: RequestInit = assign({}, { method: \"DELETE\" }, options);\r\n\r\n        let contentTypeHeader: Dictionary<string> = {};\r\n        contentTypeHeader = { \"Content-Type\": \"application/json\" };\r\n        if (params[\"req\"]) {\r\n            fetchOptions.body = JSON.stringify(params[\"req\"] || {});\r\n        }\r\n        if (contentTypeHeader) {\r\n            fetchOptions.headers = assign({}, contentTypeHeader, fetchOptions.headers);\r\n        }\r\n        return {\r\n            url: url.format(urlObj),\r\n            options: fetchOptions,\r\n        };\r\n    },\r\n    /**\r\n     *\r\n     * @summary AvailabilityRules\r\n     * @param authToken\r\n     */\r\n    availabilityRulesGET(params: {  \"authToken\"?: string; }, options?: any): FetchArgs {\r\n        const baseUrl = `/api/timeslot/rules`;\r\n        let urlObj = url.parse(baseUrl, true);\r\n        urlObj.query = assign({}, urlObj.query, {\r\n            \"authToken\": params[\"authToken\"],\r\n        });\r\n        let fetchOptions: RequestInit = assign({}, { method: \"GET\" }, options);\r\n\r\n        let contentTypeHeader: Dictionary<string> = {};\r\n        if (contentTypeHeader) {\r\n            fetchOptions.headers = assign({}, contentTypeHeader, fetchOptions.headers);\r\n        }\r\n        return {\r\n            url: url.format(urlObj),\r\n            options: fetchOptions,\r\n        };\r\n    },\r\n    /**\r\n     *\r\n     * @summary AvailabilityRules\r\n     * @param req\r\n     * @param authToken\r\n     */\r\n    availabilityRulesPOST(params: {  \"req\"?: AvailabilityRule; \"authToken\"?: string; }, options?: any): FetchArgs {\r\n        const baseUrl = `/api/timeslot/rules`;\r\n        let urlObj = url.parse(baseUrl, true);\r\n        urlObj.query = assign({}, urlObj.query, {\r\n            \"authToken\": params[\"authToken\"],\r\n        });\r\n        let fetchOptions: RequestInit = assign({}, { method: \"POST\" }, options);\r\n\r\n        let contentTypeHeader: Dictionary<string> = {};\r\n        contentTypeHeader = { \"Content-Type\": \"application/json\" };\r\n        if (params[\"req\"]) {\r\n            fetchOptions.body = JSON.stringify(params[\"req\"] || {});\r\n        }\r\n        if (contentTypeHeader) {\r\n            fetchOptions.headers = assign({}, contentTypeHeader, fetchOptions.headers);\r\n        }\r\n        return {\r\n            url: url.format(urlObj),\r\n            options: fetchOptions,\r\n        };\r\n    },\r\n    /**\r\n     *\r\n     * @summary AvailabilityRules\r\n     * @param req\r\n     * @param authToken\r\n     */\r\n    availabilityRulesPUT(params: {  \"req\"?: AvailabilityRule; \"authToken\"?: string; }, options?: any): FetchArgs {\r\n        const baseUrl = `/api/timeslot/rules`;\r\n        let urlObj = url.parse(baseUrl, true);\r\n        urlObj.query = assign({}, urlObj.query, {\r\n            \"authToken\": params[\"authToken\"],\r\n        });\r\n        let fetchOptions: RequestInit = assign({}, { method: \"PUT\" }, options);\r\n\r\n        let contentTypeHeader: Dictionary<string> = {};\r\n        contentTypeHeader = { \"Content-Type\": \"application/json\" };\r\n        if (params[\"req\"]) {\r\n            fetchOptions.body = JSON.stringify(params[\"req\"] || {});\r\n        }\r\n        if (contentTypeHeader) {\r\n            fetchOptions.headers = assign({}, contentTypeHeader, fetchOptions.headers);\r\n        }\r\n        return {\r\n            url: url.format(urlObj),\r\n            options: fetchOptions,\r\n        };\r\n    },\r\n    /**\r\n     *\r\n     * @summary Locations\r\n     * @param locationId\r\n     * @param authToken\r\n     */\r\n    locationsGET(params: {  \"locationId\"?: string; \"authToken\"?: string; }, options?: any): FetchArgs {\r\n        const baseUrl = `/api/locations`;\r\n        let urlObj = url.parse(baseUrl, true);\r\n        urlObj.query = assign({}, urlObj.query, {\r\n            \"locationId\": params[\"locationId\"],\r\n            \"authToken\": params[\"authToken\"],\r\n        });\r\n        let fetchOptions: RequestInit = assign({}, { method: \"GET\" }, options);\r\n\r\n        let contentTypeHeader: Dictionary<string> = {};\r\n        if (contentTypeHeader) {\r\n            fetchOptions.headers = assign({}, contentTypeHeader, fetchOptions.headers);\r\n        }\r\n        return {\r\n            url: url.format(urlObj),\r\n            options: fetchOptions,\r\n        };\r\n    },\r\n    /**\r\n     *\r\n     * @summary Locations\r\n     * @param locationId\r\n     * @param authToken\r\n     */\r\n    locationsPOST(params: {  \"locationId\"?: string; \"authToken\"?: string; }, options?: any): FetchArgs {\r\n        const baseUrl = `/api/locations`;\r\n        let urlObj = url.parse(baseUrl, true);\r\n        urlObj.query = assign({}, urlObj.query, {\r\n            \"locationId\": params[\"locationId\"],\r\n            \"authToken\": params[\"authToken\"],\r\n        });\r\n        let fetchOptions: RequestInit = assign({}, { method: \"POST\" }, options);\r\n\r\n        let contentTypeHeader: Dictionary<string> = {};\r\n        if (contentTypeHeader) {\r\n            fetchOptions.headers = assign({}, contentTypeHeader, fetchOptions.headers);\r\n        }\r\n        return {\r\n            url: url.format(urlObj),\r\n            options: fetchOptions,\r\n        };\r\n    },\r\n};\r\n\r\n/**\r\n * ResourceApi - functional programming interface\r\n */\r\nexport const ResourceApiFp = {\r\n    /**\r\n     *\r\n     * @summary AvailabilityRules\r\n     * @param req\r\n     * @param authToken\r\n     */\r\n    availabilityRulesDELETE(params: { \"req\"?: AvailabilityRule; \"authToken\"?: string;  }, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ApiResultListAvailabilityRule> {\r\n        const fetchArgs = ResourceApiFetchParamCreator.availabilityRulesDELETE(params, options);\r\n        return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {\r\n            return fetch(basePath + fetchArgs.url, fetchArgs.options).then((response) => {\r\n                if (response.status >= 200 && response.status < 300) {\r\n                    return response.json();\r\n                } else {\r\n                    throw response;\r\n                }\r\n            });\r\n        };\r\n    },\r\n    /**\r\n     *\r\n     * @summary AvailabilityRules\r\n     * @param authToken\r\n     */\r\n    availabilityRulesGET(params: { \"authToken\"?: string;  }, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ApiResultListAvailabilityRule> {\r\n        const fetchArgs = ResourceApiFetchParamCreator.availabilityRulesGET(params, options);\r\n        return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {\r\n            return fetch(basePath + fetchArgs.url, fetchArgs.options).then((response) => {\r\n                if (response.status >= 200 && response.status < 300) {\r\n                    return response.json();\r\n                } else {\r\n                    throw response;\r\n                }\r\n            });\r\n        };\r\n    },\r\n    /**\r\n     *\r\n     * @summary AvailabilityRules\r\n     * @param req\r\n     * @param authToken\r\n     */\r\n    availabilityRulesPOST(params: { \"req\"?: AvailabilityRule; \"authToken\"?: string;  }, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ApiResultListAvailabilityRule> {\r\n        const fetchArgs = ResourceApiFetchParamCreator.availabilityRulesPOST(params, options);\r\n        return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {\r\n            return fetch(basePath + fetchArgs.url, fetchArgs.options).then((response) => {\r\n                if (response.status >= 200 && response.status < 300) {\r\n                    return response.json();\r\n                } else {\r\n                    throw response;\r\n                }\r\n            });\r\n        };\r\n    },\r\n    /**\r\n     *\r\n     * @summary AvailabilityRules\r\n     * @param req\r\n     * @param authToken\r\n     */\r\n    availabilityRulesPUT(params: { \"req\"?: AvailabilityRule; \"authToken\"?: string;  }, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ApiResultListAvailabilityRule> {\r\n        const fetchArgs = ResourceApiFetchParamCreator.availabilityRulesPUT(params, options);\r\n        return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {\r\n            return fetch(basePath + fetchArgs.url, fetchArgs.options).then((response) => {\r\n                if (response.status >= 200 && response.status < 300) {\r\n                    return response.json();\r\n                } else {\r\n                    throw response;\r\n                }\r\n            });\r\n        };\r\n    },\r\n    /**\r\n     *\r\n     * @summary Locations\r\n     * @param locationId\r\n     * @param authToken\r\n     */\r\n    locationsGET(params: { \"locationId\"?: string; \"authToken\"?: string;  }, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Array<Location>> {\r\n        const fetchArgs = ResourceApiFetchParamCreator.locationsGET(params, options);\r\n        return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {\r\n            return fetch(basePath + fetchArgs.url, fetchArgs.options).then((response) => {\r\n                if (response.status >= 200 && response.status < 300) {\r\n                    return response.json();\r\n                } else {\r\n                    throw response;\r\n                }\r\n            });\r\n        };\r\n    },\r\n    /**\r\n     *\r\n     * @summary Locations\r\n     * @param locationId\r\n     * @param authToken\r\n     */\r\n    locationsPOST(params: { \"locationId\"?: string; \"authToken\"?: string;  }, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Array<Location>> {\r\n        const fetchArgs = ResourceApiFetchParamCreator.locationsPOST(params, options);\r\n        return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {\r\n            return fetch(basePath + fetchArgs.url, fetchArgs.options).then((response) => {\r\n                if (response.status >= 200 && response.status < 300) {\r\n                    return response.json();\r\n                } else {\r\n                    throw response;\r\n                }\r\n            });\r\n        };\r\n    },\r\n};\r\n\r\n/**\r\n * ResourceApi - object-oriented interface\r\n */\r\nexport class ResourceApi extends BaseAPI {\r\n    /**\r\n     *\r\n     * @summary AvailabilityRules\r\n     * @param req\r\n     * @param authToken\r\n     */\r\n    availabilityRulesDELETE(params: {  \"req\"?: AvailabilityRule; \"authToken\"?: string; }, options?: any) {\r\n        return ResourceApiFp.availabilityRulesDELETE(params, options)(this.fetch, this.basePath);\r\n    }\r\n    /**\r\n     *\r\n     * @summary AvailabilityRules\r\n     * @param authToken\r\n     */\r\n    availabilityRulesGET(params: {  \"authToken\"?: string; }, options?: any) {\r\n        return ResourceApiFp.availabilityRulesGET(params, options)(this.fetch, this.basePath);\r\n    }\r\n    /**\r\n     *\r\n     * @summary AvailabilityRules\r\n     * @param req\r\n     * @param authToken\r\n     */\r\n    availabilityRulesPOST(params: {  \"req\"?: AvailabilityRule; \"authToken\"?: string; }, options?: any) {\r\n        return ResourceApiFp.availabilityRulesPOST(params, options)(this.fetch, this.basePath);\r\n    }\r\n    /**\r\n     *\r\n     * @summary AvailabilityRules\r\n     * @param req\r\n     * @param authToken\r\n     */\r\n    availabilityRulesPUT(params: {  \"req\"?: AvailabilityRule; \"authToken\"?: string; }, options?: any) {\r\n        return ResourceApiFp.availabilityRulesPUT(params, options)(this.fetch, this.basePath);\r\n    }\r\n    /**\r\n     *\r\n     * @summary Locations\r\n     * @param locationId\r\n     * @param authToken\r\n     */\r\n    locationsGET(params: {  \"locationId\"?: string; \"authToken\"?: string; }, options?: any) {\r\n        return ResourceApiFp.locationsGET(params, options)(this.fetch, this.basePath);\r\n    }\r\n    /**\r\n     *\r\n     * @summary Locations\r\n     * @param locationId\r\n     * @param authToken\r\n     */\r\n    locationsPOST(params: {  \"locationId\"?: string; \"authToken\"?: string; }, options?: any) {\r\n        return ResourceApiFp.locationsPOST(params, options)(this.fetch, this.basePath);\r\n    }\r\n};\r\n\r\n/**\r\n * ResourceApi - factory interface\r\n */\r\nexport const ResourceApiFactory = function (fetch?: FetchAPI, basePath?: string) {\r\n    return {\r\n        /**\r\n         *\r\n         * @summary AvailabilityRules\r\n         * @param req\r\n         * @param authToken\r\n         */\r\n        availabilityRulesDELETE(params: {  \"req\"?: AvailabilityRule; \"authToken\"?: string; }, options?: any) {\r\n            return ResourceApiFp.availabilityRulesDELETE(params, options)(fetch, basePath);\r\n        },\r\n        /**\r\n         *\r\n         * @summary AvailabilityRules\r\n         * @param authToken\r\n         */\r\n        availabilityRulesGET(params: {  \"authToken\"?: string; }, options?: any) {\r\n            return ResourceApiFp.availabilityRulesGET(params, options)(fetch, basePath);\r\n        },\r\n        /**\r\n         *\r\n         * @summary AvailabilityRules\r\n         * @param req\r\n         * @param authToken\r\n         */\r\n        availabilityRulesPOST(params: {  \"req\"?: AvailabilityRule; \"authToken\"?: string; }, options?: any) {\r\n            return ResourceApiFp.availabilityRulesPOST(params, options)(fetch, basePath);\r\n        },\r\n        /**\r\n         *\r\n         * @summary AvailabilityRules\r\n         * @param req\r\n         * @param authToken\r\n         */\r\n        availabilityRulesPUT(params: {  \"req\"?: AvailabilityRule; \"authToken\"?: string; }, options?: any) {\r\n            return ResourceApiFp.availabilityRulesPUT(params, options)(fetch, basePath);\r\n        },\r\n        /**\r\n         *\r\n         * @summary Locations\r\n         * @param locationId\r\n         * @param authToken\r\n         */\r\n        locationsGET(params: {  \"locationId\"?: string; \"authToken\"?: string; }, options?: any) {\r\n            return ResourceApiFp.locationsGET(params, options)(fetch, basePath);\r\n        },\r\n        /**\r\n         *\r\n         * @summary Locations\r\n         * @param locationId\r\n         * @param authToken\r\n         */\r\n        locationsPOST(params: {  \"locationId\"?: string; \"authToken\"?: string; }, options?: any) {\r\n            return ResourceApiFp.locationsPOST(params, options)(fetch, basePath);\r\n        },\r\n    };\r\n};\r\n\r\n\r\n/**\r\n * ScheduleApi - fetch parameter creator\r\n */\r\nexport const ScheduleApiFetchParamCreator = {\r\n    /**\r\n     *\r\n     * @summary AppointmentHandler\r\n     * @param req\r\n     * @param authToken\r\n     * @param withContrast\r\n     * @param locationId\r\n     * @param search\r\n     */\r\n    appointmentHandlerDELETE(params: {  \"req\"?: Appointment; \"authToken\"?: string; \"withContrast\"?: boolean; \"locationId\"?: string; \"search\"?: string; }, options?: any): FetchArgs {\r\n        const baseUrl = `/api/appointment`;\r\n        let urlObj = url.parse(baseUrl, true);\r\n        urlObj.query = assign({}, urlObj.query, {\r\n            \"authToken\": params[\"authToken\"],\r\n            \"withContrast\": params[\"withContrast\"],\r\n            \"locationId\": params[\"locationId\"],\r\n            \"search\": params[\"search\"],\r\n        });\r\n        let fetchOptions: RequestInit = assign({}, { method: \"DELETE\" }, options);\r\n\r\n        let contentTypeHeader: Dictionary<string> = {};\r\n        contentTypeHeader = { \"Content-Type\": \"application/json\" };\r\n        if (params[\"req\"]) {\r\n            fetchOptions.body = JSON.stringify(params[\"req\"] || {});\r\n        }\r\n        if (contentTypeHeader) {\r\n            fetchOptions.headers = assign({}, contentTypeHeader, fetchOptions.headers);\r\n        }\r\n        return {\r\n            url: url.format(urlObj),\r\n            options: fetchOptions,\r\n        };\r\n    },\r\n    /**\r\n     *\r\n     * @summary AppointmentHandler\r\n     * @param authToken\r\n     * @param withContrast\r\n     * @param locationId\r\n     * @param search\r\n     */\r\n    appointmentHandlerGET(params: {  \"authToken\"?: string; \"withContrast\"?: boolean; \"locationId\"?: string; \"search\"?: string; }, options?: any): FetchArgs {\r\n        const baseUrl = `/api/appointment`;\r\n        let urlObj = url.parse(baseUrl, true);\r\n        urlObj.query = assign({}, urlObj.query, {\r\n            \"authToken\": params[\"authToken\"],\r\n            \"withContrast\": params[\"withContrast\"],\r\n            \"locationId\": params[\"locationId\"],\r\n            \"search\": params[\"search\"],\r\n        });\r\n        let fetchOptions: RequestInit = assign({}, { method: \"GET\" }, options);\r\n\r\n        let contentTypeHeader: Dictionary<string> = {};\r\n        if (contentTypeHeader) {\r\n            fetchOptions.headers = assign({}, contentTypeHeader, fetchOptions.headers);\r\n        }\r\n        return {\r\n            url: url.format(urlObj),\r\n            options: fetchOptions,\r\n        };\r\n    },\r\n    /**\r\n     *\r\n     * @summary AppointmentHandler\r\n     * @param req\r\n     * @param authToken\r\n     * @param withContrast\r\n     * @param locationId\r\n     * @param search\r\n     */\r\n    appointmentHandlerPOST(params: {  \"req\"?: Appointment; \"authToken\"?: string; \"withContrast\"?: boolean; \"locationId\"?: string; \"search\"?: string; }, options?: any): FetchArgs {\r\n        const baseUrl = `/api/appointment`;\r\n        let urlObj = url.parse(baseUrl, true);\r\n        urlObj.query = assign({}, urlObj.query, {\r\n            \"authToken\": params[\"authToken\"],\r\n            \"withContrast\": params[\"withContrast\"],\r\n            \"locationId\": params[\"locationId\"],\r\n            \"search\": params[\"search\"],\r\n        });\r\n        let fetchOptions: RequestInit = assign({}, { method: \"POST\" }, options);\r\n\r\n        let contentTypeHeader: Dictionary<string> = {};\r\n        contentTypeHeader = { \"Content-Type\": \"application/json\" };\r\n        if (params[\"req\"]) {\r\n            fetchOptions.body = JSON.stringify(params[\"req\"] || {});\r\n        }\r\n        if (contentTypeHeader) {\r\n            fetchOptions.headers = assign({}, contentTypeHeader, fetchOptions.headers);\r\n        }\r\n        return {\r\n            url: url.format(urlObj),\r\n            options: fetchOptions,\r\n        };\r\n    },\r\n    /**\r\n     *\r\n     * @summary AppointmentHandler\r\n     * @param req\r\n     * @param authToken\r\n     * @param withContrast\r\n     * @param locationId\r\n     * @param search\r\n     */\r\n    appointmentHandlerPUT(params: {  \"req\"?: Appointment; \"authToken\"?: string; \"withContrast\"?: boolean; \"locationId\"?: string; \"search\"?: string; }, options?: any): FetchArgs {\r\n        const baseUrl = `/api/appointment`;\r\n        let urlObj = url.parse(baseUrl, true);\r\n        urlObj.query = assign({}, urlObj.query, {\r\n            \"authToken\": params[\"authToken\"],\r\n            \"withContrast\": params[\"withContrast\"],\r\n            \"locationId\": params[\"locationId\"],\r\n            \"search\": params[\"search\"],\r\n        });\r\n        let fetchOptions: RequestInit = assign({}, { method: \"PUT\" }, options);\r\n\r\n        let contentTypeHeader: Dictionary<string> = {};\r\n        contentTypeHeader = { \"Content-Type\": \"application/json\" };\r\n        if (params[\"req\"]) {\r\n            fetchOptions.body = JSON.stringify(params[\"req\"] || {});\r\n        }\r\n        if (contentTypeHeader) {\r\n            fetchOptions.headers = assign({}, contentTypeHeader, fetchOptions.headers);\r\n        }\r\n        return {\r\n            url: url.format(urlObj),\r\n            options: fetchOptions,\r\n        };\r\n    },\r\n    /**\r\n     *\r\n     * @summary TimeSlots\r\n     * @param authToken\r\n     * @param withContrast\r\n     * @param length\r\n     * @param locationId\r\n     */\r\n    timeSlotsGET(params: {  \"authToken\"?: string; \"withContrast\"?: boolean; \"length\"?: number; \"locationId\"?: string; }, options?: any): FetchArgs {\r\n        const baseUrl = `/api/timeslots`;\r\n        let urlObj = url.parse(baseUrl, true);\r\n        urlObj.query = assign({}, urlObj.query, {\r\n            \"authToken\": params[\"authToken\"],\r\n            \"withContrast\": params[\"withContrast\"],\r\n            \"length\": params[\"length\"],\r\n            \"locationId\": params[\"locationId\"],\r\n        });\r\n        let fetchOptions: RequestInit = assign({}, { method: \"GET\" }, options);\r\n\r\n        let contentTypeHeader: Dictionary<string> = {};\r\n        if (contentTypeHeader) {\r\n            fetchOptions.headers = assign({}, contentTypeHeader, fetchOptions.headers);\r\n        }\r\n        return {\r\n            url: url.format(urlObj),\r\n            options: fetchOptions,\r\n        };\r\n    },\r\n};\r\n\r\n/**\r\n * ScheduleApi - functional programming interface\r\n */\r\nexport const ScheduleApiFp = {\r\n    /**\r\n     *\r\n     * @summary AppointmentHandler\r\n     * @param req\r\n     * @param authToken\r\n     * @param withContrast\r\n     * @param locationId\r\n     * @param search\r\n     */\r\n    appointmentHandlerDELETE(params: { \"req\"?: Appointment; \"authToken\"?: string; \"withContrast\"?: boolean; \"locationId\"?: string; \"search\"?: string;  }, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ApiResultListAppointment> {\r\n        const fetchArgs = ScheduleApiFetchParamCreator.appointmentHandlerDELETE(params, options);\r\n        return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {\r\n            return fetch(basePath + fetchArgs.url, fetchArgs.options).then((response) => {\r\n                if (response.status >= 200 && response.status < 300) {\r\n                    return response.json();\r\n                } else {\r\n                    throw response;\r\n                }\r\n            });\r\n        };\r\n    },\r\n    /**\r\n     *\r\n     * @summary AppointmentHandler\r\n     * @param authToken\r\n     * @param withContrast\r\n     * @param locationId\r\n     * @param search\r\n     */\r\n    appointmentHandlerGET(params: { \"authToken\"?: string; \"withContrast\"?: boolean; \"locationId\"?: string; \"search\"?: string;  }, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ApiResultListAppointment> {\r\n        const fetchArgs = ScheduleApiFetchParamCreator.appointmentHandlerGET(params, options);\r\n        return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {\r\n            return fetch(basePath + fetchArgs.url, fetchArgs.options).then((response) => {\r\n                if (response.status >= 200 && response.status < 300) {\r\n                    return response.json();\r\n                } else {\r\n                    throw response;\r\n                }\r\n            });\r\n        };\r\n    },\r\n    /**\r\n     *\r\n     * @summary AppointmentHandler\r\n     * @param req\r\n     * @param authToken\r\n     * @param withContrast\r\n     * @param locationId\r\n     * @param search\r\n     */\r\n    appointmentHandlerPOST(params: { \"req\"?: Appointment; \"authToken\"?: string; \"withContrast\"?: boolean; \"locationId\"?: string; \"search\"?: string;  }, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ApiResultListAppointment> {\r\n        const fetchArgs = ScheduleApiFetchParamCreator.appointmentHandlerPOST(params, options);\r\n        return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {\r\n            return fetch(basePath + fetchArgs.url, fetchArgs.options).then((response) => {\r\n                if (response.status >= 200 && response.status < 300) {\r\n                    return response.json();\r\n                } else {\r\n                    throw response;\r\n                }\r\n            });\r\n        };\r\n    },\r\n    /**\r\n     *\r\n     * @summary AppointmentHandler\r\n     * @param req\r\n     * @param authToken\r\n     * @param withContrast\r\n     * @param locationId\r\n     * @param search\r\n     */\r\n    appointmentHandlerPUT(params: { \"req\"?: Appointment; \"authToken\"?: string; \"withContrast\"?: boolean; \"locationId\"?: string; \"search\"?: string;  }, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ApiResultListAppointment> {\r\n        const fetchArgs = ScheduleApiFetchParamCreator.appointmentHandlerPUT(params, options);\r\n        return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {\r\n            return fetch(basePath + fetchArgs.url, fetchArgs.options).then((response) => {\r\n                if (response.status >= 200 && response.status < 300) {\r\n                    return response.json();\r\n                } else {\r\n                    throw response;\r\n                }\r\n            });\r\n        };\r\n    },\r\n    /**\r\n     *\r\n     * @summary TimeSlots\r\n     * @param authToken\r\n     * @param withContrast\r\n     * @param length\r\n     * @param locationId\r\n     */\r\n    timeSlotsGET(params: { \"authToken\"?: string; \"withContrast\"?: boolean; \"length\"?: number; \"locationId\"?: string;  }, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ApiResultListSlotAvailabilityDate> {\r\n        const fetchArgs = ScheduleApiFetchParamCreator.timeSlotsGET(params, options);\r\n        return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {\r\n            return fetch(basePath + fetchArgs.url, fetchArgs.options).then((response) => {\r\n                if (response.status >= 200 && response.status < 300) {\r\n                    return response.json();\r\n                } else {\r\n                    throw response;\r\n                }\r\n            });\r\n        };\r\n    },\r\n};\r\n\r\n/**\r\n * ScheduleApi - object-oriented interface\r\n */\r\nexport class ScheduleApi extends BaseAPI {\r\n    /**\r\n     *\r\n     * @summary AppointmentHandler\r\n     * @param req\r\n     * @param authToken\r\n     * @param withContrast\r\n     * @param locationId\r\n     * @param search\r\n     */\r\n    appointmentHandlerDELETE(params: {  \"req\"?: Appointment; \"authToken\"?: string; \"withContrast\"?: boolean; \"locationId\"?: string; \"search\"?: string; }, options?: any) {\r\n        return ScheduleApiFp.appointmentHandlerDELETE(params, options)(this.fetch, this.basePath);\r\n    }\r\n    /**\r\n     *\r\n     * @summary AppointmentHandler\r\n     * @param authToken\r\n     * @param withContrast\r\n     * @param locationId\r\n     * @param search\r\n     */\r\n    appointmentHandlerGET(params: {  \"authToken\"?: string; \"withContrast\"?: boolean; \"locationId\"?: string; \"search\"?: string; }, options?: any) {\r\n        return ScheduleApiFp.appointmentHandlerGET(params, options)(this.fetch, this.basePath);\r\n    }\r\n    /**\r\n     *\r\n     * @summary AppointmentHandler\r\n     * @param req\r\n     * @param authToken\r\n     * @param withContrast\r\n     * @param locationId\r\n     * @param search\r\n     */\r\n    appointmentHandlerPOST(params: {  \"req\"?: Appointment; \"authToken\"?: string; \"withContrast\"?: boolean; \"locationId\"?: string; \"search\"?: string; }, options?: any) {\r\n        return ScheduleApiFp.appointmentHandlerPOST(params, options)(this.fetch, this.basePath);\r\n    }\r\n    /**\r\n     *\r\n     * @summary AppointmentHandler\r\n     * @param req\r\n     * @param authToken\r\n     * @param withContrast\r\n     * @param locationId\r\n     * @param search\r\n     */\r\n    appointmentHandlerPUT(params: {  \"req\"?: Appointment; \"authToken\"?: string; \"withContrast\"?: boolean; \"locationId\"?: string; \"search\"?: string; }, options?: any) {\r\n        return ScheduleApiFp.appointmentHandlerPUT(params, options)(this.fetch, this.basePath);\r\n    }\r\n    /**\r\n     *\r\n     * @summary TimeSlots\r\n     * @param authToken\r\n     * @param withContrast\r\n     * @param length\r\n     * @param locationId\r\n     */\r\n    timeSlotsGET(params: {  \"authToken\"?: string; \"withContrast\"?: boolean; \"length\"?: number; \"locationId\"?: string; }, options?: any) {\r\n        return ScheduleApiFp.timeSlotsGET(params, options)(this.fetch, this.basePath);\r\n    }\r\n};\r\n\r\n/**\r\n * ScheduleApi - factory interface\r\n */\r\nexport const ScheduleApiFactory = function (fetch?: FetchAPI, basePath?: string) {\r\n    return {\r\n        /**\r\n         *\r\n         * @summary AppointmentHandler\r\n         * @param req\r\n         * @param authToken\r\n         * @param withContrast\r\n         * @param locationId\r\n         * @param search\r\n         */\r\n        appointmentHandlerDELETE(params: {  \"req\"?: Appointment; \"authToken\"?: string; \"withContrast\"?: boolean; \"locationId\"?: string; \"search\"?: string; }, options?: any) {\r\n            return ScheduleApiFp.appointmentHandlerDELETE(params, options)(fetch, basePath);\r\n        },\r\n        /**\r\n         *\r\n         * @summary AppointmentHandler\r\n         * @param authToken\r\n         * @param withContrast\r\n         * @param locationId\r\n         * @param search\r\n         */\r\n        appointmentHandlerGET(params: {  \"authToken\"?: string; \"withContrast\"?: boolean; \"locationId\"?: string; \"search\"?: string; }, options?: any) {\r\n            return ScheduleApiFp.appointmentHandlerGET(params, options)(fetch, basePath);\r\n        },\r\n        /**\r\n         *\r\n         * @summary AppointmentHandler\r\n         * @param req\r\n         * @param authToken\r\n         * @param withContrast\r\n         * @param locationId\r\n         * @param search\r\n         */\r\n        appointmentHandlerPOST(params: {  \"req\"?: Appointment; \"authToken\"?: string; \"withContrast\"?: boolean; \"locationId\"?: string; \"search\"?: string; }, options?: any) {\r\n            return ScheduleApiFp.appointmentHandlerPOST(params, options)(fetch, basePath);\r\n        },\r\n        /**\r\n         *\r\n         * @summary AppointmentHandler\r\n         * @param req\r\n         * @param authToken\r\n         * @param withContrast\r\n         * @param locationId\r\n         * @param search\r\n         */\r\n        appointmentHandlerPUT(params: {  \"req\"?: Appointment; \"authToken\"?: string; \"withContrast\"?: boolean; \"locationId\"?: string; \"search\"?: string; }, options?: any) {\r\n            return ScheduleApiFp.appointmentHandlerPUT(params, options)(fetch, basePath);\r\n        },\r\n        /**\r\n         *\r\n         * @summary TimeSlots\r\n         * @param authToken\r\n         * @param withContrast\r\n         * @param length\r\n         * @param locationId\r\n         */\r\n        timeSlotsGET(params: {  \"authToken\"?: string; \"withContrast\"?: boolean; \"length\"?: number; \"locationId\"?: string; }, options?: any) {\r\n            return ScheduleApiFp.timeSlotsGET(params, options)(fetch, basePath);\r\n        },\r\n    };\r\n};\r\n\r\n","import * as React from 'react';\r\nimport {SafetyState} from \"../models/SafetyState\";\r\n\r\nexport abstract class FormBasePage extends React.Component<{}, SafetyState> {\r\n\tconstructor(props, context) {\r\n\t\tsuper(props, context);\r\n\t\tthis.state = SafetyState.loadState();\r\n\t}\r\n\r\n\tpublic getAns(q) {\r\n\t\treturn this.state.answers[q];\r\n\t}\r\n\r\n\tpublic componentDidMount() {\r\n\t\tconst state = SafetyState.loadState();\r\n\t\tthis.setState(state);\r\n\t}\r\n\r\n\tpublic ans(q, val) {\r\n\t\tconst answers = Object.assign(new SafetyState(), this.state.answers);\r\n\t\tanswers[q] = val;\r\n\t\tconsole.log(q, val, answers);\r\n\t\tthis.setState({answers}, () => this.saveState());\r\n\t}\r\n\r\n\tpublic saveState() {\r\n\t\tif (typeof sessionStorage !== 'undefined') {\r\n\t\t\tsessionStorage.setItem('wizard', JSON.stringify({\r\n\t\t\t\tanswers: this.state.answers,\r\n\t\t\t\timplants: this.state.implants,\r\n\t\t\t\tcurrentImplant: this.state.currentImplant,\r\n\t\t\t\tfname: this.state.fname,\r\n\t\t\t\tlname: this.state.lname,\r\n\t\t\t\temail: this.state.email,\r\n\t\t\t\tphone: this.state.phone,\r\n\t\t\t\theight: this.state.height,\r\n\t\t\t\tweight: this.state.weight,\r\n\t\t\t\tdoctorName: this.state.doctorName,\r\n\t\t\t\tdoctorContact: this.state.doctorContact,\r\n\t\t\t\tinsFront: this.state.insFront,\r\n\t\t\t\tinsBack: this.state.insBack,\r\n\t\t\t\tmriOrder: this.state.mriOrder,\r\n\t\t\t\tscan: this.state.scan || null,\r\n\t\t\t\thaveOrder: this.state.haveOrder,\r\n\t\t\t\tdob: this.state.dob,\r\n\t\t\t}));\r\n\t\t}\r\n\t}\r\n\r\n\tabstract render();\r\n}","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathname(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","export function formatPhone(phone: string) {\r\n\tconst ph = phone.replace(/[^\\d9]+/g, '');\r\n\tconst m = /([0-9]{3})([0-9]{3})([0-9]{4})/.exec(ph);\r\n\tif (m !== null && m.length === 4) {\r\n\t\treturn `(${m[1]}) ${m[2]}-${m[3]}`;\r\n\t}\r\n\treturn ph;\r\n}\r\n\r\nexport function formatDate(date: string) {\r\n\tconst dt = date.replace(/[^\\d]+/g, '');\r\n\tconst m = /([0-9]{2})\\/?([0-9]{2})\\/?([0-9]{4})/.exec(dt);\r\n\tif (m !== null && m.length === 4) {\r\n\t\treturn `${m[1]}/${m[2]}/${m[3]}`;\r\n\t}\r\n\treturn date;\r\n}"],"sourceRoot":""}