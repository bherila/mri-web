{"version":3,"sources":["webpack:///./src/pages/admin/rules.tsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/Header.tsx","webpack:///./src/components/LayoutRoot.tsx","webpack:///./src/components/LayoutMain.tsx","webpack:///./src/components/Footer.tsx","webpack:///./src/components/FooterNav.tsx","webpack:///./src/layouts/index.tsx","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/Page.tsx","webpack:///./src/api/api.ts","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/forms/index.tsx","webpack:///./src/helpers/authToken.ts"],"names":["RulesPage","props","context","_this","_React$Component","call","this","state","hideUnavailable","hideAvailable","open","reservedUnconfirmed","confirmed","search","modal","data","startTime","endTime","resourceName","contrastReqStatus","date","err","newItemComment","componentDidMount","_this2","_api_api__WEBPACK_IMPORTED_MODULE_6__","d","availabilityRulesGET","authToken","Object","_helpers_authToken__WEBPACK_IMPORTED_MODULE_9__","a","locationId","withContrast","then","result","value","setState","message","console","log","render","react__WEBPACK_IMPORTED_MODULE_4__","createElement","_layouts__WEBPACK_IMPORTED_MODULE_8__","_components_Page__WEBPACK_IMPORTED_MODULE_7__","renderInner","handleAddRule","e","_this3","preventDefault","availabilityRulesPOST","req","status","comment","onThisDay","partitionKey","rowKey","priority","resourceID","resp","success","alert","handleDeleteRule","renderTable","_this4","action","onSubmit","className","style","width","cellPadding","whiteSpace","map","rule","key","_forms__WEBPACK_IMPORTED_MODULE_5__","boundChoices","split","boundTextboxValue","type","n","onClick","gatsby__WEBPACK_IMPORTED_MODULE_10__","navigate","t","Component","__webpack_exports__","default","160","__webpack_require__","r","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","withPrefix","push","replace","navigateTo","_wait_for_route_change__WEBPACK_IMPORTED_MODULE_3__","c","_public_page_renderer__WEBPACK_IMPORTED_MODULE_4__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_4___default","_parse_path__WEBPACK_IMPORTED_MODULE_5__","createContext","Consumer","staticQueryData","query","children","Error","propTypes","object","string","isRequired","func","components_Header","_ref","objectDestructuringEmpty_default","react","id","href","src","alt","data-collapse","data-animation","data-duration","role","StyledLayoutRoot","index_esm","target","components_LayoutRoot","components_LayoutMain","components_Footer","height","Helmet_default","integrity","crossOrigin","FooterNav","gatsby_browser_entry","title","site","siteMetadata","meta","name","content","description","_991718019","m","module","exports","react_emotion__WEBPACK_IMPORTED_MODULE_1__","StyledPage","BASE_PATH","BaseAPI","fetch","basePath","isomorphic_fetch__WEBPACK_IMPORTED_MODULE_4__","AuthApiFp","params","options","fetchArgs","urlObj","url__WEBPACK_IMPORTED_MODULE_3__","parse","core_js_library_fn_object_assign__WEBPACK_IMPORTED_MODULE_5__","contentTypeHeader","fetchOptions","method","Content-Type","body","JSON","stringify","headers","url","format","AuthApiFetchParamCreator","response","json","AuthApi","_BaseAPI","apply","arguments","_babel_runtime_helpers_inheritsLoose__WEBPACK_IMPORTED_MODULE_1___default","prototype","auth","LeadGenApiFp","LeadGenApiFetchParamCreator","LeadGenApi","_BaseAPI2","_proto2","runGET","runPOST","QuestionApiFp","QuestionApiFetchParamCreator","QuestionApi","_BaseAPI4","getQuestions","ResourceApiFp","ResourceApiFetchParamCreator","ResourceApi","_BaseAPI5","_proto5","availabilityRulesDELETE","availabilityRulesPUT","locationsGET","locationsPOST","ScheduleApiFp","ScheduleApiFetchParamCreator","length","ScheduleApi","_BaseAPI6","_proto6","appointmentHandlerDELETE","appointmentHandlerGET","appointmentHandlerPOST","appointmentHandlerPUT","timeSlotsGET","_page_renderer__WEBPACK_IMPORTED_MODULE_2__","_loader__WEBPACK_IMPORTED_MODULE_3__","ProdPageRenderer","location","pageResources","getResourcesForPathname","pathname","shape","l","173","175","177","179","183","o","i","s","moment","formStyle","Row","react__WEBPACK_IMPORTED_MODULE_5__","Col","EditFormBase","_babel_runtime_helpers_inheritsLoose__WEBPACK_IMPORTED_MODULE_4___default","boundLabel","defaultValue","ucshared__WEBPACK_IMPORTED_MODULE_7__","isEmpty","toString","formGroup","sm","sm3","ctrlLabel","sm9","boundTextbox","bindFn","placeHolder","readOnly","isDisabled","wrn","renderWarnings","disabled","maxLength","onChange","placeholder","backgroundColor","bindValFn","inputType","currentTarget","minWidth","choices","cc","choice","label","submitRow","actionText","submitButton","boundDate","isStart","start","end","react_datepicker__WEBPACK_IMPORTED_MODULE_6__","selected","selectsEnd","startDate","endDate","dateFormatCalendar","showMonthDropdown","showYearDropdown","val","vlc","toLowerCase","indexOf","boundTextarea","rows","boundTextareaValue","boundCheckbox","defaultChecked","checked","boundCheckboxValue","boundBooleanSwitch","insertBlock","detailBlock","getAuthToken","loginRedirect","gatsby__WEBPACK_IMPORTED_MODULE_0__","token","sessionStorage","getItem","removeItem"],"mappings":"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","file":"component---src-pages-admin-rules-tsx-c8864224dd28cab7fd83.js","sourcesContent":["import * as React from 'react'\r\nimport {EditFormBase} from '../../forms';\r\nimport * as Api from '../../api/api';\r\nimport Page from '../../components/Page'\r\nimport IndexLayout from '../../layouts'\r\nimport {getAuthToken} from \"../../helpers/authToken\";\r\nimport {navigate} from \"gatsby\";\r\n\r\ninterface IRuleEditorState {\r\n\thideUnavailable: boolean;\r\n\thideAvailable: boolean;\r\n\topen: boolean;\r\n\treservedUnconfirmed: boolean;\r\n\tconfirmed: boolean;\r\n\tsearch: string;\r\n\tmodal: 'confirm' | 'edit' | 'release' | null;\r\n\tdata: Api.AvailabilityRule[];\r\n\tstartTime: string;\r\n\tendTime: string;\r\n\tresourceName: string;\r\n\tcontrastReqStatus: string;\r\n\terr: string;\r\n\tdate: string;\r\n\tnewItemComment: string;\r\n}\r\n\r\nclass RulesPage extends React.Component<{classes: any}, IRuleEditorState>{\r\n\tconstructor(props, context) {\r\n\t\tsuper(props, context);\r\n\t\tthis.state = {\r\n\t\t\thideUnavailable: false,\r\n\t\t\thideAvailable: false,\r\n\t\t\topen: false,\r\n\t\t\treservedUnconfirmed: false,\r\n\t\t\tconfirmed: false,\r\n\t\t\tsearch: '',\r\n\t\t\tmodal: null,\r\n\t\t\tdata: [],\r\n\t\t\tstartTime: '7:00',\r\n\t\t\tendTime: '19:00',\r\n\t\t\tresourceName: '',\r\n\t\t\tcontrastReqStatus: '',\r\n\t\t\tdate: 'yyyy-mm-dd',\r\n\t\t\terr: '',\r\n\t\t\tnewItemComment: '',\r\n\t\t};\r\n\t}\r\n\r\n\tpublic componentDidMount() {\r\n\t\tnew Api.ResourceApi().availabilityRulesGET({\r\n\t\t\tsearch: '',\r\n\t\t\tauthToken: getAuthToken(),\r\n\t\t\tlocationId: '',\r\n\t\t\twithContrast: false,\r\n\t\t} as any).then((result) => {\r\n\t\t\tif (result.value) {\r\n\t\t\t\tthis.setState({data: result.value || []});\r\n\t\t\t} else {\r\n\t\t\t\tthis.setState({err: result.message || 'Error'});\r\n\t\t\t}\r\n\t\t}, (err) => {\r\n\t\t\tconsole.log(err);\r\n\t\t\t// TODO: loginRedirect()\r\n\t\t});\r\n\t}\r\n\r\n\tpublic render() {\r\n\t\treturn (\r\n\t\t\t<IndexLayout>\r\n\t\t\t\t<Page>\r\n\t\t\t\t\t{this.renderInner()}\r\n\t\t\t\t</Page>\r\n\t\t\t</IndexLayout>\r\n\t\t);\r\n\t}\r\n\r\n\tpublic handleAddRule(e) {\r\n\t\te.preventDefault();\r\n\t\tnew Api.ResourceApi().availabilityRulesPOST({\r\n\t\t\tauthToken: getAuthToken(),\r\n\t\t\treq: {\r\n\t\t\t\tstatus: this.state.contrastReqStatus,\r\n\t\t\t\tcomment: this.state.newItemComment,\r\n\t\t\t\tstartTime: this.state.startTime,\r\n\t\t\t\tendTime: this.state.endTime,\r\n\t\t\t\tonThisDay: this.state.search === 'Specific Date' ? this.state.date : this.state.search,\r\n\t\t\t\tpartitionKey: 'DefaultLocation',\r\n\t\t\t\trowKey: 'Auto',\r\n\t\t\t\tpriority: 0,\r\n\t\t\t\tresourceID: this.state.resourceName,\r\n\t\t\t},\r\n\t\t}).then((resp) => {\r\n\t\t\tif (resp.success) {\r\n\t\t\t\tthis.setState({data: resp.value || []});\r\n\t\t\t} else {\r\n\t\t\t\talert(resp.message);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tpublic handleDeleteRule(e) {\r\n\t\te.preventDefault();\r\n\t}\r\n\r\n\tpublic renderTable() {\r\n\t\treturn (\r\n\t\t\t<form action=\"#\" onSubmit={(e) => this.handleAddRule(e)}>\r\n\t\t\t\t<table className=\"blue\" style={{width: '500px'}} cellPadding={3}>\r\n\t\t\t\t\t<thead>\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th style={{whiteSpace: 'nowrap'}}>#</th>\r\n\t\t\t\t\t\t<th style={{whiteSpace: 'nowrap'}}>On this day</th>\r\n\t\t\t\t\t\t<th style={{whiteSpace: 'nowrap'}}>Starting at time</th>\r\n\t\t\t\t\t\t<th style={{whiteSpace: 'nowrap'}}>Until time</th>\r\n\t\t\t\t\t\t<th style={{whiteSpace: 'nowrap'}}>ResID</th>\r\n\t\t\t\t\t\t<th style={{whiteSpace: 'nowrap'}}>Comment</th>\r\n\t\t\t\t\t\t<th style={{whiteSpace: 'nowrap'}}>Allow Contrast?</th>\r\n\t\t\t\t\t\t<th style={{whiteSpace: 'nowrap'}}>Actions</th>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t</thead>\r\n\t\t\t\t\t<tbody>\r\n\t\t\t\t\t{(this.state.data || []).map((rule) => (\r\n\t\t\t\t\t\t<tr key={(rule.partitionKey || '') + (rule.rowKey || '')}>\r\n\t\t\t\t\t\t\t<td style={{whiteSpace: 'nowrap'}}>{rule.priority}</td>\r\n\t\t\t\t\t\t\t<td style={{whiteSpace: 'nowrap'}}>{rule.onThisDay}</td>\r\n\t\t\t\t\t\t\t<td style={{whiteSpace: 'nowrap'}}>{rule.startTime}</td>\r\n\t\t\t\t\t\t\t<td style={{whiteSpace: 'nowrap'}}>{rule.endTime}</td>\r\n\t\t\t\t\t\t\t<td style={{whiteSpace: 'nowrap'}}>{rule.resourceID}</td>\r\n\t\t\t\t\t\t\t<td style={{whiteSpace: 'nowrap'}}>{rule.comment}</td>\r\n\t\t\t\t\t\t\t<td style={{whiteSpace: 'nowrap'}}>{rule.status}</td>\r\n\t\t\t\t\t\t\t<td style={{whiteSpace: 'nowrap'}}>-</td>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t))}\r\n\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<td>New</td>\r\n\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t{EditFormBase.boundChoices(\r\n\t\t\t\t\t\t\t\t'',\r\n\t\t\t\t\t\t\t\t\"Any Weekday,Weekend,Mon,Tue,Wed,Thu,Fri,Sat,Sun,Specific Date\".split(','),\r\n\t\t\t\t\t\t\t\tthis.state.search,\r\n\t\t\t\t\t\t\t\t(search) => this.setState({search}),\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t{this.state.search === 'Specific Date' && (\r\n\t\t\t\t\t\t\t\tEditFormBase.boundTextboxValue(\r\n\t\t\t\t\t\t\t\t\t'',\r\n\t\t\t\t\t\t\t\t\tthis.state.date,\r\n\t\t\t\t\t\t\t\t\t(date) => this.setState({date})\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t{EditFormBase.boundTextboxValue('', this.state.startTime, (startTime) => this.setState({startTime}))}\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t{EditFormBase.boundTextboxValue('', this.state.endTime, (endTime) => this.setState({endTime}))}\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t{EditFormBase.boundTextboxValue('',\r\n\t\t\t\t\t\t\t\tthis.state.resourceName,\r\n\t\t\t\t\t\t\t\t(resourceName) => this.setState({resourceName})\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t{EditFormBase.boundTextboxValue('',\r\n\t\t\t\t\t\t\t\tthis.state.newItemComment,\r\n\t\t\t\t\t\t\t\t(newItemComment) => this.setState({newItemComment})\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t{EditFormBase.boundChoices('',\r\n\t\t\t\t\t\t\t\t['Contrast Unavailable', 'Contrast Available', 'Contrast Required', 'Blocked'],\r\n\t\t\t\t\t\t\t\tthis.state.contrastReqStatus,\r\n\t\t\t\t\t\t\t\t(contrastReqStatus) => this.setState({contrastReqStatus})\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t<button className=\"w-button\" type=\"submit\">Add</button>\r\n\t\t\t\t\t\t</td>\r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t</table>\r\n\t\t\t</form>\r\n\t\t);\r\n\t}\r\n\r\n\tpublic renderInner() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h2>Time Rules For This Location</h2>\r\n\t\t\t\t{this.renderTable()}\r\n\r\n\t\t\t\t<button className=\"w-button\" onClick={() => navigate('/admin/site')}>\r\n\t\t\t\t\tGo back to site\r\n\t\t\t\t</button>\r\n\r\n\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default RulesPage;\r\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport { waitForRouteChange } from \"./wait-for-route-change\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  waitForRouteChange,\n}\n","import * as React from 'react'\r\nimport styled from 'react-emotion'\r\nimport { transparentize } from 'polished'\r\nimport { Link } from 'gatsby'\r\n\r\nimport { heights, dimensions, colors } from '../styles/variables'\r\nimport Container from './Container'\r\nimport * as Webflow from '../styles/webflow';\r\nimport { css } from \"emotion\";\r\n\r\nconst StyledHeader = styled.header('navContainer');\r\n\r\nconst Header: React.SFC<{}> = ({}) => (\r\n\t<header>\r\n\t\t<div className=\"nav-grid\">\r\n\t\t\t<div id=\"w-node-82dfbff5e208-14f3913a\" className=\"header-cta-top\">\r\n\t\t\t\t<div className=\"header-inline-block\">\r\n\t\t\t\t\t<div className=\"cta-heading inline-block blue\">Call :</div>\r\n\t\t\t\t\t<div className=\"cta-heading inline-block\"><a href=\"tel:+18334332567\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t className=\"white\">833-IDEAL-MR</a></div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<a href=\"/schedule\" className=\"button-3\">Schedule Online</a></div>\r\n\t\t\t<a href=\"/\" id=\"w-node-82dfbff5e20f-14f3913a\" className=\"brand w-nav-brand w--current\"><img\r\n\t\t\t\tsrc=\"https://uploads-ssl.webflow.com/5b9e87c40899a487ba8091e4/5ba3081aff7d475f9a6fa6d1_Logo%20Dark.svg\"\r\n\t\t\t\talt=\"\" className=\"image-3\"/></a>\r\n\t\t\t<div data-collapse=\"medium\" data-animation=\"default\" data-duration=\"400\" id=\"w-node-82dfbff5e211-14f3913a\"\r\n\t\t\t\t className=\"navbar w-nav\">\r\n\t\t\t\t<nav role=\"navigation\" className=\"navigation-menu w-nav-menu\"><a href=\"/why-ideal-mri\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t className=\"navigation-link-2 white w-nav-link\">Why\r\n\t\t\t\t\tideal MRI</a><a href=\"/for-clinicians\" className=\"navigation-link-2 white w-nav-link\">Meet Our\r\n\t\t\t\t\tTeam</a><a href=\"/what-to-expect\" className=\"navigation-link-2 white w-nav-link\">What to\r\n\t\t\t\t\tExpect</a><a href=\"/pricing-and-insurance\"\r\n\t\t\t\t\t\t\t\t className=\"navigation-link-2 white w-nav-link\">Pricing &amp; Insurance</a><a\r\n\t\t\t\t\thref=\"/for-clinicians\" className=\"navigation-link-2 white w-nav-link\">For Clinicians</a><a\r\n\t\t\t\t\thref=\"/come-see-us\" className=\"navigation-link-2 white w-nav-link\">Find Us</a></nav>\r\n\t\t\t\t<div className=\"hamburger-button-2 white w-nav-button\">\r\n\t\t\t\t\t<div className=\"w-icon-nav-menu\"></div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div className=\"nav-spacer\">&nbsp;</div>\r\n\t</header>\r\n);\r\n\r\nexport default Header\r\n","import * as React from 'react'\r\nimport styled from 'react-emotion'\r\n\r\nconst StyledLayoutRoot = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-height: 100vh;\r\n`\r\n\r\ninterface LayoutRootProps {\r\n  className?: string\r\n}\r\n\r\nconst LayoutRoot: React.SFC<LayoutRootProps> = ({ children, className }) => (\r\n  <StyledLayoutRoot className={className}>{children}</StyledLayoutRoot>\r\n)\r\n\r\nexport default LayoutRoot\r\n","import * as React from 'react'\r\n// import styled from 'react-emotion'\r\n// const StyledLayoutMain = styled.main`\r\n//   display: flex;\r\n//   flex-direction: column;\r\n//   flex: 1;\r\n//\r\n\r\ninterface LayoutMainProps {\r\n  className?: string\r\n}\r\n\r\n// <StyledLayoutMain className={className}>{children}</StyledLayoutMain>\r\nconst LayoutMain: React.SFC<LayoutMainProps> = ({ children, className }) => (\r\n  <main className={className || \"white-section\"}>\r\n      <div className=\"vspace80 w-container\">\r\n          {children}\r\n      </div>\r\n  </main>\r\n);\r\n\r\nexport default LayoutMain\r\n","import * as React from 'react'\r\nimport Helmet from \"react-helmet\";\r\n\r\nconst Footer: React.SFC<{}> = ({}) => (\r\n\t<footer className=\"cta-section centered-accented\">\r\n\t\t<div className=\"cta-footer\">\r\n\t\t\t<div className=\"footer-inline-block\">\r\n\t\t\t\t<h2 className=\"cta-heading inline-block blue\"><a href=\"tel:+18334332567\">Call</a> : </h2>\r\n\t\t\t\t<h2 className=\"cta-heading inline-block\"><a href=\"tel:+18334332567\" className=\"white\">833-IDEAL-MR</a>\r\n\t\t\t\t</h2>\r\n\t\t\t</div>\r\n\t\t\t<a href=\"/schedule\" className=\"button large\">Schedule Online</a></div>\r\n\t\t<div className=\"cta-footer\"><img\r\n\t\t\tsrc=\"https://uploads-ssl.webflow.com/5b9e87c40899a487ba8091e4/5ba3081aff7d475f9a6fa6d1_Logo%20Dark.svg\"\r\n\t\t\theight=\"60\" alt=\"\" className=\"cta-branding\"/><a href=\"/policies-and-hipaa-notice\">Policies and\r\n\t\t\tInformation</a></div>\r\n\t\t<Helmet>\r\n\t\t\t<script src=\"https://code.jquery.com/jquery-3.3.1.min.js\" type=\"text/javascript\"\r\n\t\t\t\t\tintegrity=\"sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8=\" crossOrigin=\"anonymous\" />\r\n\t\t\t<script src=\"https://uploads-ssl.webflow.com/5b9e87c40899a487ba8091e4/js/ideal-mri.71c22ec14.js\"\r\n\t\t\t\t\ttype=\"text/javascript\" />\r\n\t\t</Helmet>\r\n\t</footer>\r\n);\r\n\r\nexport default Footer\r\n","import * as React from 'react'\r\n\r\nconst Footer: React.SFC<{}> = ({}) => (\r\n\t<section className=\"cta-section\">\r\n\t\t<div className=\"w-container\">\r\n\t\t\t<div className=\"w-layout-grid grid-2\"><a href=\"/why-ideal-mri\" id=\"w-node-774288a9e25a-774089fe\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t className=\"cta-grid-item w-inline-block\"><img\r\n\t\t\t\tsrc=\"https://uploads-ssl.webflow.com/5b9e87c40899a487ba8091e4/5b9ead31fb9e09c21b36b101_Why.svg\" alt=\"\"\r\n\t\t\t\tclassName=\"cta-button-image\"/>\r\n\t\t\t\t<div id=\"w-node-774288a9e25c-774089fe\">Why ideal MRI</div>\r\n\t\t\t</a><a href=\"/what-to-expect\" id=\"w-node-774288a9e25e-774089fe\"\r\n\t\t\t\t   className=\"cta-grid-item w-inline-block\"><img\r\n\t\t\t\tsrc=\"https://uploads-ssl.webflow.com/5b9e87c40899a487ba8091e4/5b9ead2f69d670128b342c0a_Expect.svg\"\r\n\t\t\t\talt=\"\" className=\"cta-button-image\"/>\r\n\t\t\t\t<div>What to Expect</div>\r\n\t\t\t</a><a href=\"/meet-our-team\" id=\"w-node-774288a9e262-774089fe\" className=\"cta-grid-item w-inline-block\"><img\r\n\t\t\t\tsrc=\"https://uploads-ssl.webflow.com/5b9e87c40899a487ba8091e4/5b9ead2f3661e73d2f76eedd_Meet%20Our%20Team.svg\"\r\n\t\t\t\talt=\"\" className=\"cta-button-image\"/>\r\n\t\t\t\t<div>Meet Our Team</div>\r\n\t\t\t</a><a href=\"/for-clinicians\" id=\"w-node-774288a9e266-774089fe\"\r\n\t\t\t\t   className=\"cta-grid-item w-inline-block\"><img\r\n\t\t\t\tsrc=\"https://uploads-ssl.webflow.com/5b9e87c40899a487ba8091e4/5b9ead313661e7266876eedf_Providers.svg\"\r\n\t\t\t\talt=\"\" className=\"cta-button-image\"/>\r\n\t\t\t\t<div>For Clinicians</div>\r\n\t\t\t</a><a href=\"/pricing-and-insurance\" id=\"w-node-774288a9e26a-774089fe\"\r\n\t\t\t\t   className=\"cta-grid-item w-inline-block\"><img\r\n\t\t\t\tsrc=\"https://uploads-ssl.webflow.com/5b9e87c40899a487ba8091e4/5b9ead313661e7547b76eee0_Pricing.svg\"\r\n\t\t\t\talt=\"\" className=\"cta-button-image\"/>\r\n\t\t\t\t<div>Pricing &amp; Insurance</div>\r\n\t\t\t</a><a href=\"/come-see-us\" id=\"w-node-774288a9e26e-774089fe\" className=\"cta-grid-item w-inline-block\"><img\r\n\t\t\t\tsrc=\"https://uploads-ssl.webflow.com/5b9e87c40899a487ba8091e4/5b9ead2f08470e4beefa3f54_Find%20Us.svg\"\r\n\t\t\t\talt=\"\" className=\"cta-button-image\"/>\r\n\t\t\t\t<div>Find Us</div>\r\n\t\t\t</a></div>\r\n\t\t</div>\r\n\t</section>\r\n);\r\n\r\nexport default Footer\r\n","import * as React from 'react'\r\nimport Helmet from 'react-helmet'\r\nimport {StaticQuery, graphql} from 'gatsby'\r\n\r\n// import 'modern-normalize'\r\n// import '../styles/normalize'\r\nimport '../styles/webflow.css'\r\nimport '../styles/webflow.grid.css'\r\nimport '../styles/animate.css'\r\nimport '../styles/tables.css'\r\n\r\nimport Header from '../components/Header'\r\nimport LayoutRoot from '../components/LayoutRoot'\r\nimport LayoutMain from '../components/LayoutMain'\r\nimport Footer from \"../components/Footer\";\r\nimport FooterNav from \"../components/FooterNav\";\r\n\r\ntype StaticQueryProps = {\r\n\tsite: {\r\n\t\tsiteMetadata: {\r\n\t\t\ttitle: string\r\n\t\t\tdescription: string\r\n\t\t}\r\n\t}\r\n}\r\n\r\nconst IndexLayout: React.SFC = ({children}) => (\r\n\t<StaticQuery\r\n\t\tquery={graphql`\r\n      query IndexLayoutQuery {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n          }\r\n        }\r\n      }\r\n    `}\r\n\t\trender={(data: StaticQueryProps) => (\r\n\t\t\t<LayoutRoot>\r\n\t\t\t\t<Helmet\r\n\t\t\t\t\ttitle={data.site.siteMetadata.title}\r\n\t\t\t\t\tmeta={[\r\n\t\t\t\t\t\t{name: 'description', content: data.site.siteMetadata.description},\r\n\t\t\t\t\t\t{name: 'keywords', content: 'gatsbyjs, gatsby, javascript, sample, something'}\r\n\t\t\t\t\t]}\r\n\t\t\t\t/>\r\n\t\t\t\t<Header/>\r\n\t\t\t\t<LayoutMain>{children}</LayoutMain>\r\n\t\t\t\t<FooterNav/>\r\n\t\t\t\t<Footer/>\r\n\t\t\t</LayoutRoot>\r\n\t\t)}\r\n\t/>\r\n)\r\n\r\nexport default IndexLayout\r\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import * as React from 'react'\r\nimport styled from 'react-emotion'\r\n\r\nimport { dimensions } from '../styles/variables'\r\n\r\nconst StyledPage = styled.div`\r\n  display: block;\r\n  flex: 1;\r\n  position: relative;\r\n`\r\n\r\ninterface PageProps {\r\n  className?: string\r\n}\r\n\r\nconst Page: React.SFC<PageProps> = ({ children, className }) => <StyledPage className={className}>{children}</StyledPage>\r\n\r\nexport default Page\r\n","/**\n * ideal MRI\n * Signup Center API\n *\n * OpenAPI spec version: v1\n * Contact: ben@herila.net\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nimport * as querystring from \"querystring\";\nimport * as url from \"url\";\n\nimport * as isomorphicFetch from \"isomorphic-fetch\";\nimport * as assign from \"core-js/library/fn/object/assign\";\n\ninterface Dictionary<T> { [index: string]: T; }\nexport interface FetchAPI { (url: string, init?: any): Promise<any>; }\n\nconst BASE_PATH = \"https://mrisched.azurewebsites.net\".replace(/\\/+$/, \"\");\n\nexport interface FetchArgs {\n    url: string;\n    options: any;\n}\n\nexport class BaseAPI {\n    basePath: string;\n    fetch: FetchAPI;\n\n    constructor(fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) {\n        this.basePath = basePath;\n        this.fetch = fetch;\n    }\n};\n\nexport interface ApiResultListAppointment {\n    \"value\"?: Array<Appointment>;\n    \"success\"?: boolean;\n    \"message\"?: string;\n    \"stackTrace\"?: Array<Stack>;\n}\n\nexport interface ApiResultListAvailabilityRule {\n    \"value\"?: Array<AvailabilityRule>;\n    \"success\"?: boolean;\n    \"message\"?: string;\n    \"stackTrace\"?: Array<Stack>;\n}\n\nexport interface ApiResultListSlotAvailabilityDate {\n    \"value\"?: Array<SlotAvailabilityDate>;\n    \"success\"?: boolean;\n    \"message\"?: string;\n    \"stackTrace\"?: Array<Stack>;\n}\n\nexport interface Appointment {\n    \"resourceId\"?: string;\n    \"startTimeRequested\"?: string;\n    \"serviceType\"?: string;\n    \"serviceLength\"?: number;\n    \"firstName\"?: string;\n    \"lastName\"?: string;\n    \"phone\"?: string;\n    \"email\"?: string;\n    \"address1\"?: string;\n    \"city\"?: string;\n    \"state\"?: string;\n    \"zip\"?: string;\n    \"height\"?: string;\n    \"weight\"?: string;\n    \"reminder\"?: number;\n    \"doctorName\"?: string;\n    \"doctorPhone\"?: string;\n    \"insuranceCarrier\"?: string;\n    \"insuranceGroupNumber\"?: string;\n    \"insurancePolicyNumber\"?: string;\n    \"insuranceVerified\"?: boolean;\n    \"priorAuthObtained\"?: boolean;\n    \"orderEnteredToRIS\"?: boolean;\n    \"patientWasCalled\"?: boolean;\n    \"confirmed\"?: boolean;\n    \"orderImageUrl\"?: string;\n    \"insuranceFrontUrl\"?: string;\n    \"insuranceBackUrl\"?: string;\n    \"surveyDataJson\"?: string;\n    \"approvedDate\"?: Date;\n    \"submittedDate\"?: Date;\n    \"confirmedDate\"?: Date;\n    \"birthday\"?: string;\n    \"partitionKey\"?: string;\n    \"rowKey\"?: string;\n    \"timestamp\"?: Date;\n    \"eTag\"?: string;\n}\n\nexport interface AvailabilityRule {\n    \"priority\"?: number;\n    \"resourceID\"?: string;\n    \"onThisDay\"?: string;\n    \"startTime\"?: string;\n    \"endTime\"?: string;\n    \"comment\"?: string;\n    \"status\"?: string;\n    \"partitionKey\"?: string;\n    \"rowKey\"?: string;\n    \"timestamp\"?: Date;\n    \"eTag\"?: string;\n}\n\nexport interface CustomerLead {\n    \"firstName\"?: string;\n    \"lastName\"?: string;\n    \"dob\"?: string;\n    \"phone\"?: string;\n    \"email\"?: string;\n    \"serviceType\"?: string;\n    \"timeSlot\"?: string;\n    \"withContrast\"?: boolean;\n    \"partitionKey\"?: string;\n    \"rowKey\"?: string;\n    \"timestamp\"?: Date;\n    \"eTag\"?: string;\n}\n\nexport interface Location {\n    \"partitionKey\"?: string;\n    \"rowKey\"?: string;\n    \"timestamp\"?: Date;\n    \"eTag\"?: string;\n}\n\nexport interface SlotAvailabilityDate {\n    \"date\"?: Date;\n    \"friendlyBegin\"?: string;\n    \"times\"?: Array<SlotAvailabilityTime>;\n}\n\nexport interface SlotAvailabilityTime {\n    \"time\"?: string;\n    \"resourceId\"?: string;\n    \"isHidden\"?: boolean;\n    \"isAvailable\"?: boolean;\n    \"isContrastAvailable\"?: boolean;\n    \"isContrastRequired\"?: boolean;\n    \"linkedAppointment\"?: Appointment;\n    \"slotId\"?: string;\n}\n\nexport interface Stack {\n    \"in\"?: string;\n    \"at\"?: string;\n}\n\nexport interface SurveyQuestion {\n    \"questionId\"?: string;\n    \"questionShowIf\"?: string;\n    \"questionShowIfAnswer\"?: string;\n    \"questionText\"?: string;\n    \"questionType\"?: string;\n    \"isRequired\"?: boolean;\n    \"isHidden\"?: boolean;\n    \"order\"?: number;\n    \"partitionKey\"?: string;\n    \"rowKey\"?: string;\n    \"timestamp\"?: Date;\n    \"eTag\"?: string;\n}\n\nexport interface TableResult {\n    \"result\"?: any;\n    \"httpStatusCode\"?: number;\n    \"etag\"?: string;\n}\n\nexport interface User {\n    \"apiKey\"?: string;\n    \"immutableId\"?: string;\n    \"referenceRowKey\"?: string;\n    \"partitionKey\"?: string;\n    \"rowKey\"?: string;\n    \"timestamp\"?: Date;\n    \"eTag\"?: string;\n}\n\n\n\n/**\n * AuthApi - fetch parameter creator\n */\nexport const AuthApiFetchParamCreator = {\n    /**\n     *\n     * @summary Auth\n     * @param req\n     * @param authToken\n     */\n    auth(params: {  \"req\"?: User; \"authToken\"?: string; }, options?: any): FetchArgs {\n        const baseUrl = `/api/auth`;\n        let urlObj = url.parse(baseUrl, true);\n        urlObj.query = assign({}, urlObj.query, {\n            \"authToken\": params[\"authToken\"],\n        });\n        let fetchOptions: RequestInit = assign({}, { method: \"POST\" }, options);\n\n        let contentTypeHeader: Dictionary<string> = {};\n        contentTypeHeader = { \"Content-Type\": \"application/json\" };\n        if (params[\"req\"]) {\n            fetchOptions.body = JSON.stringify(params[\"req\"] || {});\n        }\n        if (contentTypeHeader) {\n            fetchOptions.headers = assign({}, contentTypeHeader, fetchOptions.headers);\n        }\n        return {\n            url: url.format(urlObj),\n            options: fetchOptions,\n        };\n    },\n};\n\n/**\n * AuthApi - functional programming interface\n */\nexport const AuthApiFp = {\n    /**\n     *\n     * @summary Auth\n     * @param req\n     * @param authToken\n     */\n    auth(params: { \"req\"?: User; \"authToken\"?: string;  }, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<User> {\n        const fetchArgs = AuthApiFetchParamCreator.auth(params, options);\n        return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {\n            return fetch(basePath + fetchArgs.url, fetchArgs.options).then((response) => {\n                if (response.status >= 200 && response.status < 300) {\n                    return response.json();\n                } else {\n                    throw response;\n                }\n            });\n        };\n    },\n};\n\n/**\n * AuthApi - object-oriented interface\n */\nexport class AuthApi extends BaseAPI {\n    /**\n     *\n     * @summary Auth\n     * @param req\n     * @param authToken\n     */\n    auth(params: {  \"req\"?: User; \"authToken\"?: string; }, options?: any) {\n        return AuthApiFp.auth(params, options)(this.fetch, this.basePath);\n    }\n};\n\n/**\n * AuthApi - factory interface\n */\nexport const AuthApiFactory = function (fetch?: FetchAPI, basePath?: string) {\n    return {\n        /**\n         *\n         * @summary Auth\n         * @param req\n         * @param authToken\n         */\n        auth(params: {  \"req\"?: User; \"authToken\"?: string; }, options?: any) {\n            return AuthApiFp.auth(params, options)(fetch, basePath);\n        },\n    };\n};\n\n\n/**\n * LeadGenApi - fetch parameter creator\n */\nexport const LeadGenApiFetchParamCreator = {\n    /**\n     *\n     * @summary Run\n     * @param req\n     * @param authToken\n     */\n    runGET(params: {  \"req\"?: CustomerLead; \"authToken\"?: string; }, options?: any): FetchArgs {\n        const baseUrl = `/api/leadGen`;\n        let urlObj = url.parse(baseUrl, true);\n        urlObj.query = assign({}, urlObj.query, {\n            \"authToken\": params[\"authToken\"],\n        });\n        let fetchOptions: RequestInit = assign({}, { method: \"GET\" }, options);\n\n        let contentTypeHeader: Dictionary<string> = {};\n        contentTypeHeader = { \"Content-Type\": \"application/json\" };\n        if (params[\"req\"]) {\n            fetchOptions.body = JSON.stringify(params[\"req\"] || {});\n        }\n        if (contentTypeHeader) {\n            fetchOptions.headers = assign({}, contentTypeHeader, fetchOptions.headers);\n        }\n        return {\n            url: url.format(urlObj),\n            options: fetchOptions,\n        };\n    },\n    /**\n     *\n     * @summary Run\n     * @param req\n     * @param authToken\n     */\n    runPOST(params: {  \"req\"?: CustomerLead; \"authToken\"?: string; }, options?: any): FetchArgs {\n        const baseUrl = `/api/leadGen`;\n        let urlObj = url.parse(baseUrl, true);\n        urlObj.query = assign({}, urlObj.query, {\n            \"authToken\": params[\"authToken\"],\n        });\n        let fetchOptions: RequestInit = assign({}, { method: \"POST\" }, options);\n\n        let contentTypeHeader: Dictionary<string> = {};\n        contentTypeHeader = { \"Content-Type\": \"application/json\" };\n        if (params[\"req\"]) {\n            fetchOptions.body = JSON.stringify(params[\"req\"] || {});\n        }\n        if (contentTypeHeader) {\n            fetchOptions.headers = assign({}, contentTypeHeader, fetchOptions.headers);\n        }\n        return {\n            url: url.format(urlObj),\n            options: fetchOptions,\n        };\n    },\n};\n\n/**\n * LeadGenApi - functional programming interface\n */\nexport const LeadGenApiFp = {\n    /**\n     *\n     * @summary Run\n     * @param req\n     * @param authToken\n     */\n    runGET(params: { \"req\"?: CustomerLead; \"authToken\"?: string;  }, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<CustomerLead> {\n        const fetchArgs = LeadGenApiFetchParamCreator.runGET(params, options);\n        return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {\n            return fetch(basePath + fetchArgs.url, fetchArgs.options).then((response) => {\n                if (response.status >= 200 && response.status < 300) {\n                    return response.json();\n                } else {\n                    throw response;\n                }\n            });\n        };\n    },\n    /**\n     *\n     * @summary Run\n     * @param req\n     * @param authToken\n     */\n    runPOST(params: { \"req\"?: CustomerLead; \"authToken\"?: string;  }, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<CustomerLead> {\n        const fetchArgs = LeadGenApiFetchParamCreator.runPOST(params, options);\n        return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {\n            return fetch(basePath + fetchArgs.url, fetchArgs.options).then((response) => {\n                if (response.status >= 200 && response.status < 300) {\n                    return response.json();\n                } else {\n                    throw response;\n                }\n            });\n        };\n    },\n};\n\n/**\n * LeadGenApi - object-oriented interface\n */\nexport class LeadGenApi extends BaseAPI {\n    /**\n     *\n     * @summary Run\n     * @param req\n     * @param authToken\n     */\n    runGET(params: {  \"req\"?: CustomerLead; \"authToken\"?: string; }, options?: any) {\n        return LeadGenApiFp.runGET(params, options)(this.fetch, this.basePath);\n    }\n    /**\n     *\n     * @summary Run\n     * @param req\n     * @param authToken\n     */\n    runPOST(params: {  \"req\"?: CustomerLead; \"authToken\"?: string; }, options?: any) {\n        return LeadGenApiFp.runPOST(params, options)(this.fetch, this.basePath);\n    }\n};\n\n/**\n * LeadGenApi - factory interface\n */\nexport const LeadGenApiFactory = function (fetch?: FetchAPI, basePath?: string) {\n    return {\n        /**\n         *\n         * @summary Run\n         * @param req\n         * @param authToken\n         */\n        runGET(params: {  \"req\"?: CustomerLead; \"authToken\"?: string; }, options?: any) {\n            return LeadGenApiFp.runGET(params, options)(fetch, basePath);\n        },\n        /**\n         *\n         * @summary Run\n         * @param req\n         * @param authToken\n         */\n        runPOST(params: {  \"req\"?: CustomerLead; \"authToken\"?: string; }, options?: any) {\n            return LeadGenApiFp.runPOST(params, options)(fetch, basePath);\n        },\n    };\n};\n\n\n/**\n * PostQuestionApi - fetch parameter creator\n */\nexport const PostQuestionApiFetchParamCreator = {\n    /**\n     *\n     * @summary GetQuestions\n     * @param req\n     */\n    postQuestion(params: {  \"req\"?: SurveyQuestion; }, options?: any): FetchArgs {\n        const baseUrl = `/api/question`;\n        let urlObj = url.parse(baseUrl, true);\n        let fetchOptions: RequestInit = assign({}, { method: \"POST\" }, options);\n\n        let contentTypeHeader: Dictionary<string> = {};\n        contentTypeHeader = { \"Content-Type\": \"application/json\" };\n        if (params[\"req\"]) {\n            fetchOptions.body = JSON.stringify(params[\"req\"] || {});\n        }\n        if (contentTypeHeader) {\n            fetchOptions.headers = assign({}, contentTypeHeader, fetchOptions.headers);\n        }\n        return {\n            url: url.format(urlObj),\n            options: fetchOptions,\n        };\n    },\n};\n\n/**\n * PostQuestionApi - functional programming interface\n */\nexport const PostQuestionApiFp = {\n    /**\n     *\n     * @summary GetQuestions\n     * @param req\n     */\n    postQuestion(params: { \"req\"?: SurveyQuestion;  }, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<TableResult> {\n        const fetchArgs = PostQuestionApiFetchParamCreator.postQuestion(params, options);\n        return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {\n            return fetch(basePath + fetchArgs.url, fetchArgs.options).then((response) => {\n                if (response.status >= 200 && response.status < 300) {\n                    return response.json();\n                } else {\n                    throw response;\n                }\n            });\n        };\n    },\n};\n\n/**\n * PostQuestionApi - object-oriented interface\n */\nexport class PostQuestionApi extends BaseAPI {\n    /**\n     *\n     * @summary GetQuestions\n     * @param req\n     */\n    postQuestion(params: {  \"req\"?: SurveyQuestion; }, options?: any) {\n        return PostQuestionApiFp.postQuestion(params, options)(this.fetch, this.basePath);\n    }\n};\n\n/**\n * PostQuestionApi - factory interface\n */\nexport const PostQuestionApiFactory = function (fetch?: FetchAPI, basePath?: string) {\n    return {\n        /**\n         *\n         * @summary GetQuestions\n         * @param req\n         */\n        postQuestion(params: {  \"req\"?: SurveyQuestion; }, options?: any) {\n            return PostQuestionApiFp.postQuestion(params, options)(fetch, basePath);\n        },\n    };\n};\n\n\n/**\n * QuestionApi - fetch parameter creator\n */\nexport const QuestionApiFetchParamCreator = {\n    /**\n     *\n     * @summary GetQuestions\n     */\n    getQuestions(options?: any): FetchArgs {\n        const baseUrl = `/api/question`;\n        let urlObj = url.parse(baseUrl, true);\n        let fetchOptions: RequestInit = assign({}, { method: \"GET\" }, options);\n\n        let contentTypeHeader: Dictionary<string> = {};\n        if (contentTypeHeader) {\n            fetchOptions.headers = assign({}, contentTypeHeader, fetchOptions.headers);\n        }\n        return {\n            url: url.format(urlObj),\n            options: fetchOptions,\n        };\n    },\n};\n\n/**\n * QuestionApi - functional programming interface\n */\nexport const QuestionApiFp = {\n    /**\n     *\n     * @summary GetQuestions\n     */\n    getQuestions(options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Array<SurveyQuestion>> {\n        const fetchArgs = QuestionApiFetchParamCreator.getQuestions(options);\n        return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {\n            return fetch(basePath + fetchArgs.url, fetchArgs.options).then((response) => {\n                if (response.status >= 200 && response.status < 300) {\n                    return response.json();\n                } else {\n                    throw response;\n                }\n            });\n        };\n    },\n};\n\n/**\n * QuestionApi - object-oriented interface\n */\nexport class QuestionApi extends BaseAPI {\n    /**\n     *\n     * @summary GetQuestions\n     */\n    getQuestions(options?: any) {\n        return QuestionApiFp.getQuestions(options)(this.fetch, this.basePath);\n    }\n};\n\n/**\n * QuestionApi - factory interface\n */\nexport const QuestionApiFactory = function (fetch?: FetchAPI, basePath?: string) {\n    return {\n        /**\n         *\n         * @summary GetQuestions\n         */\n        getQuestions(options?: any) {\n            return QuestionApiFp.getQuestions(options)(fetch, basePath);\n        },\n    };\n};\n\n\n/**\n * ResourceApi - fetch parameter creator\n */\nexport const ResourceApiFetchParamCreator = {\n    /**\n     *\n     * @summary AvailabilityRules\n     * @param req\n     * @param authToken\n     */\n    availabilityRulesDELETE(params: {  \"req\"?: AvailabilityRule; \"authToken\"?: string; }, options?: any): FetchArgs {\n        const baseUrl = `/api/timeslot/rules`;\n        let urlObj = url.parse(baseUrl, true);\n        urlObj.query = assign({}, urlObj.query, {\n            \"authToken\": params[\"authToken\"],\n        });\n        let fetchOptions: RequestInit = assign({}, { method: \"DELETE\" }, options);\n\n        let contentTypeHeader: Dictionary<string> = {};\n        contentTypeHeader = { \"Content-Type\": \"application/json\" };\n        if (params[\"req\"]) {\n            fetchOptions.body = JSON.stringify(params[\"req\"] || {});\n        }\n        if (contentTypeHeader) {\n            fetchOptions.headers = assign({}, contentTypeHeader, fetchOptions.headers);\n        }\n        return {\n            url: url.format(urlObj),\n            options: fetchOptions,\n        };\n    },\n    /**\n     *\n     * @summary AvailabilityRules\n     * @param authToken\n     */\n    availabilityRulesGET(params: {  \"authToken\"?: string; }, options?: any): FetchArgs {\n        const baseUrl = `/api/timeslot/rules`;\n        let urlObj = url.parse(baseUrl, true);\n        urlObj.query = assign({}, urlObj.query, {\n            \"authToken\": params[\"authToken\"],\n        });\n        let fetchOptions: RequestInit = assign({}, { method: \"GET\" }, options);\n\n        let contentTypeHeader: Dictionary<string> = {};\n        if (contentTypeHeader) {\n            fetchOptions.headers = assign({}, contentTypeHeader, fetchOptions.headers);\n        }\n        return {\n            url: url.format(urlObj),\n            options: fetchOptions,\n        };\n    },\n    /**\n     *\n     * @summary AvailabilityRules\n     * @param req\n     * @param authToken\n     */\n    availabilityRulesPOST(params: {  \"req\"?: AvailabilityRule; \"authToken\"?: string; }, options?: any): FetchArgs {\n        const baseUrl = `/api/timeslot/rules`;\n        let urlObj = url.parse(baseUrl, true);\n        urlObj.query = assign({}, urlObj.query, {\n            \"authToken\": params[\"authToken\"],\n        });\n        let fetchOptions: RequestInit = assign({}, { method: \"POST\" }, options);\n\n        let contentTypeHeader: Dictionary<string> = {};\n        contentTypeHeader = { \"Content-Type\": \"application/json\" };\n        if (params[\"req\"]) {\n            fetchOptions.body = JSON.stringify(params[\"req\"] || {});\n        }\n        if (contentTypeHeader) {\n            fetchOptions.headers = assign({}, contentTypeHeader, fetchOptions.headers);\n        }\n        return {\n            url: url.format(urlObj),\n            options: fetchOptions,\n        };\n    },\n    /**\n     *\n     * @summary AvailabilityRules\n     * @param req\n     * @param authToken\n     */\n    availabilityRulesPUT(params: {  \"req\"?: AvailabilityRule; \"authToken\"?: string; }, options?: any): FetchArgs {\n        const baseUrl = `/api/timeslot/rules`;\n        let urlObj = url.parse(baseUrl, true);\n        urlObj.query = assign({}, urlObj.query, {\n            \"authToken\": params[\"authToken\"],\n        });\n        let fetchOptions: RequestInit = assign({}, { method: \"PUT\" }, options);\n\n        let contentTypeHeader: Dictionary<string> = {};\n        contentTypeHeader = { \"Content-Type\": \"application/json\" };\n        if (params[\"req\"]) {\n            fetchOptions.body = JSON.stringify(params[\"req\"] || {});\n        }\n        if (contentTypeHeader) {\n            fetchOptions.headers = assign({}, contentTypeHeader, fetchOptions.headers);\n        }\n        return {\n            url: url.format(urlObj),\n            options: fetchOptions,\n        };\n    },\n    /**\n     *\n     * @summary Locations\n     * @param locationId\n     * @param authToken\n     */\n    locationsGET(params: {  \"locationId\"?: string; \"authToken\"?: string; }, options?: any): FetchArgs {\n        const baseUrl = `/api/locations`;\n        let urlObj = url.parse(baseUrl, true);\n        urlObj.query = assign({}, urlObj.query, {\n            \"locationId\": params[\"locationId\"],\n            \"authToken\": params[\"authToken\"],\n        });\n        let fetchOptions: RequestInit = assign({}, { method: \"GET\" }, options);\n\n        let contentTypeHeader: Dictionary<string> = {};\n        if (contentTypeHeader) {\n            fetchOptions.headers = assign({}, contentTypeHeader, fetchOptions.headers);\n        }\n        return {\n            url: url.format(urlObj),\n            options: fetchOptions,\n        };\n    },\n    /**\n     *\n     * @summary Locations\n     * @param locationId\n     * @param authToken\n     */\n    locationsPOST(params: {  \"locationId\"?: string; \"authToken\"?: string; }, options?: any): FetchArgs {\n        const baseUrl = `/api/locations`;\n        let urlObj = url.parse(baseUrl, true);\n        urlObj.query = assign({}, urlObj.query, {\n            \"locationId\": params[\"locationId\"],\n            \"authToken\": params[\"authToken\"],\n        });\n        let fetchOptions: RequestInit = assign({}, { method: \"POST\" }, options);\n\n        let contentTypeHeader: Dictionary<string> = {};\n        if (contentTypeHeader) {\n            fetchOptions.headers = assign({}, contentTypeHeader, fetchOptions.headers);\n        }\n        return {\n            url: url.format(urlObj),\n            options: fetchOptions,\n        };\n    },\n};\n\n/**\n * ResourceApi - functional programming interface\n */\nexport const ResourceApiFp = {\n    /**\n     *\n     * @summary AvailabilityRules\n     * @param req\n     * @param authToken\n     */\n    availabilityRulesDELETE(params: { \"req\"?: AvailabilityRule; \"authToken\"?: string;  }, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ApiResultListAvailabilityRule> {\n        const fetchArgs = ResourceApiFetchParamCreator.availabilityRulesDELETE(params, options);\n        return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {\n            return fetch(basePath + fetchArgs.url, fetchArgs.options).then((response) => {\n                if (response.status >= 200 && response.status < 300) {\n                    return response.json();\n                } else {\n                    throw response;\n                }\n            });\n        };\n    },\n    /**\n     *\n     * @summary AvailabilityRules\n     * @param authToken\n     */\n    availabilityRulesGET(params: { \"authToken\"?: string;  }, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ApiResultListAvailabilityRule> {\n        const fetchArgs = ResourceApiFetchParamCreator.availabilityRulesGET(params, options);\n        return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {\n            return fetch(basePath + fetchArgs.url, fetchArgs.options).then((response) => {\n                if (response.status >= 200 && response.status < 300) {\n                    return response.json();\n                } else {\n                    throw response;\n                }\n            });\n        };\n    },\n    /**\n     *\n     * @summary AvailabilityRules\n     * @param req\n     * @param authToken\n     */\n    availabilityRulesPOST(params: { \"req\"?: AvailabilityRule; \"authToken\"?: string;  }, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ApiResultListAvailabilityRule> {\n        const fetchArgs = ResourceApiFetchParamCreator.availabilityRulesPOST(params, options);\n        return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {\n            return fetch(basePath + fetchArgs.url, fetchArgs.options).then((response) => {\n                if (response.status >= 200 && response.status < 300) {\n                    return response.json();\n                } else {\n                    throw response;\n                }\n            });\n        };\n    },\n    /**\n     *\n     * @summary AvailabilityRules\n     * @param req\n     * @param authToken\n     */\n    availabilityRulesPUT(params: { \"req\"?: AvailabilityRule; \"authToken\"?: string;  }, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ApiResultListAvailabilityRule> {\n        const fetchArgs = ResourceApiFetchParamCreator.availabilityRulesPUT(params, options);\n        return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {\n            return fetch(basePath + fetchArgs.url, fetchArgs.options).then((response) => {\n                if (response.status >= 200 && response.status < 300) {\n                    return response.json();\n                } else {\n                    throw response;\n                }\n            });\n        };\n    },\n    /**\n     *\n     * @summary Locations\n     * @param locationId\n     * @param authToken\n     */\n    locationsGET(params: { \"locationId\"?: string; \"authToken\"?: string;  }, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Array<Location>> {\n        const fetchArgs = ResourceApiFetchParamCreator.locationsGET(params, options);\n        return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {\n            return fetch(basePath + fetchArgs.url, fetchArgs.options).then((response) => {\n                if (response.status >= 200 && response.status < 300) {\n                    return response.json();\n                } else {\n                    throw response;\n                }\n            });\n        };\n    },\n    /**\n     *\n     * @summary Locations\n     * @param locationId\n     * @param authToken\n     */\n    locationsPOST(params: { \"locationId\"?: string; \"authToken\"?: string;  }, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Array<Location>> {\n        const fetchArgs = ResourceApiFetchParamCreator.locationsPOST(params, options);\n        return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {\n            return fetch(basePath + fetchArgs.url, fetchArgs.options).then((response) => {\n                if (response.status >= 200 && response.status < 300) {\n                    return response.json();\n                } else {\n                    throw response;\n                }\n            });\n        };\n    },\n};\n\n/**\n * ResourceApi - object-oriented interface\n */\nexport class ResourceApi extends BaseAPI {\n    /**\n     *\n     * @summary AvailabilityRules\n     * @param req\n     * @param authToken\n     */\n    availabilityRulesDELETE(params: {  \"req\"?: AvailabilityRule; \"authToken\"?: string; }, options?: any) {\n        return ResourceApiFp.availabilityRulesDELETE(params, options)(this.fetch, this.basePath);\n    }\n    /**\n     *\n     * @summary AvailabilityRules\n     * @param authToken\n     */\n    availabilityRulesGET(params: {  \"authToken\"?: string; }, options?: any) {\n        return ResourceApiFp.availabilityRulesGET(params, options)(this.fetch, this.basePath);\n    }\n    /**\n     *\n     * @summary AvailabilityRules\n     * @param req\n     * @param authToken\n     */\n    availabilityRulesPOST(params: {  \"req\"?: AvailabilityRule; \"authToken\"?: string; }, options?: any) {\n        return ResourceApiFp.availabilityRulesPOST(params, options)(this.fetch, this.basePath);\n    }\n    /**\n     *\n     * @summary AvailabilityRules\n     * @param req\n     * @param authToken\n     */\n    availabilityRulesPUT(params: {  \"req\"?: AvailabilityRule; \"authToken\"?: string; }, options?: any) {\n        return ResourceApiFp.availabilityRulesPUT(params, options)(this.fetch, this.basePath);\n    }\n    /**\n     *\n     * @summary Locations\n     * @param locationId\n     * @param authToken\n     */\n    locationsGET(params: {  \"locationId\"?: string; \"authToken\"?: string; }, options?: any) {\n        return ResourceApiFp.locationsGET(params, options)(this.fetch, this.basePath);\n    }\n    /**\n     *\n     * @summary Locations\n     * @param locationId\n     * @param authToken\n     */\n    locationsPOST(params: {  \"locationId\"?: string; \"authToken\"?: string; }, options?: any) {\n        return ResourceApiFp.locationsPOST(params, options)(this.fetch, this.basePath);\n    }\n};\n\n/**\n * ResourceApi - factory interface\n */\nexport const ResourceApiFactory = function (fetch?: FetchAPI, basePath?: string) {\n    return {\n        /**\n         *\n         * @summary AvailabilityRules\n         * @param req\n         * @param authToken\n         */\n        availabilityRulesDELETE(params: {  \"req\"?: AvailabilityRule; \"authToken\"?: string; }, options?: any) {\n            return ResourceApiFp.availabilityRulesDELETE(params, options)(fetch, basePath);\n        },\n        /**\n         *\n         * @summary AvailabilityRules\n         * @param authToken\n         */\n        availabilityRulesGET(params: {  \"authToken\"?: string; }, options?: any) {\n            return ResourceApiFp.availabilityRulesGET(params, options)(fetch, basePath);\n        },\n        /**\n         *\n         * @summary AvailabilityRules\n         * @param req\n         * @param authToken\n         */\n        availabilityRulesPOST(params: {  \"req\"?: AvailabilityRule; \"authToken\"?: string; }, options?: any) {\n            return ResourceApiFp.availabilityRulesPOST(params, options)(fetch, basePath);\n        },\n        /**\n         *\n         * @summary AvailabilityRules\n         * @param req\n         * @param authToken\n         */\n        availabilityRulesPUT(params: {  \"req\"?: AvailabilityRule; \"authToken\"?: string; }, options?: any) {\n            return ResourceApiFp.availabilityRulesPUT(params, options)(fetch, basePath);\n        },\n        /**\n         *\n         * @summary Locations\n         * @param locationId\n         * @param authToken\n         */\n        locationsGET(params: {  \"locationId\"?: string; \"authToken\"?: string; }, options?: any) {\n            return ResourceApiFp.locationsGET(params, options)(fetch, basePath);\n        },\n        /**\n         *\n         * @summary Locations\n         * @param locationId\n         * @param authToken\n         */\n        locationsPOST(params: {  \"locationId\"?: string; \"authToken\"?: string; }, options?: any) {\n            return ResourceApiFp.locationsPOST(params, options)(fetch, basePath);\n        },\n    };\n};\n\n\n/**\n * ScheduleApi - fetch parameter creator\n */\nexport const ScheduleApiFetchParamCreator = {\n    /**\n     *\n     * @summary AppointmentHandler\n     * @param req\n     * @param authToken\n     * @param withContrast\n     * @param locationId\n     * @param search\n     */\n    appointmentHandlerDELETE(params: {  \"req\"?: Appointment; \"authToken\"?: string; \"withContrast\"?: boolean; \"locationId\"?: string; \"search\"?: string; }, options?: any): FetchArgs {\n        const baseUrl = `/api/appointment`;\n        let urlObj = url.parse(baseUrl, true);\n        urlObj.query = assign({}, urlObj.query, {\n            \"authToken\": params[\"authToken\"],\n            \"withContrast\": params[\"withContrast\"],\n            \"locationId\": params[\"locationId\"],\n            \"search\": params[\"search\"],\n        });\n        let fetchOptions: RequestInit = assign({}, { method: \"DELETE\" }, options);\n\n        let contentTypeHeader: Dictionary<string> = {};\n        contentTypeHeader = { \"Content-Type\": \"application/json\" };\n        if (params[\"req\"]) {\n            fetchOptions.body = JSON.stringify(params[\"req\"] || {});\n        }\n        if (contentTypeHeader) {\n            fetchOptions.headers = assign({}, contentTypeHeader, fetchOptions.headers);\n        }\n        return {\n            url: url.format(urlObj),\n            options: fetchOptions,\n        };\n    },\n    /**\n     *\n     * @summary AppointmentHandler\n     * @param authToken\n     * @param withContrast\n     * @param locationId\n     * @param search\n     */\n    appointmentHandlerGET(params: {  \"authToken\"?: string; \"withContrast\"?: boolean; \"locationId\"?: string; \"search\"?: string; }, options?: any): FetchArgs {\n        const baseUrl = `/api/appointment`;\n        let urlObj = url.parse(baseUrl, true);\n        urlObj.query = assign({}, urlObj.query, {\n            \"authToken\": params[\"authToken\"],\n            \"withContrast\": params[\"withContrast\"],\n            \"locationId\": params[\"locationId\"],\n            \"search\": params[\"search\"],\n        });\n        let fetchOptions: RequestInit = assign({}, { method: \"GET\" }, options);\n\n        let contentTypeHeader: Dictionary<string> = {};\n        if (contentTypeHeader) {\n            fetchOptions.headers = assign({}, contentTypeHeader, fetchOptions.headers);\n        }\n        return {\n            url: url.format(urlObj),\n            options: fetchOptions,\n        };\n    },\n    /**\n     *\n     * @summary AppointmentHandler\n     * @param req\n     * @param authToken\n     * @param withContrast\n     * @param locationId\n     * @param search\n     */\n    appointmentHandlerPOST(params: {  \"req\"?: Appointment; \"authToken\"?: string; \"withContrast\"?: boolean; \"locationId\"?: string; \"search\"?: string; }, options?: any): FetchArgs {\n        const baseUrl = `/api/appointment`;\n        let urlObj = url.parse(baseUrl, true);\n        urlObj.query = assign({}, urlObj.query, {\n            \"authToken\": params[\"authToken\"],\n            \"withContrast\": params[\"withContrast\"],\n            \"locationId\": params[\"locationId\"],\n            \"search\": params[\"search\"],\n        });\n        let fetchOptions: RequestInit = assign({}, { method: \"POST\" }, options);\n\n        let contentTypeHeader: Dictionary<string> = {};\n        contentTypeHeader = { \"Content-Type\": \"application/json\" };\n        if (params[\"req\"]) {\n            fetchOptions.body = JSON.stringify(params[\"req\"] || {});\n        }\n        if (contentTypeHeader) {\n            fetchOptions.headers = assign({}, contentTypeHeader, fetchOptions.headers);\n        }\n        return {\n            url: url.format(urlObj),\n            options: fetchOptions,\n        };\n    },\n    /**\n     *\n     * @summary AppointmentHandler\n     * @param req\n     * @param authToken\n     * @param withContrast\n     * @param locationId\n     * @param search\n     */\n    appointmentHandlerPUT(params: {  \"req\"?: Appointment; \"authToken\"?: string; \"withContrast\"?: boolean; \"locationId\"?: string; \"search\"?: string; }, options?: any): FetchArgs {\n        const baseUrl = `/api/appointment`;\n        let urlObj = url.parse(baseUrl, true);\n        urlObj.query = assign({}, urlObj.query, {\n            \"authToken\": params[\"authToken\"],\n            \"withContrast\": params[\"withContrast\"],\n            \"locationId\": params[\"locationId\"],\n            \"search\": params[\"search\"],\n        });\n        let fetchOptions: RequestInit = assign({}, { method: \"PUT\" }, options);\n\n        let contentTypeHeader: Dictionary<string> = {};\n        contentTypeHeader = { \"Content-Type\": \"application/json\" };\n        if (params[\"req\"]) {\n            fetchOptions.body = JSON.stringify(params[\"req\"] || {});\n        }\n        if (contentTypeHeader) {\n            fetchOptions.headers = assign({}, contentTypeHeader, fetchOptions.headers);\n        }\n        return {\n            url: url.format(urlObj),\n            options: fetchOptions,\n        };\n    },\n    /**\n     *\n     * @summary TimeSlots\n     * @param authToken\n     * @param withContrast\n     * @param length\n     * @param locationId\n     */\n    timeSlotsGET(params: {  \"authToken\"?: string; \"withContrast\"?: boolean; \"length\"?: number; \"locationId\"?: string; }, options?: any): FetchArgs {\n        const baseUrl = `/api/timeslots`;\n        let urlObj = url.parse(baseUrl, true);\n        urlObj.query = assign({}, urlObj.query, {\n            \"authToken\": params[\"authToken\"],\n            \"withContrast\": params[\"withContrast\"],\n            \"length\": params[\"length\"],\n            \"locationId\": params[\"locationId\"],\n        });\n        let fetchOptions: RequestInit = assign({}, { method: \"GET\" }, options);\n\n        let contentTypeHeader: Dictionary<string> = {};\n        if (contentTypeHeader) {\n            fetchOptions.headers = assign({}, contentTypeHeader, fetchOptions.headers);\n        }\n        return {\n            url: url.format(urlObj),\n            options: fetchOptions,\n        };\n    },\n};\n\n/**\n * ScheduleApi - functional programming interface\n */\nexport const ScheduleApiFp = {\n    /**\n     *\n     * @summary AppointmentHandler\n     * @param req\n     * @param authToken\n     * @param withContrast\n     * @param locationId\n     * @param search\n     */\n    appointmentHandlerDELETE(params: { \"req\"?: Appointment; \"authToken\"?: string; \"withContrast\"?: boolean; \"locationId\"?: string; \"search\"?: string;  }, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ApiResultListAppointment> {\n        const fetchArgs = ScheduleApiFetchParamCreator.appointmentHandlerDELETE(params, options);\n        return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {\n            return fetch(basePath + fetchArgs.url, fetchArgs.options).then((response) => {\n                if (response.status >= 200 && response.status < 300) {\n                    return response.json();\n                } else {\n                    throw response;\n                }\n            });\n        };\n    },\n    /**\n     *\n     * @summary AppointmentHandler\n     * @param authToken\n     * @param withContrast\n     * @param locationId\n     * @param search\n     */\n    appointmentHandlerGET(params: { \"authToken\"?: string; \"withContrast\"?: boolean; \"locationId\"?: string; \"search\"?: string;  }, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ApiResultListAppointment> {\n        const fetchArgs = ScheduleApiFetchParamCreator.appointmentHandlerGET(params, options);\n        return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {\n            return fetch(basePath + fetchArgs.url, fetchArgs.options).then((response) => {\n                if (response.status >= 200 && response.status < 300) {\n                    return response.json();\n                } else {\n                    throw response;\n                }\n            });\n        };\n    },\n    /**\n     *\n     * @summary AppointmentHandler\n     * @param req\n     * @param authToken\n     * @param withContrast\n     * @param locationId\n     * @param search\n     */\n    appointmentHandlerPOST(params: { \"req\"?: Appointment; \"authToken\"?: string; \"withContrast\"?: boolean; \"locationId\"?: string; \"search\"?: string;  }, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ApiResultListAppointment> {\n        const fetchArgs = ScheduleApiFetchParamCreator.appointmentHandlerPOST(params, options);\n        return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {\n            return fetch(basePath + fetchArgs.url, fetchArgs.options).then((response) => {\n                if (response.status >= 200 && response.status < 300) {\n                    return response.json();\n                } else {\n                    throw response;\n                }\n            });\n        };\n    },\n    /**\n     *\n     * @summary AppointmentHandler\n     * @param req\n     * @param authToken\n     * @param withContrast\n     * @param locationId\n     * @param search\n     */\n    appointmentHandlerPUT(params: { \"req\"?: Appointment; \"authToken\"?: string; \"withContrast\"?: boolean; \"locationId\"?: string; \"search\"?: string;  }, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ApiResultListAppointment> {\n        const fetchArgs = ScheduleApiFetchParamCreator.appointmentHandlerPUT(params, options);\n        return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {\n            return fetch(basePath + fetchArgs.url, fetchArgs.options).then((response) => {\n                if (response.status >= 200 && response.status < 300) {\n                    return response.json();\n                } else {\n                    throw response;\n                }\n            });\n        };\n    },\n    /**\n     *\n     * @summary TimeSlots\n     * @param authToken\n     * @param withContrast\n     * @param length\n     * @param locationId\n     */\n    timeSlotsGET(params: { \"authToken\"?: string; \"withContrast\"?: boolean; \"length\"?: number; \"locationId\"?: string;  }, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ApiResultListSlotAvailabilityDate> {\n        const fetchArgs = ScheduleApiFetchParamCreator.timeSlotsGET(params, options);\n        return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {\n            return fetch(basePath + fetchArgs.url, fetchArgs.options).then((response) => {\n                if (response.status >= 200 && response.status < 300) {\n                    return response.json();\n                } else {\n                    throw response;\n                }\n            });\n        };\n    },\n};\n\n/**\n * ScheduleApi - object-oriented interface\n */\nexport class ScheduleApi extends BaseAPI {\n    /**\n     *\n     * @summary AppointmentHandler\n     * @param req\n     * @param authToken\n     * @param withContrast\n     * @param locationId\n     * @param search\n     */\n    appointmentHandlerDELETE(params: {  \"req\"?: Appointment; \"authToken\"?: string; \"withContrast\"?: boolean; \"locationId\"?: string; \"search\"?: string; }, options?: any) {\n        return ScheduleApiFp.appointmentHandlerDELETE(params, options)(this.fetch, this.basePath);\n    }\n    /**\n     *\n     * @summary AppointmentHandler\n     * @param authToken\n     * @param withContrast\n     * @param locationId\n     * @param search\n     */\n    appointmentHandlerGET(params: {  \"authToken\"?: string; \"withContrast\"?: boolean; \"locationId\"?: string; \"search\"?: string; }, options?: any) {\n        return ScheduleApiFp.appointmentHandlerGET(params, options)(this.fetch, this.basePath);\n    }\n    /**\n     *\n     * @summary AppointmentHandler\n     * @param req\n     * @param authToken\n     * @param withContrast\n     * @param locationId\n     * @param search\n     */\n    appointmentHandlerPOST(params: {  \"req\"?: Appointment; \"authToken\"?: string; \"withContrast\"?: boolean; \"locationId\"?: string; \"search\"?: string; }, options?: any) {\n        return ScheduleApiFp.appointmentHandlerPOST(params, options)(this.fetch, this.basePath);\n    }\n    /**\n     *\n     * @summary AppointmentHandler\n     * @param req\n     * @param authToken\n     * @param withContrast\n     * @param locationId\n     * @param search\n     */\n    appointmentHandlerPUT(params: {  \"req\"?: Appointment; \"authToken\"?: string; \"withContrast\"?: boolean; \"locationId\"?: string; \"search\"?: string; }, options?: any) {\n        return ScheduleApiFp.appointmentHandlerPUT(params, options)(this.fetch, this.basePath);\n    }\n    /**\n     *\n     * @summary TimeSlots\n     * @param authToken\n     * @param withContrast\n     * @param length\n     * @param locationId\n     */\n    timeSlotsGET(params: {  \"authToken\"?: string; \"withContrast\"?: boolean; \"length\"?: number; \"locationId\"?: string; }, options?: any) {\n        return ScheduleApiFp.timeSlotsGET(params, options)(this.fetch, this.basePath);\n    }\n};\n\n/**\n * ScheduleApi - factory interface\n */\nexport const ScheduleApiFactory = function (fetch?: FetchAPI, basePath?: string) {\n    return {\n        /**\n         *\n         * @summary AppointmentHandler\n         * @param req\n         * @param authToken\n         * @param withContrast\n         * @param locationId\n         * @param search\n         */\n        appointmentHandlerDELETE(params: {  \"req\"?: Appointment; \"authToken\"?: string; \"withContrast\"?: boolean; \"locationId\"?: string; \"search\"?: string; }, options?: any) {\n            return ScheduleApiFp.appointmentHandlerDELETE(params, options)(fetch, basePath);\n        },\n        /**\n         *\n         * @summary AppointmentHandler\n         * @param authToken\n         * @param withContrast\n         * @param locationId\n         * @param search\n         */\n        appointmentHandlerGET(params: {  \"authToken\"?: string; \"withContrast\"?: boolean; \"locationId\"?: string; \"search\"?: string; }, options?: any) {\n            return ScheduleApiFp.appointmentHandlerGET(params, options)(fetch, basePath);\n        },\n        /**\n         *\n         * @summary AppointmentHandler\n         * @param req\n         * @param authToken\n         * @param withContrast\n         * @param locationId\n         * @param search\n         */\n        appointmentHandlerPOST(params: {  \"req\"?: Appointment; \"authToken\"?: string; \"withContrast\"?: boolean; \"locationId\"?: string; \"search\"?: string; }, options?: any) {\n            return ScheduleApiFp.appointmentHandlerPOST(params, options)(fetch, basePath);\n        },\n        /**\n         *\n         * @summary AppointmentHandler\n         * @param req\n         * @param authToken\n         * @param withContrast\n         * @param locationId\n         * @param search\n         */\n        appointmentHandlerPUT(params: {  \"req\"?: Appointment; \"authToken\"?: string; \"withContrast\"?: boolean; \"locationId\"?: string; \"search\"?: string; }, options?: any) {\n            return ScheduleApiFp.appointmentHandlerPUT(params, options)(fetch, basePath);\n        },\n        /**\n         *\n         * @summary TimeSlots\n         * @param authToken\n         * @param withContrast\n         * @param length\n         * @param locationId\n         */\n        timeSlotsGET(params: {  \"authToken\"?: string; \"withContrast\"?: boolean; \"length\"?: number; \"locationId\"?: string; }, options?: any) {\n            return ScheduleApiFp.timeSlotsGET(params, options)(fetch, basePath);\n        },\n    };\n};\n\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathname(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import * as React from 'react';\nimport DatePicker from 'react-datepicker';\nimport {isEmpty} from 'ucshared';\n\nconst moment = require('moment');\nconst formStyle = require('./formStyle.css');\n\nexport function formatAdminDate(date: any) {\n\treturn moment(date).format('MM/DD/YYYY');\n}\n\nconst Row = (props: any) => <div>{props.children}</div>;\nconst Col = (props: any) => <div>{props.children}</div>;\n\nexport class EditFormBase<TProps, TState> extends React.Component<TProps, TState> {\n\tpublic static formGroup = 'form-group';\n\tpublic static ctrlLabel = 'control-label';\n\tpublic static sm3 = '3';\n\tpublic static sm9 = '9';\n\tpublic static insertBlock = formStyle.insertBlock;\n\tpublic static detailBlock = formStyle.detailBlock;\n\n\tconstructor(props, context) {\n\t\tsuper(props, context);\n\t}\n\n\tpublic static boundLabel(title: string, defaultValue: string | number | Date) {\n\t\tif (isEmpty(title)) {\n\t\t\treturn <span>{(defaultValue || 'null').toString()}</span>;\n\t\t}\n\t\treturn (\n\t\t\t<Row className={EditFormBase.formGroup}>\n\t\t\t\t<Col sm={EditFormBase.sm3}><label className={EditFormBase.ctrlLabel}>{title}</label></Col>\n\t\t\t\t<Col sm={EditFormBase.sm9}>\n\t\t\t\t\t{(defaultValue || 'null').toString()}\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t);\n\t}\n\n\tpublic static boundTextbox(title: string, defaultValue: string | number | Date, bindFn: React.FormEventHandler<HTMLInputElement>, placeHolder?: string, readOnly?: boolean, isDisabled?: boolean) {\n\t\tconst wrn = EditFormBase.renderWarnings(defaultValue);\n\t\tif (isEmpty(title)) {\n\t\t\treturn (\n\t\t\t\t<span>\n\t\t\t\t\t<input\n\t\t\t\t\t\tdisabled={isDisabled}\n\t\t\t\t\t\tmaxLength={255}\n\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tonChange={bindFn}\n\t\t\t\t\t\tvalue={defaultValue ? defaultValue.toString() : ''}\n\t\t\t\t\t\tplaceholder={placeHolder || ''}\n\t\t\t\t\t\treadOnly={readOnly}\n\t\t\t\t\t\tstyle={!wrn ? {} : {backgroundColor: 'yellow'}}\n\t\t\t\t\t/>\n\t\t\t\t\t{wrn}\n\t\t\t\t</span>\n\t\t\t);\n\t\t}\n\t\treturn (\n\t\t\t<Row className={EditFormBase.formGroup}>\n\t\t\t\t<Col sm={EditFormBase.sm3}><label className={EditFormBase.ctrlLabel}>{title}</label></Col>\n\t\t\t\t<Col sm={EditFormBase.sm9}>\n\t\t\t\t\t<input\n\t\t\t\t\t\tdisabled={isDisabled}\n\t\t\t\t\t\tmaxLength={255}\n\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tonChange={bindFn}\n\t\t\t\t\t\tvalue={defaultValue ? defaultValue.toString() : ''}\n\t\t\t\t\t\tplaceholder={placeHolder || ''}\n\t\t\t\t\t\treadOnly={readOnly}\n\t\t\t\t\t\tstyle={!wrn ? {} : {backgroundColor: 'yellow'}}\n\t\t\t\t\t/>\n\t\t\t\t\t{wrn}\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t);\n\t}\n\n\tpublic static boundTextboxValue(title: string|null, defaultValue: string | number | Date, bindValFn: (value: string) => any, placeHolder?: string, readOnly?: boolean, isDisabled?: boolean, inputType?: string) {\n\t\tconst wrn = EditFormBase.renderWarnings(defaultValue);\n\t\tif (isEmpty(title)) {\n\t\t\treturn (\n\t\t\t\t<span>\n\t\t\t\t\t<input\n\t\t\t\t\t\tdisabled={isDisabled}\n\t\t\t\t\t\tmaxLength={255}\n\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\ttype={inputType || 'text'}\n\t\t\t\t\t\tonChange={(e) => bindValFn(e.currentTarget.value)}\n\t\t\t\t\t\tvalue={defaultValue ? defaultValue.toString() : ''}\n\t\t\t\t\t\tplaceholder={placeHolder || ''}\n\t\t\t\t\t\treadOnly={readOnly}\n\t\t\t\t\t\tstyle={!wrn ? {minWidth: '40px'} : {backgroundColor: 'yellow'}}\n\t\t\t\t\t/>\n\t\t\t\t\t{wrn}\n\t\t\t\t</span>\n\t\t\t);\n\t\t}\n\t\treturn (\n\t\t\t<Row className={EditFormBase.formGroup}>\n\t\t\t\t<Col sm={EditFormBase.sm3}><label className={EditFormBase.ctrlLabel}>{title}</label></Col>\n\t\t\t\t<Col sm={EditFormBase.sm9}>\n\t\t\t\t\t{EditFormBase.boundTextboxValue(null, defaultValue, bindValFn, placeHolder, readOnly, isDisabled, inputType)}\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t);\n\t}\n\n\tpublic static boundChoices(title: string|null, choices: Array<{label?: string, value: string}|string>, defaultValue: string | number | Date, bindValFn: (value: string) => any, placeHolder?: string, isDisabled?: boolean) {\n\t\tconst wrn = EditFormBase.renderWarnings(defaultValue);\n\t\tif (isEmpty(title)) {\n\t\t\tconst cc = choices.map((choice) => (typeof choice === 'string') ? {value: choice} : choice);\n\t\t\treturn (\n\t\t\t\t<span>\n\t\t\t\t\t<select\n\t\t\t\t\t\tdisabled={isDisabled}\n\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\tonChange={(e) => bindValFn(e.currentTarget.value)}\n\t\t\t\t\t\tvalue={defaultValue ? defaultValue.toString() : ''}\n\t\t\t\t\t\tplaceholder={placeHolder || ''}\n\t\t\t\t\t\tstyle={!wrn ? {minWidth: '40px'} : {backgroundColor: 'yellow'}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<option value=\"\">(none)</option>\n\t\t\t\t\t\t{cc.map((choice, i) => <option key={choice.value + i} value={choice.value}>{choice.label || choice.value}</option>)}\n\t\t\t\t\t</select>\n\t\t\t\t\t{wrn}\n\t\t\t\t</span>\n\t\t\t);\n\t\t}\n\t\treturn (\n\t\t\t<Row className={EditFormBase.formGroup}>\n\t\t\t\t<Col sm={EditFormBase.sm3}><label className={EditFormBase.ctrlLabel}>{title}</label></Col>\n\t\t\t\t<Col sm={EditFormBase.sm9}>\n\t\t\t\t\t{EditFormBase.boundChoices(null, choices, defaultValue, bindValFn, placeHolder, isDisabled)}\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t);\n\t}\n\n\n\tpublic static submitRow(actionText?: string) {\n\t\treturn (\n\t\t\t<Row className={EditFormBase.formGroup}>\n\t\t\t\t<Col sm={EditFormBase.sm3}/>\n\t\t\t\t<Col sm={EditFormBase.sm9}>\n\t\t\t\t\t{EditFormBase.submitButton(actionText)}\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t);\n\t}\n\n\tpublic static submitButton(actionText?: string) {\n\t\treturn (\n\t\t\t<button type=\"submit\">{actionText || 'Submit'}</button>\n\t\t);\n\t}\n\n\tpublic static boundDate(title: string, bindFn: React.FormEventHandler<HTMLInputElement>, isStart: boolean, start?: Date, end?: Date, isDisabled?: boolean) {\n\t\treturn (\n\t\t\t<Row className={EditFormBase.formGroup}>\n\t\t\t\t<Col sm={EditFormBase.sm3}><label className={EditFormBase.ctrlLabel}>{title}</label></Col>\n\t\t\t\t<Col sm={EditFormBase.sm9}>\n\t\t\t\t\t<DatePicker\n\t\t\t\t\t\tdisabled={isDisabled}\n\t\t\t\t\t\tclassName={'form-control'}\n\t\t\t\t\t\tselected={isStart ? moment(start) : moment(end)}\n\t\t\t\t\t\tselectsEnd\n\t\t\t\t\t\tstartDate={start && moment(start)}\n\t\t\t\t\t\tendDate={end && moment(end)}\n\t\t\t\t\t\tonChange={bindFn}\n\t\t\t\t\t\tdateFormatCalendar={'MMM YYYY'}\n\t\t\t\t\t\tshowMonthDropdown\n\t\t\t\t\t\tshowYearDropdown\n\t\t\t\t\t/>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t);\n\t}\n\n\tprotected static renderWarnings(val: string|number|Date) {\n\t\tif (typeof val !== 'string') {\n\t\t\treturn this.renderWarnings(val.toString());\n\t\t}\n\t\tif (val) {\n\t\t\tconst vlc = val.toLowerCase();\n\t\t\tif (vlc.indexOf('included') > -1) {\n\t\t\t\treturn <div className=\"alert alert-error\"><b>Warning:</b> Consider removing term <em>included</em></div>;\n\t\t\t}\n\t\t\tif (vlc.indexOf('refund') > -1) {\n\t\t\t\treturn <div className=\"alert alert-error\"><b>Warning:</b> We don't offer refunds.</div>;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic static boundTextarea(title: string, defaultValue: string | number, bindFn: React.FormEventHandler<HTMLTextAreaElement>) {\n\t\tconst wrn = EditFormBase.renderWarnings(defaultValue);\n\t\treturn (\n\t\t\t<Row className={EditFormBase.formGroup}>\n\t\t\t\t<Col sm={EditFormBase.sm3}><label className={EditFormBase.ctrlLabel}>{title}</label></Col>\n\t\t\t\t<Col sm={EditFormBase.sm9}>\n\t\t\t\t<textarea className=\"form-control\" onChange={bindFn} value={defaultValue ? defaultValue.toString() : ''}\n\t\t\t\t\t\t  style={!wrn ? {} : {backgroundColor: 'yellow'}}\n\t\t\t\t\t\t  rows={5}/>\n\t\t\t\t\t{wrn}\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t);\n\t}\n\n\tpublic static boundTextareaValue(title: string, defaultValue: string | number, bindFn: (value) => any) {\n\t\tconst wrn = EditFormBase.renderWarnings(defaultValue);\n\t\treturn (\n\t\t\t<Row className={EditFormBase.formGroup}>\n\t\t\t\t<Col sm={EditFormBase.sm3}><label className={EditFormBase.ctrlLabel}>{title}</label></Col>\n\t\t\t\t<Col sm={EditFormBase.sm9}>\n\t\t\t\t<textarea className=\"form-control\"\n\t\t\t\t\t\t  onChange={(e) => bindFn(e.currentTarget.value)}\n\t\t\t\t\t\t  value={defaultValue ? defaultValue.toString() : ''}\n\t\t\t\t\t\t  style={!wrn ? {} : {backgroundColor: 'yellow'}}\n\t\t\t\t\t\t  rows={5}/>\n\t\t\t\t\t{wrn}\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t);\n\t}\n\n\tpublic static boundCheckbox(title: string, defaultChecked: boolean, bindFn: React.FormEventHandler<HTMLInputElement>, readOnly?: boolean) {\n\t\treturn <Row className={EditFormBase.formGroup}>\n\t\t\t<Col sm={EditFormBase.sm3}>\n\t\t\t\t<div className={EditFormBase.ctrlLabel}/>\n\t\t\t</Col>\n\t\t\t<Col sm={EditFormBase.sm9}>\n\t\t\t\t<div className=\"form-check\">\n\t\t\t\t\t<label className=\"form-check-label\">\n\t\t\t\t\t\t<input className=\"form-check-input\" type=\"checkbox\" onChange={bindFn}\n\t\t\t\t\t\t\t   checked={defaultChecked}\n\t\t\t\t\t\t\t   disabled={readOnly}/>{' '}{title}\n\t\t\t\t\t</label>\n\t\t\t\t</div>\n\t\t\t</Col>\n\t\t</Row>;\n\t}\n\n\tpublic static boundCheckboxValue(title: string, defaultChecked: boolean, bindFn: (isChecked: boolean) => any, readOnly?: boolean) {\n\t\treturn <Row className={EditFormBase.formGroup}>\n\t\t\t<Col sm={EditFormBase.sm3}>\n\t\t\t\t<div className={EditFormBase.ctrlLabel}/>\n\t\t\t</Col>\n\t\t\t<Col sm={EditFormBase.sm9}>\n\t\t\t\t<div className=\"form-check\">\n\t\t\t\t\t<label className=\"form-check-label\">\n\t\t\t\t\t\t<input className=\"form-check-input\" type=\"checkbox\" onChange={(e) => bindFn(e.currentTarget.checked)}\n\t\t\t\t\t\t\t   checked={defaultChecked}\n\t\t\t\t\t\t\t   disabled={readOnly}/>{' '}{title}\n\t\t\t\t\t</label>\n\t\t\t\t</div>\n\t\t\t</Col>\n\t\t</Row>;\n\t}\n\n\tpublic static boundBooleanSwitch(title: string, defaultChecked: boolean, bindFn: (isChecked: boolean) => any, readOnly?: boolean) {\n\t\treturn <Row className={EditFormBase.formGroup}>\n\t\t\t<Col sm={EditFormBase.sm3}>\n\t\t\t\t<div className={EditFormBase.ctrlLabel}/>\n\t\t\t</Col>\n\t\t\t<Col sm={EditFormBase.sm9}>\n\t\t\t\t<div className=\"form-check\">\n\t\t\t\t\t<label className=\"form-check-label\">\n\t\t\t\t\t\t<input className=\"form-check-input\" type=\"checkbox\" onChange={(e) => bindFn(e.currentTarget.checked)}\n\t\t\t\t\t\t\t   checked={defaultChecked}\n\t\t\t\t\t\t\t   disabled={readOnly}/>{' '}{title}\n\t\t\t\t\t</label>\n\t\t\t\t</div>\n\t\t\t</Col>\n\t\t</Row>;\n\t}\n}\n","import { navigate } from \"gatsby\"\r\n\r\nexport function getAuthToken(): string {\r\n\tconst token = sessionStorage.getItem('sessionId') || '';\r\n\tif (token.length == 0) {\r\n\t\tloginRedirect();\r\n\t}\r\n\treturn token;\r\n}\r\n\r\nexport function loginRedirect() {\r\n\tsessionStorage.removeItem('sessionId');\r\n\tnavigate('/admin');\r\n}"],"sourceRoot":""}