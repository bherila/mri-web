{"version":3,"sources":["webpack:///./src/components/FileUpload.tsx","webpack:///./src/pages/addl-info.tsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/models/SafetyState.ts","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/breadcrumb.tsx","webpack:///./src/api/api.ts","webpack:///./src/helpers/FormBasePage.tsx","webpack:///./src/components/Header.tsx","webpack:///./src/components/Footer.tsx","webpack:///./src/components/FooterNav.tsx","webpack:///./src/layouts/index.tsx","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/LayoutRoot.tsx","webpack:///./src/components/LayoutMain.tsx","webpack:///./src/helpers/phone.ts"],"names":["__webpack_require__","showImageOrPlaceholder","img","length","react","createElement","alt","src","className","style","maxHeight","maxWidth","Component","d","n","f","p","v","addl_info_$","addl_info_ContactInformation","ContactInformation","props","context","_FormBasePage","call","this","componentDidMount","_this","state","SafetyState","a","loadState","haveOrder","setState","saveState","render","_this2","layouts","id","breadcrumb","num","b","value","scan","slot","timeSlot","name","data-name","action","onSubmit","e","handleSubmit","dateOfBirth","weight","firstName","lastName","addressBlock","doctorName","doctorContact","uploadMri","insFront","insBack","type","onDrop","files","_this3","console","log","fd","FormData","append","ajax","url","api","enctype","processData","cacheData","contentType","data","then","o","JSON","parse","error","_this4","preventDefault","slotId","appointmentHandlerPOST","req","partitionKey","split","rowKey","lname","fname","address1","confirmed","email","phone","height","insuranceBackUrl","insuranceFrontUrl","insuranceCarrier","insuranceGroupNumber","insurancePolicyNumber","insuranceVerified","orderImageUrl","mriOrder","resourceId","serviceType","stringify","birthday","dob","serviceLength","search","authToken","withContrast","locationId","res","success","sessionStorage","setItem","Object","gatsby_browser_entry","navigate","err","message","alert","_this6","htmlFor","es","accept","_this7","_this8","_this9","maxLength","onChange","currentTarget","_this10","_this11","Fragment","field","address2","city","zip","display","_this12","_this13","required","_this14","_this15","FormBasePage","__webpack_exports__","default","g","160","t","r","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","withPrefix","push","replace","navigateTo","_wait_for_route_change__WEBPACK_IMPORTED_MODULE_3__","c","_public_page_renderer__WEBPACK_IMPORTED_MODULE_4__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_4___default","_parse_path__WEBPACK_IMPORTED_MODULE_5__","createContext","Consumer","staticQueryData","query","children","Error","propTypes","object","string","isRequired","func","answers","implants","currentImplant","overrideSafetyWarning","carrierNumber","groupNumber","policyNumber","optedIn","getItem","jsonState","assign","164","m","module","exports","Chevron","react__WEBPACK_IMPORTED_MODULE_2__","width","translucent","Ez123","OrderBreadcrumb","gatsby__WEBPACK_IMPORTED_MODULE_3__","Link","to","MriTypeBreadcrumb","_ref","contrast","TimeslotBreadcrumb","reserved","168","h","E","F","z","i","s","BASE_PATH","BaseAPI","fetch","basePath","isomorphic_fetch__WEBPACK_IMPORTED_MODULE_4__","AuthApiFp","params","options","fetchArgs","urlObj","url__WEBPACK_IMPORTED_MODULE_3__","core_js_library_fn_object_assign__WEBPACK_IMPORTED_MODULE_5__","contentTypeHeader","fetchOptions","method","Content-Type","body","headers","format","AuthApiFetchParamCreator","response","status","json","AuthApi","_BaseAPI","apply","arguments","_babel_runtime_helpers_inheritsLoose__WEBPACK_IMPORTED_MODULE_1___default","prototype","auth","LeadGenApiFp","LeadGenApiFetchParamCreator","LeadGenApi","_BaseAPI2","_proto2","runGET","runPOST","QuestionApiFp","QuestionApiFetchParamCreator","QuestionApi","_BaseAPI4","getQuestions","ResourceApiFp","ResourceApiFetchParamCreator","ResourceApi","_BaseAPI5","_proto5","availabilityRulesDELETE","availabilityRulesGET","availabilityRulesPOST","availabilityRulesPUT","locationsGET","locationsPOST","ScheduleApiFp","ScheduleApiFetchParamCreator","ScheduleApi","_BaseAPI6","_proto6","appointmentHandlerDELETE","appointmentHandlerGET","appointmentHandlerPUT","timeSlotsGET","_React$Component","_models_SafetyState__WEBPACK_IMPORTED_MODULE_3__","_proto","getAns","q","ans","val","170","l","components_Header","objectDestructuringEmpty_default","href","data-collapse","data-animation","data-duration","role","components_Footer","Helmet_default","integrity","crossOrigin","FooterNav","LayoutRoot","title","site","siteMetadata","meta","content","description","LayoutMain","_991718019","_page_renderer__WEBPACK_IMPORTED_MODULE_2__","_loader__WEBPACK_IMPORTED_MODULE_3__","ProdPageRenderer","location","pageResources","getResourcesForPathname","pathname","shape","173","175","177","179","181","react_emotion__WEBPACK_IMPORTED_MODULE_1__","StyledLayoutRoot","target","formatPhone","ph","exec","formatDate","date","dt"],"mappings":"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","file":"component---src-pages-addl-info-tsx-d787e2d1ea848554458d.js","sourcesContent":["import Dropzone from \"react-dropzone\";\nimport * as React from \"react\";\nimport {BASE_PATH} from \"ucshared\";\nconst $ = require('jquery');\n\nexport function showImageOrPlaceholder(img: string | null) {\n\tif (typeof img !== 'string' || img === null || img.length < 1) {\n\t\treturn <div>Click here to select picture/PDF</div>;\n\t}\n\treturn (\n\t\t<img alt=\"Uploaded image\" src={`https://mrisched9e42.blob.core.windows.net/uploads/${img}`} className=\"img-fluid\" style={{maxHeight: '100px', maxWidth: '100%'}}/>\n\t);\n}\n\nexport class FileUpload extends React.Component<{bucket: string, url: string, onNewUrl: (url: string)=>any}, {isLoading: boolean}> {\n\tconstructor(props, context) {\n\t\tsuper(props, context);\n\t\tthis.state = {isLoading: false};\n\t}\n\tpublic render() {\n\t\treturn (\n\t\t\t<Dropzone\n\t\t\t\taccept=\"image/*\"\n\t\t\t\tclassName=\"button green small w-button\"\n\t\t\t\tonDrop={(files) => this.onDrop(this.props.bucket, files)}\n\t\t\t>{showImageOrPlaceholder(this.props.url)}\n\t\t\t</Dropzone>\n\t\t);\n\t}\n\n\tprivate onDrop(bucket: string, files: File[]) {\n\t\tconst fd = new FormData();\n\t\tfd.append('file', files[0]);\n\n\t\t$.ajax({\n\t\t\turl: BASE_PATH + '/api/upload/?to=' + bucket,\n\t\t\ttype: 'POST',\n\t\t\tenctype: 'multipart/form-data',\n\t\t\tprocessData: false,  // Important!\n\t\t\tcacheData: false,\n\t\t\tcontentType: false,\n\t\t\tdata: fd,\n\t\t}).then(\n\t\t\t(data: any, textStatus: string, jqXhr: any) => {\n\t\t\t\tconsole.log(textStatus, data);\n\t\t\t\tthis.setState({\n\t\t\t\t\tisLoading: false,\n\t\t\t\t\tuploadedUri: data,\n\t\t\t\t} as any, () => {\n\t\t\t\t\tif (this.props.onNewUrl) {\n\t\t\t\t\t\tthis.props.onNewUrl(data);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\t(error) => {\n\t\t\t\tconsole.log(error);\n\t\t\t},\n\t\t);\n\t}\n}\n","import * as React from 'react'\nimport { navigate } from 'gatsby'\nimport IndexLayout from '../layouts'\nimport {Ez123, MriTypeBreadcrumb, TimeslotBreadcrumb} from \"../components/breadcrumb\";\nimport Dropzone from \"react-dropzone\";\nimport {showImageOrPlaceholder} from \"../components/FileUpload\";\nimport {BASE_PATH, ScheduleApi} from \"../api/api\";\nimport {getAuthToken} from \"../helpers/authToken\";\nimport {SafetyState} from \"../models/SafetyState\";\nimport {FormBasePage} from \"../helpers/FormBasePage\";\nimport {formatDate} from \"../helpers/phone\";\nconst $ = require('jquery');\n\nclass ContactInformation extends FormBasePage {\n\tconstructor(props, context) {\n\t\tsuper(props, context);\n\t}\n\n\tpublic componentDidMount() {\n\t\tconst state = SafetyState.loadState();\n\t\tstate.haveOrder = false;\n\t\tthis.setState(state, () => this.saveState());\n\t}\n\n\tpublic render() {\n\t\treturn (\n\t\t\t<IndexLayout>\n\t\t\t\t<section id=\"Q1\" className=\"vspace80 w-container\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Ez123 num={3}/>\n\t\t\t\t\t\t<div className=\"breadcrumb-stack\">\n\t\t\t\t\t\t\t<MriTypeBreadcrumb value={this.state.scan}/>\n\t\t\t\t\t\t\t<TimeslotBreadcrumb slot={this.state.timeSlot}/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"vspace80 centered w-row\">\n\t\t\t\t\t\t<div className=\"w-hidden-small w-hidden-tiny w-col w-col-3\">\n\t\t\t\t\t\t\t{/*<img src=\"https://uploads-ssl.webflow.com/5b9e87c40899a487ba8091e4/5ba72c92e33cb6832a1bd949_idealMRI_lady_3.png\" alt=\"\"/>*/}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"w-col w-col-6\">\n\t\t\t\t\t\t\t<div className=\"w-form\">\n\t\t\t\t\t\t\t\t<form\n\t\t\t\t\t\t\t\t\tid=\"email-form\"\n\t\t\t\t\t\t\t\t\tname=\"email-form\"\n\t\t\t\t\t\t\t\t\tdata-name=\"Email Form\"\n\t\t\t\t\t\t\t\t\taction=\"#\"\n\t\t\t\t\t\t\t\t\tonSubmit={(e) => this.handleSubmit(e)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<h3>Just A Little More Information To Complete Your Reservation</h3>\n\t\t\t\t\t\t\t\t\t{/*<p>*/}\n\t\t\t\t\t\t\t\t\t\t{/*<strong>Thanks! You're all set. </strong>We will give you*/}\n\t\t\t\t\t\t\t\t\t\t{/*a call to confirm any details. &nbsp;We'll also send you a*/}\n\t\t\t\t\t\t\t\t\t\t{/*reminder before your scan. &nbsp;You can fill out this*/}\n\t\t\t\t\t\t\t\t\t\t{/*additional information now, to save time. It takes about 2*/}\n\t\t\t\t\t\t\t\t\t\t{/*or 3 more minutes.*/}\n\t\t\t\t\t\t\t\t\t{/*</p>*/}\n\t\t\t\t\t\t\t\t\t{this.dateOfBirth()}\n\t\t\t\t\t\t\t\t\t{/*{this.height()}*/}\n\t\t\t\t\t\t\t\t\t{this.weight()}\n\t\t\t\t\t\t\t\t\t{this.firstName()}\n\t\t\t\t\t\t\t\t\t{this.lastName()}\n\t\t\t\t\t\t\t\t\t{this.addressBlock()}\n\t\t\t\t\t\t\t\t\t{this.doctorName()}\n\t\t\t\t\t\t\t\t\t{this.doctorContact()}\n\t\t\t\t\t\t\t\t\t{this.uploadMri()}\n\t\t\t\t\t\t\t\t\t{this.insFront()}\n\t\t\t\t\t\t\t\t\t{this.insBack()}\n\t\t\t\t\t\t\t\t\t<div className=\"cta-subitem distributed\">\n\t\t\t\t\t\t\t\t\t\t<button className=\"cta-link wider w-inline-block\" type=\"submit\">\n\t\t\t\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\t\t\t\tsrc=\"https://uploads-ssl.webflow.com/5b9e87c40899a487ba8091e4/5b9ead2f3661e73d2f76eedd_Meet%20Our%20Team.svg\"\n\t\t\t\t\t\t\t\t\t\t\t\talt=\"Submit\"\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"image\"\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t<div>Submit</div>\n\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"w-hidden-small w-hidden-tiny w-col w-col-3\">\n\t\t\t\t\t\t\t{/*<img src=\"https://uploads-ssl.webflow.com/5b9e87c40899a487ba8091e4/5ba72c92e33cb6832a1bd949_idealMRI_lady_3.png\" alt=\"\"/>*/}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\t\t\t</IndexLayout>\n\t\t);\n\t}\n\n\tprivate onDrop(insBack: string, files: File[]) {\n\t\tconsole.log(insBack, files);\n\t\tif (files.length) {\n\t\t\tif (files[0]) {\n\t\t\t\tconst fd = new FormData();\n\t\t\t\tfd.append('file', files[0]);\n\t\t\t\t$.ajax({\n\t\t\t\t\turl: `${BASE_PATH}/api/file`,\n\t\t\t\t\ttype: 'POST',\n\t\t\t\t\tenctype: 'multipart/form-data',\n\t\t\t\t\tprocessData: false,  // Important!\n\t\t\t\t\tcacheData: false,\n\t\t\t\t\tcontentType: false,\n\t\t\t\t\tdata: fd,\n\t\t\t\t}).then(\n\t\t\t\t\t(data) => {\n\t\t\t\t\t\tconst o = {};\n\t\t\t\t\t\to[insBack] = JSON.parse(data)[0];\n\t\t\t\t\t\tthis.setState(o, () => this.saveState());\n\t\t\t\t\t\tconsole.log('success', o);\n\t\t\t\t\t},\n\t\t\t\t\t(error) => {\n\t\t\t\t\t\tconsole.log(error);\n\t\t\t\t\t},\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate handleSubmit(e: React.FormEvent<HTMLFormElement>) {\n\t\te.preventDefault();\n\t\tif (!this.state.timeSlot) {\n\t\t\talert('missing timeSlot');\n\t\t\treturn;\n\t\t}\n\t\tconst slotId = this.state.timeSlot.slotId || '';\n\t\tnew ScheduleApi().appointmentHandlerPOST({\n\t\t\treq: {\n\t\t\t\tpartitionKey: slotId.split(' ')[1], // extract location from slotId\n\t\t\t\trowKey: slotId,\n\t\t\t\tlastName: this.state.lname,\n\t\t\t\tfirstName: this.state.fname,\n\t\t\t\taddress1: '',\n\t\t\t\tconfirmed: false,\n\t\t\t\tdoctorName: this.state.doctorName,\n\t\t\t\temail: this.state.email,\n\t\t\t\tphone: this.state.phone,\n\t\t\t\theight: this.state.height || '',\n\t\t\t\tinsuranceBackUrl: this.state.insBack,\n\t\t\t\tinsuranceFrontUrl: this.state.insFront,\n\t\t\t\tinsuranceCarrier: '',\n\t\t\t\tinsuranceGroupNumber: '',\n\t\t\t\tinsurancePolicyNumber: '',\n\t\t\t\tinsuranceVerified: false,\n\t\t\t\torderImageUrl: this.state.mriOrder,\n\t\t\t\tresourceId: this.state.timeSlot.resourceId,\n\t\t\t\tserviceType: JSON.stringify(this.state.scan),\n\t\t\t\tweight: this.state.weight,\n\t\t\t\tbirthday: this.state.dob,\n\t\t\t\tserviceLength: 45, // TODO: Update service length?\n\t\t\t},\n\t\t\tsearch: '',\n\t\t\tauthToken: '',\n\t\t\twithContrast: false,\n\t\t\tlocationId: ''\n\t\t}).then((res) => {\n\t\t\tif (res.success && !!res.value && !!res.value.length) {\n\t\t\t\tsessionStorage.setItem('appointmentEntity', JSON.stringify(res.value[0] || null));\n\t\t\t\tnavigate('/safety-questions');\n\t\t\t} else {\n\t\t\t\tthis.setState({err: res.message || ''});\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate height() {\n\t\treturn false; // hidden\n\t\treturn (\n\t\t\t<div className=\"inputrow\">\n\t\t\t\t<label htmlFor=\"Height\" className=\"flexlabel\">\n\t\t\t\t\tHeight\n\t\t\t\t</label>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tclassName=\"flexinput w-input\"\n\t\t\t\t\tmaxLength={256}\n\t\t\t\t\tname=\"Height\"\n\t\t\t\t\tdata-name=\"Height\"\n\t\t\t\t\tid=\"Height\"\n\t\t\t\t\tvalue={this.state.height}\n\t\t\t\t\tonChange={(e) => this.setState({height: e.currentTarget.value}, () => this.saveState())}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tprivate uploadMri() {\n\t\treturn (\n\t\t\t<div className=\"inputrow\">\n\t\t\t\t<label htmlFor=\"name-6\" className=\"flexlabel\">\n\t\t\t\t\tUpload MRI&nbsp;order\n\t\t\t\t</label>\n\t\t\t\t<div className=\"flexinput\">\n\t\t\t\t\t<Dropzone\n\t\t\t\t\t\taccept=\"image/*\"\n\t\t\t\t\t\tclassName=\"button green small w-button\"\n\t\t\t\t\t\tonDrop={(files) => this.onDrop('mriOrder', files)}\n\t\t\t\t\t>{showImageOrPlaceholder(this.state.mriOrder)}\n\t\t\t\t\t</Dropzone>\n\t\t\t\t\t&nbsp;(optional)\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tprivate insFront() {\n\t\treturn (\n\t\t\t<div className=\"inputrow\">\n\t\t\t\t<label htmlFor=\"name-6\" className=\"flexlabel\">\n\t\t\t\t\t<strong>Insurance Card Front</strong>\n\t\t\t\t</label>\n\t\t\t\t<div className=\"flexinput\">\n\t\t\t\t\t<Dropzone\n\t\t\t\t\t\taccept=\"image/*\"\n\t\t\t\t\t\tclassName=\"button green small w-button\"\n\t\t\t\t\t\tonDrop={(files) => this.onDrop('insFront', files)}\n\t\t\t\t\t>{showImageOrPlaceholder(this.state.insFront)}\n\t\t\t\t\t</Dropzone>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tprivate insBack() {\n\t\treturn (\n\t\t\t<div className=\"inputrow\">\n\t\t\t\t<label htmlFor=\"name-6\" className=\"flexlabel\">\n\t\t\t\t\t<strong>Insurance Card Back</strong>\n\t\t\t\t</label>\n\t\t\t\t<div className=\"flexinput\">\n\t\t\t\t\t<Dropzone\n\t\t\t\t\t\taccept=\"image/*\"\n\t\t\t\t\t\tclassName=\"button green small w-button\"\n\t\t\t\t\t\tonDrop={(files) => this.onDrop('insBack', files)}\n\t\t\t\t\t>{showImageOrPlaceholder(this.state.insBack)}\n\t\t\t\t\t</Dropzone>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tprivate weight() {\n\t\treturn (\n\t\t\t<div className=\"inputrow\">\n\t\t\t\t<label htmlFor=\"Weight\" className=\"flexlabel\">\n\t\t\t\t\tWeight\n\t\t\t\t</label>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tclassName=\"flexinput w-input\"\n\t\t\t\t\tmaxLength={256}\n\t\t\t\t\tname=\"Weight\"\n\t\t\t\t\tdata-name=\"Weight\"\n\t\t\t\t\tid=\"Weight\"\n\t\t\t\t\tvalue={this.state.weight}\n\t\t\t\t\tonChange={(e) => this.setState({weight: e.currentTarget.value}, () => this.saveState())}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tprivate doctorName() {\n\t\treturn (\n\t\t\t<div className=\"inputrow\">\n\t\t\t\t<label htmlFor=\"DoctorName\" className=\"flexlabel\">\n\t\t\t\t\tWho is your doctor?\n\t\t\t\t</label>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tclassName=\"flexinput w-input\"\n\t\t\t\t\tmaxLength={256}\n\t\t\t\t\tname=\"DoctorName\"\n\t\t\t\t\tdata-name=\"DoctorName\"\n\t\t\t\t\tid=\"DoctorName\"\n\t\t\t\t\tvalue={this.state.doctorName}\n\t\t\t\t\tonChange={(e) => this.setState({doctorName: e.currentTarget.value}, () => this.saveState())}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tprivate addressBlock() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<div className=\"inputrow\">\n\t\t\t\t\t{this.field('address1', 'Address', this.state.address1, (address1) => this.setState({address1}))}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"inputrow\">\n\t\t\t\t\t{this.field('address2', 'Address 2', this.state.address2, (address2) => this.setState({address2}))}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"inputrow\">\n\t\t\t\t\t{this.field('city', 'City', this.state.city, (city) => this.setState({city}))}\n\t\t\t\t\t&nbsp;&nbsp;{this.field('state', 'State', this.state.state, (state) => this.setState({state}))}\n\t\t\t\t\t&nbsp;&nbsp;{this.field('zip', 'Zip', this.state.zip, (zip) => this.setState({zip}))}\n\t\t\t\t</div>\n\t\t\t</React.Fragment>\n\t\t)\n\t}\n\n\tprivate field(name: string, display: string, value: string, onChange: any) {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<label htmlFor={name} className=\"flexlabel\">\n\t\t\t\t\t{display}\n\t\t\t\t</label>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tclassName=\"flexinput w-input\"\n\t\t\t\t\tmaxLength={256}\n\t\t\t\t\tname={name}\n\t\t\t\t\tdata-name={name}\n\t\t\t\t\tid={name}\n\t\t\t\t\tvalue={value}\n\t\t\t\t\tonChange={(e) => onChange(e.currentTarget.value)}\n\t\t\t\t/>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n\n\tprivate doctorContact() {\n\t\treturn (\n\t\t\t<div className=\"inputrow\">\n\t\t\t\t<label htmlFor=\"DoctorName\" className=\"flexlabel\">\n\t\t\t\t\tDoctor contact information\n\t\t\t\t</label>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tclassName=\"flexinput w-input\"\n\t\t\t\t\tmaxLength={256}\n\t\t\t\t\tname=\"doctorContact\"\n\t\t\t\t\tdata-name=\"doctorContact\"\n\t\t\t\t\tid=\"doctorContact\"\n\t\t\t\t\tvalue={this.state.doctorContact}\n\t\t\t\t\tonChange={(e) => this.setState({doctorContact: e.currentTarget.value}, () => this.saveState())}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tprivate dateOfBirth() {\n\t\treturn (\n\t\t\t<div className=\"inputrow\">\n\t\t\t\t<label htmlFor=\"email\" className=\"flexlabel\">Date of Birth</label>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tclassName=\"flexinput w-input\"\n\t\t\t\t\tmaxLength={256}\n\t\t\t\t\tname=\"dob\"\n\t\t\t\t\tdata-name=\"Date of Birth\"\n\t\t\t\t\tid=\"dob\"\n\t\t\t\t\trequired\n\t\t\t\t\tvalue={this.state.dob}\n\t\t\t\t\tonChange={(e) => this.setState({dob: formatDate(e.currentTarget.value)}, () => this.saveState())}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tprivate firstName() {\n\t\treturn (\n\t\t\t<div className=\"inputrow\">\n\t\t\t\t<label htmlFor=\"fname\" className=\"flexlabel\">First name</label>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tclassName=\"flexinput w-input\"\n\t\t\t\t\tmaxLength={256}\n\t\t\t\t\tname=\"fname\"\n\t\t\t\t\tdata-name=\"First Name\"\n\t\t\t\t\tid=\"fname\"\n\t\t\t\t\tvalue={this.state.fname}\n\t\t\t\t\tonChange={(e) => this.setState({fname: e.currentTarget.value}, () => this.saveState())}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tprivate lastName() {\n\t\treturn (\n\t\t\t<div className=\"inputrow\">\n\t\t\t\t<label htmlFor=\"lname\" className=\"flexlabel\">Last name</label>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tclassName=\"flexinput w-input\"\n\t\t\t\t\tmaxLength={256}\n\t\t\t\t\tname=\"lname\"\n\t\t\t\t\tdata-name=\"Last Name\"\n\t\t\t\t\tid=\"lname\"\n\t\t\t\t\tvalue={this.state.lname}\n\t\t\t\t\tonChange={(e) => this.setState({lname: e.currentTarget.value}, () => this.saveState())}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default ContactInformation;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport { waitForRouteChange } from \"./wait-for-route-change\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  waitForRouteChange,\n}\n","import {SlotAvailabilityTime} from \"../api/api\";\nimport {IScan} from \"./Scan\";\n\nexport class SafetyState {\n\tconstructor() {\n\t\tthis.fname =  '';\n\t\tthis.lname =  '';\n\t\tthis.answers =  {};\n\t\tthis.implants =  [];\n\t\tthis.currentImplant =  '';\n\t\tthis.scan =  null;\n\t\tthis.haveOrder =  false;\n\t\tthis.overrideSafetyWarning =  false;\n\t\tthis.email = '';\n\t\tthis.phone = '';\n\t\tthis.height = '';\n\t\tthis.weight = '';\n\t\tthis.doctorName = '';\n\t\tthis.doctorContact = '';\n\t\tthis.insFront = '';\n\t\tthis.insBack = '';\n\t\tthis.mriOrder = '';\n\t\tif (typeof sessionStorage !== 'undefined') {\n\t\t\tthis.timeSlot = JSON.parse(sessionStorage.getItem('timeSlot') || '{}');\n\t\t} else {\n\t\t\tthis.timeSlot = null;\n\t\t}\n\t\tthis.err = '';\n\t\tthis.dob = '';\n\t\tthis.carrierNumber = '';\n\t\tthis.groupNumber = '';\n\t\tthis.policyNumber = '';\n\t\tthis.address1 = '';\n\t\tthis.address2 = '';\n\t\tthis.city = '';\n\t\tthis.state = '';\n\t\tthis.zip = '';\n\t\tthis.optedIn = true;\n\t}\n\tpublic fname: string;\n\tpublic lname: string;\n\tpublic email: string;\n\tpublic phone: string;\n\tpublic answers: any;\n\tpublic implants: string[];\n\tpublic currentImplant: string;\n\tpublic haveOrder: boolean;\n\tpublic scan: IScan | null;\n\tpublic overrideSafetyWarning: boolean;\n\tpublic height: string;\n\tpublic weight: string;\n\tpublic doctorName: string;\n\tpublic doctorContact: string;\n\tpublic insFront: string;\n\tpublic insBack: string;\n\tpublic mriOrder: string;\n\tpublic carrierNumber: string;\n\tpublic groupNumber: string;\n\tpublic policyNumber: string;\n\tpublic timeSlot: SlotAvailabilityTime | null;\n\tpublic err: string;\n\tpublic dob: string;\n\tpublic address1: string;\n\tpublic address2: string;\n\tpublic city: string;\n\tpublic state: string;\n\tpublic zip: string;\n\tpublic optedIn: boolean;\n\n\tpublic static loadState(): SafetyState {\n\t\tif (typeof sessionStorage !== 'undefined') {\n\t\t\tconst jsonState = JSON.parse(sessionStorage.getItem('wizard') || '{}');\n\t\t\tconst o = {\n\t\t\t\t// fname: sessionStorage.getItem('fname') || '',\n\t\t\t\t// lname: sessionStorage.getItem('lname') || '',\n\t\t\t\t// email: sessionStorage.getItem('email') || '',\n\t\t\t\t// phone: sessionStorage.getItem('phone') || '',\n\t\t\t\t// height: sessionStorage.getItem('height') || '',\n\t\t\t\t// weight: sessionStorage.getItem('weight') || '',\n\t\t\t\t// doctorName: sessionStorage.getItem('doctorName') || '',\n\t\t\t\t// insFront: sessionStorage.getItem('insFront') || '',\n\t\t\t\t// insBack: sessionStorage.getItem('insBack') || '',\n\t\t\t\t// mriOrder: sessionStorage.getItem('mriOrder') || '',\n\t\t\t\tscan: JSON.parse(sessionStorage.getItem('scan') || '{}'),\n\t\t\t\thaveOrder: sessionStorage.getItem('haveOrder') === 'true',\n\t\t\t};\n\t\t\treturn Object.assign(new SafetyState(), jsonState, o);\n\t\t}\n\t\treturn new SafetyState();\n\t}\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import * as React from 'react';\nimport {Link} from 'gatsby';\nimport {SlotAvailabilityTime} from \"../api/api\";\n\nconst Chevron = (props: {translucent?: boolean}) => (\n\t<img\n\t\tsrc=\"https://uploads-ssl.webflow.com/5b9e87c40899a487ba8091e4/5be12c8e888fb5963088dc64_chevron-right-blue-2.svg\"\n\t\twidth=\"38\" height=\"38\" alt=\"Chevron right\" className={props.translucent ? 'translucent' : ''}/>\n);\n\nexport const Ez123 = (props: {num: number}) => (\n\t<div>\n\t\t<div className=\"breadcrumb-row\">\n\t\t\t<div className={'circled ' + (props.num < 1 ? 'translucent' : '') }>1</div>\n\t\t\t<Chevron translucent={props.num < 2} />\n\t\t\t<div className={'circled ' + (props.num < 2 ? 'translucent' : '') }>2</div>\n\t\t\t<Chevron translucent={props.num < 3} />\n\t\t\t<div className={'circled ' + (props.num < 3 ? 'translucent' : '') }>3</div>\n\t\t</div>\n\t\t<div className=\"breadcrumb-row\">\n\t\t\t{props.num === 1 && <h3><strong>Step 1.</strong> Your details</h3>}\n\t\t\t{props.num === 2 && <h3><strong>Step 2.</strong> Choose your scan</h3>}\n\t\t\t{props.num === 3 && <h3><strong>Step 3.</strong> Health &amp; Safety Information</h3>}\n\t\t</div>\n\t</div>\n);\n\nexport const OrderBreadcrumb = (props: {value: boolean}) => (\n    <Link to=\"/have-order\"\n       className=\"breadcrumb w-button\" style={{display: 'none'}}>\n\t\t{props.value ? 'Have Doctor\\'s Order' : 'No Order'} ✓\n\t</Link>\n);\n\nexport const MriTypeBreadcrumb = ({value}) => {\n\tif (!value) {\n\t\treturn (\n\t\t\t<Link to=\"/mri-type\" className=\"breadcrumb w-button\">\n\t\t\t\tClick here to select MRI type\n\t\t\t</Link>\n\t\t);\n\t}\n\tif (typeof value === 'string') {\n\t\treturn (\n\t\t\t<Link to=\"/mri-type\" className=\"breadcrumb w-button\">\n\t\t\t\tScan type: {value} &times;\n\t\t\t</Link>\n\t\t);\n\t}\n\treturn (\n\t\t<Link to=\"/mri-type\" className=\"breadcrumb w-button\">\n\t\t\tScan type: {value.name || 'e!name'} {value.contrast || 'e!contrast'} &times;\n\t\t</Link>\n\t)\n};\n\nexport const TimeslotBreadcrumb = (props: {slot: SlotAvailabilityTime | null, reserved?: boolean}) => (\n\t!!props.slot ? (\n\t\t<Link to=\"/pick-time\" className=\"breadcrumb w-button\">\n\t\t\t{(props.slot.slotId || 'no time selected').replace(/(\\d{4})-(\\d{2})-(\\d{2})T([^\\s]{5}).*/g, \"$2/$3/$1 at $4\")} &times;<br /><small>({props.reserved ? 'reserved' : 'not yet reserved'})</small>\n\t\t</Link>\n\t) : <div />\n);\n","/**\n * ideal MRI\n * Signup Center API\n *\n * OpenAPI spec version: v1\n * Contact: ben@herila.net\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\nimport * as querystring from \"querystring\";\nimport * as url from \"url\";\n\nimport * as isomorphicFetch from \"isomorphic-fetch\";\nimport * as assign from \"core-js/library/fn/object/assign\";\n\ninterface Dictionary<T> { [index: string]: T; }\nexport interface FetchAPI { (url: string, init?: any): Promise<any>; }\n\nexport const BASE_PATH = \"https://mrisched.azurewebsites.net\".replace(/\\/+$/, \"\");\n\nexport interface FetchArgs {\n    url: string;\n    options: any;\n}\n\nexport class BaseAPI {\n    basePath: string;\n    fetch: FetchAPI;\n\n    constructor(fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) {\n        this.basePath = basePath;\n        this.fetch = fetch;\n    }\n};\n\nexport interface ApiResultListAppointment {\n    \"value\"?: Array<Appointment>;\n    \"success\"?: boolean;\n    \"message\"?: string;\n    \"stackTrace\"?: Array<Stack>;\n}\n\nexport interface ApiResultListAvailabilityRule {\n    \"value\"?: Array<AvailabilityRule>;\n    \"success\"?: boolean;\n    \"message\"?: string;\n    \"stackTrace\"?: Array<Stack>;\n}\n\nexport interface ApiResultListSlotAvailabilityDate {\n    \"value\"?: Array<SlotAvailabilityDate>;\n    \"success\"?: boolean;\n    \"message\"?: string;\n    \"stackTrace\"?: Array<Stack>;\n}\n\nexport interface Appointment {\n    \"resourceId\"?: string;\n    \"serviceType\"?: string;\n    \"serviceLength\"?: number;\n    \"firstName\"?: string;\n    \"lastName\"?: string;\n    \"phone\"?: string;\n    \"email\"?: string;\n    \"address1\"?: string;\n    \"city\"?: string;\n    \"state\"?: string;\n    \"zip\"?: string;\n    \"height\"?: string;\n    \"weight\"?: string;\n    \"reminder\"?: number;\n    \"doctorName\"?: string;\n    \"doctorPhone\"?: string;\n    \"insuranceCarrier\"?: string;\n    \"insuranceGroupNumber\"?: string;\n    \"insurancePolicyNumber\"?: string;\n    \"insuranceVerified\"?: boolean;\n    \"priorAuthObtained\"?: boolean;\n    \"orderEnteredToRIS\"?: boolean;\n    \"patientWasCalled\"?: boolean;\n    \"confirmed\"?: boolean;\n    \"orderImageUrl\"?: string;\n    \"insuranceFrontUrl\"?: string;\n    \"insuranceBackUrl\"?: string;\n    \"surveyDataJson\"?: string;\n    \"approvedDate\"?: Date;\n    \"submittedDate\"?: Date;\n    \"confirmedDate\"?: Date;\n    \"birthday\"?: string;\n    \"partitionKey\"?: string;\n    \"rowKey\"?: string;\n    \"timestamp\"?: Date;\n    \"eTag\"?: string;\n}\n\nexport interface AvailabilityRule {\n    \"priority\"?: number;\n    \"resourceID\"?: string;\n    \"onThisDay\"?: string;\n    \"startTime\"?: string;\n    \"endTime\"?: string;\n    \"comment\"?: string;\n    \"status\"?: string;\n    \"partitionKey\"?: string;\n    \"rowKey\"?: string;\n    \"timestamp\"?: Date;\n    \"eTag\"?: string;\n}\n\nexport interface CustomerLead {\n    \"firstName\"?: string;\n    \"lastName\"?: string;\n    \"dob\"?: string;\n    \"phone\"?: string;\n    \"email\"?: string;\n    \"serviceType\"?: string;\n    \"timeSlot\"?: string;\n    \"withContrast\"?: boolean;\n    \"partitionKey\"?: string;\n    \"rowKey\"?: string;\n    \"timestamp\"?: Date;\n    \"eTag\"?: string;\n}\n\nexport interface Location {\n    \"partitionKey\"?: string;\n    \"rowKey\"?: string;\n    \"timestamp\"?: Date;\n    \"eTag\"?: string;\n}\n\nexport interface SlotAvailabilityDate {\n    \"date\"?: Date;\n    \"friendlyBegin\"?: string;\n    \"times\"?: Array<SlotAvailabilityTime>;\n}\n\nexport interface SlotAvailabilityTime {\n    \"time\"?: string;\n    \"resourceId\"?: string;\n    \"isHidden\"?: boolean;\n    \"isAvailable\"?: boolean;\n    \"isContrastAvailable\"?: boolean;\n    \"isContrastRequired\"?: boolean;\n    \"linkedAppointment\"?: Appointment;\n    \"slotId\"?: string;\n}\n\nexport interface Stack {\n    \"in\"?: string;\n    \"at\"?: string;\n}\n\nexport interface SurveyQuestion {\n    \"questionId\"?: string;\n    \"questionShowIf\"?: string;\n    \"questionShowIfAnswer\"?: string;\n    \"questionText\"?: string;\n    \"questionType\"?: string;\n    \"isRequired\"?: boolean;\n    \"isHidden\"?: boolean;\n    \"order\"?: number;\n    \"partitionKey\"?: string;\n    \"rowKey\"?: string;\n    \"timestamp\"?: Date;\n    \"eTag\"?: string;\n}\n\nexport interface TableResult {\n    \"result\"?: any;\n    \"httpStatusCode\"?: number;\n    \"etag\"?: string;\n}\n\nexport interface User {\n    \"apiKey\"?: string;\n    \"immutableId\"?: string;\n    \"referenceRowKey\"?: string;\n    \"partitionKey\"?: string;\n    \"rowKey\"?: string;\n    \"timestamp\"?: Date;\n    \"eTag\"?: string;\n}\n\n\n\n/**\n * AuthApi - fetch parameter creator\n */\nexport const AuthApiFetchParamCreator = {\n    /**\n     *\n     * @summary Auth\n     * @param req\n     * @param authToken\n     */\n    auth(params: {  \"req\"?: User; \"authToken\"?: string; }, options?: any): FetchArgs {\n        const baseUrl = `/api/auth`;\n        let urlObj = url.parse(baseUrl, true);\n        urlObj.query = assign({}, urlObj.query, {\n            \"authToken\": params[\"authToken\"],\n        });\n        let fetchOptions: RequestInit = assign({}, { method: \"POST\" }, options);\n\n        let contentTypeHeader: Dictionary<string> = {};\n        contentTypeHeader = { \"Content-Type\": \"application/json\" };\n        if (params[\"req\"]) {\n            fetchOptions.body = JSON.stringify(params[\"req\"] || {});\n        }\n        if (contentTypeHeader) {\n            fetchOptions.headers = assign({}, contentTypeHeader, fetchOptions.headers);\n        }\n        return {\n            url: url.format(urlObj),\n            options: fetchOptions,\n        };\n    },\n};\n\n/**\n * AuthApi - functional programming interface\n */\nexport const AuthApiFp = {\n    /**\n     *\n     * @summary Auth\n     * @param req\n     * @param authToken\n     */\n    auth(params: { \"req\"?: User; \"authToken\"?: string;  }, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<User> {\n        const fetchArgs = AuthApiFetchParamCreator.auth(params, options);\n        return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {\n            return fetch(basePath + fetchArgs.url, fetchArgs.options).then((response) => {\n                if (response.status >= 200 && response.status < 300) {\n                    return response.json();\n                } else {\n                    throw response;\n                }\n            });\n        };\n    },\n};\n\n/**\n * AuthApi - object-oriented interface\n */\nexport class AuthApi extends BaseAPI {\n    /**\n     *\n     * @summary Auth\n     * @param req\n     * @param authToken\n     */\n    auth(params: {  \"req\"?: User; \"authToken\"?: string; }, options?: any) {\n        return AuthApiFp.auth(params, options)(this.fetch, this.basePath);\n    }\n};\n\n/**\n * AuthApi - factory interface\n */\nexport const AuthApiFactory = function (fetch?: FetchAPI, basePath?: string) {\n    return {\n        /**\n         *\n         * @summary Auth\n         * @param req\n         * @param authToken\n         */\n        auth(params: {  \"req\"?: User; \"authToken\"?: string; }, options?: any) {\n            return AuthApiFp.auth(params, options)(fetch, basePath);\n        },\n    };\n};\n\n\n/**\n * LeadGenApi - fetch parameter creator\n */\nexport const LeadGenApiFetchParamCreator = {\n    /**\n     *\n     * @summary Run\n     * @param req\n     * @param authToken\n     */\n    runGET(params: {  \"req\"?: CustomerLead; \"authToken\"?: string; }, options?: any): FetchArgs {\n        const baseUrl = `/api/leadGen`;\n        let urlObj = url.parse(baseUrl, true);\n        urlObj.query = assign({}, urlObj.query, {\n            \"authToken\": params[\"authToken\"],\n        });\n        let fetchOptions: RequestInit = assign({}, { method: \"GET\" }, options);\n\n        let contentTypeHeader: Dictionary<string> = {};\n        contentTypeHeader = { \"Content-Type\": \"application/json\" };\n        if (params[\"req\"]) {\n            fetchOptions.body = JSON.stringify(params[\"req\"] || {});\n        }\n        if (contentTypeHeader) {\n            fetchOptions.headers = assign({}, contentTypeHeader, fetchOptions.headers);\n        }\n        return {\n            url: url.format(urlObj),\n            options: fetchOptions,\n        };\n    },\n    /**\n     *\n     * @summary Run\n     * @param req\n     * @param authToken\n     */\n    runPOST(params: {  \"req\"?: CustomerLead; \"authToken\"?: string; }, options?: any): FetchArgs {\n        const baseUrl = `/api/leadGen`;\n        let urlObj = url.parse(baseUrl, true);\n        urlObj.query = assign({}, urlObj.query, {\n            \"authToken\": params[\"authToken\"],\n        });\n        let fetchOptions: RequestInit = assign({}, { method: \"POST\" }, options);\n\n        let contentTypeHeader: Dictionary<string> = {};\n        contentTypeHeader = { \"Content-Type\": \"application/json\" };\n        if (params[\"req\"]) {\n            fetchOptions.body = JSON.stringify(params[\"req\"] || {});\n        }\n        if (contentTypeHeader) {\n            fetchOptions.headers = assign({}, contentTypeHeader, fetchOptions.headers);\n        }\n        return {\n            url: url.format(urlObj),\n            options: fetchOptions,\n        };\n    },\n};\n\n/**\n * LeadGenApi - functional programming interface\n */\nexport const LeadGenApiFp = {\n    /**\n     *\n     * @summary Run\n     * @param req\n     * @param authToken\n     */\n    runGET(params: { \"req\"?: CustomerLead; \"authToken\"?: string;  }, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<CustomerLead> {\n        const fetchArgs = LeadGenApiFetchParamCreator.runGET(params, options);\n        return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {\n            return fetch(basePath + fetchArgs.url, fetchArgs.options).then((response) => {\n                if (response.status >= 200 && response.status < 300) {\n                    return response.json();\n                } else {\n                    throw response;\n                }\n            });\n        };\n    },\n    /**\n     *\n     * @summary Run\n     * @param req\n     * @param authToken\n     */\n    runPOST(params: { \"req\"?: CustomerLead; \"authToken\"?: string;  }, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<CustomerLead> {\n        const fetchArgs = LeadGenApiFetchParamCreator.runPOST(params, options);\n        return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {\n            return fetch(basePath + fetchArgs.url, fetchArgs.options).then((response) => {\n                if (response.status >= 200 && response.status < 300) {\n                    return response.json();\n                } else {\n                    throw response;\n                }\n            });\n        };\n    },\n};\n\n/**\n * LeadGenApi - object-oriented interface\n */\nexport class LeadGenApi extends BaseAPI {\n    /**\n     *\n     * @summary Run\n     * @param req\n     * @param authToken\n     */\n    runGET(params: {  \"req\"?: CustomerLead; \"authToken\"?: string; }, options?: any) {\n        return LeadGenApiFp.runGET(params, options)(this.fetch, this.basePath);\n    }\n    /**\n     *\n     * @summary Run\n     * @param req\n     * @param authToken\n     */\n    runPOST(params: {  \"req\"?: CustomerLead; \"authToken\"?: string; }, options?: any) {\n        return LeadGenApiFp.runPOST(params, options)(this.fetch, this.basePath);\n    }\n};\n\n/**\n * LeadGenApi - factory interface\n */\nexport const LeadGenApiFactory = function (fetch?: FetchAPI, basePath?: string) {\n    return {\n        /**\n         *\n         * @summary Run\n         * @param req\n         * @param authToken\n         */\n        runGET(params: {  \"req\"?: CustomerLead; \"authToken\"?: string; }, options?: any) {\n            return LeadGenApiFp.runGET(params, options)(fetch, basePath);\n        },\n        /**\n         *\n         * @summary Run\n         * @param req\n         * @param authToken\n         */\n        runPOST(params: {  \"req\"?: CustomerLead; \"authToken\"?: string; }, options?: any) {\n            return LeadGenApiFp.runPOST(params, options)(fetch, basePath);\n        },\n    };\n};\n\n\n/**\n * PostQuestionApi - fetch parameter creator\n */\nexport const PostQuestionApiFetchParamCreator = {\n    /**\n     *\n     * @summary GetQuestions\n     * @param req\n     */\n    postQuestion(params: {  \"req\"?: SurveyQuestion; }, options?: any): FetchArgs {\n        const baseUrl = `/api/question`;\n        let urlObj = url.parse(baseUrl, true);\n        let fetchOptions: RequestInit = assign({}, { method: \"POST\" }, options);\n\n        let contentTypeHeader: Dictionary<string> = {};\n        contentTypeHeader = { \"Content-Type\": \"application/json\" };\n        if (params[\"req\"]) {\n            fetchOptions.body = JSON.stringify(params[\"req\"] || {});\n        }\n        if (contentTypeHeader) {\n            fetchOptions.headers = assign({}, contentTypeHeader, fetchOptions.headers);\n        }\n        return {\n            url: url.format(urlObj),\n            options: fetchOptions,\n        };\n    },\n};\n\n/**\n * PostQuestionApi - functional programming interface\n */\nexport const PostQuestionApiFp = {\n    /**\n     *\n     * @summary GetQuestions\n     * @param req\n     */\n    postQuestion(params: { \"req\"?: SurveyQuestion;  }, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<TableResult> {\n        const fetchArgs = PostQuestionApiFetchParamCreator.postQuestion(params, options);\n        return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {\n            return fetch(basePath + fetchArgs.url, fetchArgs.options).then((response) => {\n                if (response.status >= 200 && response.status < 300) {\n                    return response.json();\n                } else {\n                    throw response;\n                }\n            });\n        };\n    },\n};\n\n/**\n * PostQuestionApi - object-oriented interface\n */\nexport class PostQuestionApi extends BaseAPI {\n    /**\n     *\n     * @summary GetQuestions\n     * @param req\n     */\n    postQuestion(params: {  \"req\"?: SurveyQuestion; }, options?: any) {\n        return PostQuestionApiFp.postQuestion(params, options)(this.fetch, this.basePath);\n    }\n};\n\n/**\n * PostQuestionApi - factory interface\n */\nexport const PostQuestionApiFactory = function (fetch?: FetchAPI, basePath?: string) {\n    return {\n        /**\n         *\n         * @summary GetQuestions\n         * @param req\n         */\n        postQuestion(params: {  \"req\"?: SurveyQuestion; }, options?: any) {\n            return PostQuestionApiFp.postQuestion(params, options)(fetch, basePath);\n        },\n    };\n};\n\n\n/**\n * QuestionApi - fetch parameter creator\n */\nexport const QuestionApiFetchParamCreator = {\n    /**\n     *\n     * @summary GetQuestions\n     */\n    getQuestions(options?: any): FetchArgs {\n        const baseUrl = `/api/question`;\n        let urlObj = url.parse(baseUrl, true);\n        let fetchOptions: RequestInit = assign({}, { method: \"GET\" }, options);\n\n        let contentTypeHeader: Dictionary<string> = {};\n        if (contentTypeHeader) {\n            fetchOptions.headers = assign({}, contentTypeHeader, fetchOptions.headers);\n        }\n        return {\n            url: url.format(urlObj),\n            options: fetchOptions,\n        };\n    },\n};\n\n/**\n * QuestionApi - functional programming interface\n */\nexport const QuestionApiFp = {\n    /**\n     *\n     * @summary GetQuestions\n     */\n    getQuestions(options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Array<SurveyQuestion>> {\n        const fetchArgs = QuestionApiFetchParamCreator.getQuestions(options);\n        return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {\n            return fetch(basePath + fetchArgs.url, fetchArgs.options).then((response) => {\n                if (response.status >= 200 && response.status < 300) {\n                    return response.json();\n                } else {\n                    throw response;\n                }\n            });\n        };\n    },\n};\n\n/**\n * QuestionApi - object-oriented interface\n */\nexport class QuestionApi extends BaseAPI {\n    /**\n     *\n     * @summary GetQuestions\n     */\n    getQuestions(options?: any) {\n        return QuestionApiFp.getQuestions(options)(this.fetch, this.basePath);\n    }\n};\n\n/**\n * QuestionApi - factory interface\n */\nexport const QuestionApiFactory = function (fetch?: FetchAPI, basePath?: string) {\n    return {\n        /**\n         *\n         * @summary GetQuestions\n         */\n        getQuestions(options?: any) {\n            return QuestionApiFp.getQuestions(options)(fetch, basePath);\n        },\n    };\n};\n\n\n/**\n * ResourceApi - fetch parameter creator\n */\nexport const ResourceApiFetchParamCreator = {\n    /**\n     *\n     * @summary AvailabilityRules\n     * @param req\n     * @param authToken\n     */\n    availabilityRulesDELETE(params: {  \"req\"?: AvailabilityRule; \"authToken\"?: string; }, options?: any): FetchArgs {\n        const baseUrl = `/api/timeslot/rules`;\n        let urlObj = url.parse(baseUrl, true);\n        urlObj.query = assign({}, urlObj.query, {\n            \"authToken\": params[\"authToken\"],\n        });\n        let fetchOptions: RequestInit = assign({}, { method: \"DELETE\" }, options);\n\n        let contentTypeHeader: Dictionary<string> = {};\n        contentTypeHeader = { \"Content-Type\": \"application/json\" };\n        if (params[\"req\"]) {\n            fetchOptions.body = JSON.stringify(params[\"req\"] || {});\n        }\n        if (contentTypeHeader) {\n            fetchOptions.headers = assign({}, contentTypeHeader, fetchOptions.headers);\n        }\n        return {\n            url: url.format(urlObj),\n            options: fetchOptions,\n        };\n    },\n    /**\n     *\n     * @summary AvailabilityRules\n     * @param authToken\n     */\n    availabilityRulesGET(params: {  \"authToken\"?: string; }, options?: any): FetchArgs {\n        const baseUrl = `/api/timeslot/rules`;\n        let urlObj = url.parse(baseUrl, true);\n        urlObj.query = assign({}, urlObj.query, {\n            \"authToken\": params[\"authToken\"],\n        });\n        let fetchOptions: RequestInit = assign({}, { method: \"GET\" }, options);\n\n        let contentTypeHeader: Dictionary<string> = {};\n        if (contentTypeHeader) {\n            fetchOptions.headers = assign({}, contentTypeHeader, fetchOptions.headers);\n        }\n        return {\n            url: url.format(urlObj),\n            options: fetchOptions,\n        };\n    },\n    /**\n     *\n     * @summary AvailabilityRules\n     * @param req\n     * @param authToken\n     */\n    availabilityRulesPOST(params: {  \"req\"?: AvailabilityRule; \"authToken\"?: string; }, options?: any): FetchArgs {\n        const baseUrl = `/api/timeslot/rules`;\n        let urlObj = url.parse(baseUrl, true);\n        urlObj.query = assign({}, urlObj.query, {\n            \"authToken\": params[\"authToken\"],\n        });\n        let fetchOptions: RequestInit = assign({}, { method: \"POST\" }, options);\n\n        let contentTypeHeader: Dictionary<string> = {};\n        contentTypeHeader = { \"Content-Type\": \"application/json\" };\n        if (params[\"req\"]) {\n            fetchOptions.body = JSON.stringify(params[\"req\"] || {});\n        }\n        if (contentTypeHeader) {\n            fetchOptions.headers = assign({}, contentTypeHeader, fetchOptions.headers);\n        }\n        return {\n            url: url.format(urlObj),\n            options: fetchOptions,\n        };\n    },\n    /**\n     *\n     * @summary AvailabilityRules\n     * @param req\n     * @param authToken\n     */\n    availabilityRulesPUT(params: {  \"req\"?: AvailabilityRule; \"authToken\"?: string; }, options?: any): FetchArgs {\n        const baseUrl = `/api/timeslot/rules`;\n        let urlObj = url.parse(baseUrl, true);\n        urlObj.query = assign({}, urlObj.query, {\n            \"authToken\": params[\"authToken\"],\n        });\n        let fetchOptions: RequestInit = assign({}, { method: \"PUT\" }, options);\n\n        let contentTypeHeader: Dictionary<string> = {};\n        contentTypeHeader = { \"Content-Type\": \"application/json\" };\n        if (params[\"req\"]) {\n            fetchOptions.body = JSON.stringify(params[\"req\"] || {});\n        }\n        if (contentTypeHeader) {\n            fetchOptions.headers = assign({}, contentTypeHeader, fetchOptions.headers);\n        }\n        return {\n            url: url.format(urlObj),\n            options: fetchOptions,\n        };\n    },\n    /**\n     *\n     * @summary Locations\n     * @param locationId\n     * @param authToken\n     */\n    locationsGET(params: {  \"locationId\"?: string; \"authToken\"?: string; }, options?: any): FetchArgs {\n        const baseUrl = `/api/locations`;\n        let urlObj = url.parse(baseUrl, true);\n        urlObj.query = assign({}, urlObj.query, {\n            \"locationId\": params[\"locationId\"],\n            \"authToken\": params[\"authToken\"],\n        });\n        let fetchOptions: RequestInit = assign({}, { method: \"GET\" }, options);\n\n        let contentTypeHeader: Dictionary<string> = {};\n        if (contentTypeHeader) {\n            fetchOptions.headers = assign({}, contentTypeHeader, fetchOptions.headers);\n        }\n        return {\n            url: url.format(urlObj),\n            options: fetchOptions,\n        };\n    },\n    /**\n     *\n     * @summary Locations\n     * @param locationId\n     * @param authToken\n     */\n    locationsPOST(params: {  \"locationId\"?: string; \"authToken\"?: string; }, options?: any): FetchArgs {\n        const baseUrl = `/api/locations`;\n        let urlObj = url.parse(baseUrl, true);\n        urlObj.query = assign({}, urlObj.query, {\n            \"locationId\": params[\"locationId\"],\n            \"authToken\": params[\"authToken\"],\n        });\n        let fetchOptions: RequestInit = assign({}, { method: \"POST\" }, options);\n\n        let contentTypeHeader: Dictionary<string> = {};\n        if (contentTypeHeader) {\n            fetchOptions.headers = assign({}, contentTypeHeader, fetchOptions.headers);\n        }\n        return {\n            url: url.format(urlObj),\n            options: fetchOptions,\n        };\n    },\n};\n\n/**\n * ResourceApi - functional programming interface\n */\nexport const ResourceApiFp = {\n    /**\n     *\n     * @summary AvailabilityRules\n     * @param req\n     * @param authToken\n     */\n    availabilityRulesDELETE(params: { \"req\"?: AvailabilityRule; \"authToken\"?: string;  }, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ApiResultListAvailabilityRule> {\n        const fetchArgs = ResourceApiFetchParamCreator.availabilityRulesDELETE(params, options);\n        return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {\n            return fetch(basePath + fetchArgs.url, fetchArgs.options).then((response) => {\n                if (response.status >= 200 && response.status < 300) {\n                    return response.json();\n                } else {\n                    throw response;\n                }\n            });\n        };\n    },\n    /**\n     *\n     * @summary AvailabilityRules\n     * @param authToken\n     */\n    availabilityRulesGET(params: { \"authToken\"?: string;  }, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ApiResultListAvailabilityRule> {\n        const fetchArgs = ResourceApiFetchParamCreator.availabilityRulesGET(params, options);\n        return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {\n            return fetch(basePath + fetchArgs.url, fetchArgs.options).then((response) => {\n                if (response.status >= 200 && response.status < 300) {\n                    return response.json();\n                } else {\n                    throw response;\n                }\n            });\n        };\n    },\n    /**\n     *\n     * @summary AvailabilityRules\n     * @param req\n     * @param authToken\n     */\n    availabilityRulesPOST(params: { \"req\"?: AvailabilityRule; \"authToken\"?: string;  }, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ApiResultListAvailabilityRule> {\n        const fetchArgs = ResourceApiFetchParamCreator.availabilityRulesPOST(params, options);\n        return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {\n            return fetch(basePath + fetchArgs.url, fetchArgs.options).then((response) => {\n                if (response.status >= 200 && response.status < 300) {\n                    return response.json();\n                } else {\n                    throw response;\n                }\n            });\n        };\n    },\n    /**\n     *\n     * @summary AvailabilityRules\n     * @param req\n     * @param authToken\n     */\n    availabilityRulesPUT(params: { \"req\"?: AvailabilityRule; \"authToken\"?: string;  }, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ApiResultListAvailabilityRule> {\n        const fetchArgs = ResourceApiFetchParamCreator.availabilityRulesPUT(params, options);\n        return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {\n            return fetch(basePath + fetchArgs.url, fetchArgs.options).then((response) => {\n                if (response.status >= 200 && response.status < 300) {\n                    return response.json();\n                } else {\n                    throw response;\n                }\n            });\n        };\n    },\n    /**\n     *\n     * @summary Locations\n     * @param locationId\n     * @param authToken\n     */\n    locationsGET(params: { \"locationId\"?: string; \"authToken\"?: string;  }, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Array<Location>> {\n        const fetchArgs = ResourceApiFetchParamCreator.locationsGET(params, options);\n        return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {\n            return fetch(basePath + fetchArgs.url, fetchArgs.options).then((response) => {\n                if (response.status >= 200 && response.status < 300) {\n                    return response.json();\n                } else {\n                    throw response;\n                }\n            });\n        };\n    },\n    /**\n     *\n     * @summary Locations\n     * @param locationId\n     * @param authToken\n     */\n    locationsPOST(params: { \"locationId\"?: string; \"authToken\"?: string;  }, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<Array<Location>> {\n        const fetchArgs = ResourceApiFetchParamCreator.locationsPOST(params, options);\n        return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {\n            return fetch(basePath + fetchArgs.url, fetchArgs.options).then((response) => {\n                if (response.status >= 200 && response.status < 300) {\n                    return response.json();\n                } else {\n                    throw response;\n                }\n            });\n        };\n    },\n};\n\n/**\n * ResourceApi - object-oriented interface\n */\nexport class ResourceApi extends BaseAPI {\n    /**\n     *\n     * @summary AvailabilityRules\n     * @param req\n     * @param authToken\n     */\n    availabilityRulesDELETE(params: {  \"req\"?: AvailabilityRule; \"authToken\"?: string; }, options?: any) {\n        return ResourceApiFp.availabilityRulesDELETE(params, options)(this.fetch, this.basePath);\n    }\n    /**\n     *\n     * @summary AvailabilityRules\n     * @param authToken\n     */\n    availabilityRulesGET(params: {  \"authToken\"?: string; }, options?: any) {\n        return ResourceApiFp.availabilityRulesGET(params, options)(this.fetch, this.basePath);\n    }\n    /**\n     *\n     * @summary AvailabilityRules\n     * @param req\n     * @param authToken\n     */\n    availabilityRulesPOST(params: {  \"req\"?: AvailabilityRule; \"authToken\"?: string; }, options?: any) {\n        return ResourceApiFp.availabilityRulesPOST(params, options)(this.fetch, this.basePath);\n    }\n    /**\n     *\n     * @summary AvailabilityRules\n     * @param req\n     * @param authToken\n     */\n    availabilityRulesPUT(params: {  \"req\"?: AvailabilityRule; \"authToken\"?: string; }, options?: any) {\n        return ResourceApiFp.availabilityRulesPUT(params, options)(this.fetch, this.basePath);\n    }\n    /**\n     *\n     * @summary Locations\n     * @param locationId\n     * @param authToken\n     */\n    locationsGET(params: {  \"locationId\"?: string; \"authToken\"?: string; }, options?: any) {\n        return ResourceApiFp.locationsGET(params, options)(this.fetch, this.basePath);\n    }\n    /**\n     *\n     * @summary Locations\n     * @param locationId\n     * @param authToken\n     */\n    locationsPOST(params: {  \"locationId\"?: string; \"authToken\"?: string; }, options?: any) {\n        return ResourceApiFp.locationsPOST(params, options)(this.fetch, this.basePath);\n    }\n};\n\n/**\n * ResourceApi - factory interface\n */\nexport const ResourceApiFactory = function (fetch?: FetchAPI, basePath?: string) {\n    return {\n        /**\n         *\n         * @summary AvailabilityRules\n         * @param req\n         * @param authToken\n         */\n        availabilityRulesDELETE(params: {  \"req\"?: AvailabilityRule; \"authToken\"?: string; }, options?: any) {\n            return ResourceApiFp.availabilityRulesDELETE(params, options)(fetch, basePath);\n        },\n        /**\n         *\n         * @summary AvailabilityRules\n         * @param authToken\n         */\n        availabilityRulesGET(params: {  \"authToken\"?: string; }, options?: any) {\n            return ResourceApiFp.availabilityRulesGET(params, options)(fetch, basePath);\n        },\n        /**\n         *\n         * @summary AvailabilityRules\n         * @param req\n         * @param authToken\n         */\n        availabilityRulesPOST(params: {  \"req\"?: AvailabilityRule; \"authToken\"?: string; }, options?: any) {\n            return ResourceApiFp.availabilityRulesPOST(params, options)(fetch, basePath);\n        },\n        /**\n         *\n         * @summary AvailabilityRules\n         * @param req\n         * @param authToken\n         */\n        availabilityRulesPUT(params: {  \"req\"?: AvailabilityRule; \"authToken\"?: string; }, options?: any) {\n            return ResourceApiFp.availabilityRulesPUT(params, options)(fetch, basePath);\n        },\n        /**\n         *\n         * @summary Locations\n         * @param locationId\n         * @param authToken\n         */\n        locationsGET(params: {  \"locationId\"?: string; \"authToken\"?: string; }, options?: any) {\n            return ResourceApiFp.locationsGET(params, options)(fetch, basePath);\n        },\n        /**\n         *\n         * @summary Locations\n         * @param locationId\n         * @param authToken\n         */\n        locationsPOST(params: {  \"locationId\"?: string; \"authToken\"?: string; }, options?: any) {\n            return ResourceApiFp.locationsPOST(params, options)(fetch, basePath);\n        },\n    };\n};\n\n\n/**\n * ScheduleApi - fetch parameter creator\n */\nexport const ScheduleApiFetchParamCreator = {\n    /**\n     *\n     * @summary AppointmentHandler\n     * @param req\n     * @param authToken\n     * @param withContrast\n     * @param locationId\n     * @param search\n     */\n    appointmentHandlerDELETE(params: {  \"req\"?: Appointment; \"authToken\"?: string; \"withContrast\"?: boolean; \"locationId\"?: string; \"search\"?: string; }, options?: any): FetchArgs {\n        const baseUrl = `/api/appointment`;\n        let urlObj = url.parse(baseUrl, true);\n        urlObj.query = assign({}, urlObj.query, {\n            \"authToken\": params[\"authToken\"],\n            \"withContrast\": params[\"withContrast\"],\n            \"locationId\": params[\"locationId\"],\n            \"search\": params[\"search\"],\n        });\n        let fetchOptions: RequestInit = assign({}, { method: \"DELETE\" }, options);\n\n        let contentTypeHeader: Dictionary<string> = {};\n        contentTypeHeader = { \"Content-Type\": \"application/json\" };\n        if (params[\"req\"]) {\n            fetchOptions.body = JSON.stringify(params[\"req\"] || {});\n        }\n        if (contentTypeHeader) {\n            fetchOptions.headers = assign({}, contentTypeHeader, fetchOptions.headers);\n        }\n        return {\n            url: url.format(urlObj),\n            options: fetchOptions,\n        };\n    },\n    /**\n     *\n     * @summary AppointmentHandler\n     * @param authToken\n     * @param withContrast\n     * @param locationId\n     * @param search\n     */\n    appointmentHandlerGET(params: {  \"authToken\"?: string; \"withContrast\"?: boolean; \"locationId\"?: string; \"search\"?: string; }, options?: any): FetchArgs {\n        const baseUrl = `/api/appointment`;\n        let urlObj = url.parse(baseUrl, true);\n        urlObj.query = assign({}, urlObj.query, {\n            \"authToken\": params[\"authToken\"],\n            \"withContrast\": params[\"withContrast\"],\n            \"locationId\": params[\"locationId\"],\n            \"search\": params[\"search\"],\n        });\n        let fetchOptions: RequestInit = assign({}, { method: \"GET\" }, options);\n\n        let contentTypeHeader: Dictionary<string> = {};\n        if (contentTypeHeader) {\n            fetchOptions.headers = assign({}, contentTypeHeader, fetchOptions.headers);\n        }\n        return {\n            url: url.format(urlObj),\n            options: fetchOptions,\n        };\n    },\n    /**\n     *\n     * @summary AppointmentHandler\n     * @param req\n     * @param authToken\n     * @param withContrast\n     * @param locationId\n     * @param search\n     */\n    appointmentHandlerPOST(params: {  \"req\"?: Appointment; \"authToken\"?: string; \"withContrast\"?: boolean; \"locationId\"?: string; \"search\"?: string; }, options?: any): FetchArgs {\n        const baseUrl = `/api/appointment`;\n        let urlObj = url.parse(baseUrl, true);\n        urlObj.query = assign({}, urlObj.query, {\n            \"authToken\": params[\"authToken\"],\n            \"withContrast\": params[\"withContrast\"],\n            \"locationId\": params[\"locationId\"],\n            \"search\": params[\"search\"],\n        });\n        let fetchOptions: RequestInit = assign({}, { method: \"POST\" }, options);\n\n        let contentTypeHeader: Dictionary<string> = {};\n        contentTypeHeader = { \"Content-Type\": \"application/json\" };\n        if (params[\"req\"]) {\n            fetchOptions.body = JSON.stringify(params[\"req\"] || {});\n        }\n        if (contentTypeHeader) {\n            fetchOptions.headers = assign({}, contentTypeHeader, fetchOptions.headers);\n        }\n        return {\n            url: url.format(urlObj),\n            options: fetchOptions,\n        };\n    },\n    /**\n     *\n     * @summary AppointmentHandler\n     * @param req\n     * @param authToken\n     * @param withContrast\n     * @param locationId\n     * @param search\n     */\n    appointmentHandlerPUT(params: {  \"req\"?: Appointment; \"authToken\"?: string; \"withContrast\"?: boolean; \"locationId\"?: string; \"search\"?: string; }, options?: any): FetchArgs {\n        const baseUrl = `/api/appointment`;\n        let urlObj = url.parse(baseUrl, true);\n        urlObj.query = assign({}, urlObj.query, {\n            \"authToken\": params[\"authToken\"],\n            \"withContrast\": params[\"withContrast\"],\n            \"locationId\": params[\"locationId\"],\n            \"search\": params[\"search\"],\n        });\n        let fetchOptions: RequestInit = assign({}, { method: \"PUT\" }, options);\n\n        let contentTypeHeader: Dictionary<string> = {};\n        contentTypeHeader = { \"Content-Type\": \"application/json\" };\n        if (params[\"req\"]) {\n            fetchOptions.body = JSON.stringify(params[\"req\"] || {});\n        }\n        if (contentTypeHeader) {\n            fetchOptions.headers = assign({}, contentTypeHeader, fetchOptions.headers);\n        }\n        return {\n            url: url.format(urlObj),\n            options: fetchOptions,\n        };\n    },\n    /**\n     *\n     * @summary TimeSlots\n     * @param authToken\n     * @param withContrast\n     * @param length\n     * @param locationId\n     */\n    timeSlotsGET(params: {  \"authToken\"?: string; \"withContrast\"?: boolean; \"length\"?: number; \"locationId\"?: string; }, options?: any): FetchArgs {\n        const baseUrl = `/api/timeslots`;\n        let urlObj = url.parse(baseUrl, true);\n        urlObj.query = assign({}, urlObj.query, {\n            \"authToken\": params[\"authToken\"],\n            \"withContrast\": params[\"withContrast\"],\n            \"length\": params[\"length\"],\n            \"locationId\": params[\"locationId\"],\n        });\n        let fetchOptions: RequestInit = assign({}, { method: \"GET\" }, options);\n\n        let contentTypeHeader: Dictionary<string> = {};\n        if (contentTypeHeader) {\n            fetchOptions.headers = assign({}, contentTypeHeader, fetchOptions.headers);\n        }\n        return {\n            url: url.format(urlObj),\n            options: fetchOptions,\n        };\n    },\n};\n\n/**\n * ScheduleApi - functional programming interface\n */\nexport const ScheduleApiFp = {\n    /**\n     *\n     * @summary AppointmentHandler\n     * @param req\n     * @param authToken\n     * @param withContrast\n     * @param locationId\n     * @param search\n     */\n    appointmentHandlerDELETE(params: { \"req\"?: Appointment; \"authToken\"?: string; \"withContrast\"?: boolean; \"locationId\"?: string; \"search\"?: string;  }, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ApiResultListAppointment> {\n        const fetchArgs = ScheduleApiFetchParamCreator.appointmentHandlerDELETE(params, options);\n        return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {\n            return fetch(basePath + fetchArgs.url, fetchArgs.options).then((response) => {\n                if (response.status >= 200 && response.status < 300) {\n                    return response.json();\n                } else {\n                    throw response;\n                }\n            });\n        };\n    },\n    /**\n     *\n     * @summary AppointmentHandler\n     * @param authToken\n     * @param withContrast\n     * @param locationId\n     * @param search\n     */\n    appointmentHandlerGET(params: { \"authToken\"?: string; \"withContrast\"?: boolean; \"locationId\"?: string; \"search\"?: string;  }, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ApiResultListAppointment> {\n        const fetchArgs = ScheduleApiFetchParamCreator.appointmentHandlerGET(params, options);\n        return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {\n            return fetch(basePath + fetchArgs.url, fetchArgs.options).then((response) => {\n                if (response.status >= 200 && response.status < 300) {\n                    return response.json();\n                } else {\n                    throw response;\n                }\n            });\n        };\n    },\n    /**\n     *\n     * @summary AppointmentHandler\n     * @param req\n     * @param authToken\n     * @param withContrast\n     * @param locationId\n     * @param search\n     */\n    appointmentHandlerPOST(params: { \"req\"?: Appointment; \"authToken\"?: string; \"withContrast\"?: boolean; \"locationId\"?: string; \"search\"?: string;  }, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ApiResultListAppointment> {\n        const fetchArgs = ScheduleApiFetchParamCreator.appointmentHandlerPOST(params, options);\n        return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {\n            return fetch(basePath + fetchArgs.url, fetchArgs.options).then((response) => {\n                if (response.status >= 200 && response.status < 300) {\n                    return response.json();\n                } else {\n                    throw response;\n                }\n            });\n        };\n    },\n    /**\n     *\n     * @summary AppointmentHandler\n     * @param req\n     * @param authToken\n     * @param withContrast\n     * @param locationId\n     * @param search\n     */\n    appointmentHandlerPUT(params: { \"req\"?: Appointment; \"authToken\"?: string; \"withContrast\"?: boolean; \"locationId\"?: string; \"search\"?: string;  }, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ApiResultListAppointment> {\n        const fetchArgs = ScheduleApiFetchParamCreator.appointmentHandlerPUT(params, options);\n        return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {\n            return fetch(basePath + fetchArgs.url, fetchArgs.options).then((response) => {\n                if (response.status >= 200 && response.status < 300) {\n                    return response.json();\n                } else {\n                    throw response;\n                }\n            });\n        };\n    },\n    /**\n     *\n     * @summary TimeSlots\n     * @param authToken\n     * @param withContrast\n     * @param length\n     * @param locationId\n     */\n    timeSlotsGET(params: { \"authToken\"?: string; \"withContrast\"?: boolean; \"length\"?: number; \"locationId\"?: string;  }, options?: any): (fetch?: FetchAPI, basePath?: string) => Promise<ApiResultListSlotAvailabilityDate> {\n        const fetchArgs = ScheduleApiFetchParamCreator.timeSlotsGET(params, options);\n        return (fetch: FetchAPI = isomorphicFetch, basePath: string = BASE_PATH) => {\n            return fetch(basePath + fetchArgs.url, fetchArgs.options).then((response) => {\n                if (response.status >= 200 && response.status < 300) {\n                    return response.json();\n                } else {\n                    throw response;\n                }\n            });\n        };\n    },\n};\n\n/**\n * ScheduleApi - object-oriented interface\n */\nexport class ScheduleApi extends BaseAPI {\n    /**\n     *\n     * @summary AppointmentHandler\n     * @param req\n     * @param authToken\n     * @param withContrast\n     * @param locationId\n     * @param search\n     */\n    appointmentHandlerDELETE(params: {  \"req\"?: Appointment; \"authToken\"?: string; \"withContrast\"?: boolean; \"locationId\"?: string; \"search\"?: string; }, options?: any) {\n        return ScheduleApiFp.appointmentHandlerDELETE(params, options)(this.fetch, this.basePath);\n    }\n    /**\n     *\n     * @summary AppointmentHandler\n     * @param authToken\n     * @param withContrast\n     * @param locationId\n     * @param search\n     */\n    appointmentHandlerGET(params: {  \"authToken\"?: string; \"withContrast\"?: boolean; \"locationId\"?: string; \"search\"?: string; }, options?: any) {\n        return ScheduleApiFp.appointmentHandlerGET(params, options)(this.fetch, this.basePath);\n    }\n    /**\n     *\n     * @summary AppointmentHandler\n     * @param req\n     * @param authToken\n     * @param withContrast\n     * @param locationId\n     * @param search\n     */\n    appointmentHandlerPOST(params: {  \"req\"?: Appointment; \"authToken\"?: string; \"withContrast\"?: boolean; \"locationId\"?: string; \"search\"?: string; }, options?: any) {\n        return ScheduleApiFp.appointmentHandlerPOST(params, options)(this.fetch, this.basePath);\n    }\n    /**\n     *\n     * @summary AppointmentHandler\n     * @param req\n     * @param authToken\n     * @param withContrast\n     * @param locationId\n     * @param search\n     */\n    appointmentHandlerPUT(params: {  \"req\"?: Appointment; \"authToken\"?: string; \"withContrast\"?: boolean; \"locationId\"?: string; \"search\"?: string; }, options?: any) {\n        return ScheduleApiFp.appointmentHandlerPUT(params, options)(this.fetch, this.basePath);\n    }\n    /**\n     *\n     * @summary TimeSlots\n     * @param authToken\n     * @param withContrast\n     * @param length\n     * @param locationId\n     */\n    timeSlotsGET(params: {  \"authToken\"?: string; \"withContrast\"?: boolean; \"length\"?: number; \"locationId\"?: string; }, options?: any) {\n        return ScheduleApiFp.timeSlotsGET(params, options)(this.fetch, this.basePath);\n    }\n};\n\n/**\n * ScheduleApi - factory interface\n */\nexport const ScheduleApiFactory = function (fetch?: FetchAPI, basePath?: string) {\n    return {\n        /**\n         *\n         * @summary AppointmentHandler\n         * @param req\n         * @param authToken\n         * @param withContrast\n         * @param locationId\n         * @param search\n         */\n        appointmentHandlerDELETE(params: {  \"req\"?: Appointment; \"authToken\"?: string; \"withContrast\"?: boolean; \"locationId\"?: string; \"search\"?: string; }, options?: any) {\n            return ScheduleApiFp.appointmentHandlerDELETE(params, options)(fetch, basePath);\n        },\n        /**\n         *\n         * @summary AppointmentHandler\n         * @param authToken\n         * @param withContrast\n         * @param locationId\n         * @param search\n         */\n        appointmentHandlerGET(params: {  \"authToken\"?: string; \"withContrast\"?: boolean; \"locationId\"?: string; \"search\"?: string; }, options?: any) {\n            return ScheduleApiFp.appointmentHandlerGET(params, options)(fetch, basePath);\n        },\n        /**\n         *\n         * @summary AppointmentHandler\n         * @param req\n         * @param authToken\n         * @param withContrast\n         * @param locationId\n         * @param search\n         */\n        appointmentHandlerPOST(params: {  \"req\"?: Appointment; \"authToken\"?: string; \"withContrast\"?: boolean; \"locationId\"?: string; \"search\"?: string; }, options?: any) {\n            return ScheduleApiFp.appointmentHandlerPOST(params, options)(fetch, basePath);\n        },\n        /**\n         *\n         * @summary AppointmentHandler\n         * @param req\n         * @param authToken\n         * @param withContrast\n         * @param locationId\n         * @param search\n         */\n        appointmentHandlerPUT(params: {  \"req\"?: Appointment; \"authToken\"?: string; \"withContrast\"?: boolean; \"locationId\"?: string; \"search\"?: string; }, options?: any) {\n            return ScheduleApiFp.appointmentHandlerPUT(params, options)(fetch, basePath);\n        },\n        /**\n         *\n         * @summary TimeSlots\n         * @param authToken\n         * @param withContrast\n         * @param length\n         * @param locationId\n         */\n        timeSlotsGET(params: {  \"authToken\"?: string; \"withContrast\"?: boolean; \"length\"?: number; \"locationId\"?: string; }, options?: any) {\n            return ScheduleApiFp.timeSlotsGET(params, options)(fetch, basePath);\n        },\n    };\n};\n\n","import * as React from 'react';\nimport {SafetyState} from \"../models/SafetyState\";\n\nexport abstract class FormBasePage extends React.Component<{}, SafetyState> {\n\tconstructor(props, context) {\n\t\tsuper(props, context);\n\t\tthis.state = SafetyState.loadState();\n\t}\n\n\tpublic getAns(q) {\n\t\treturn this.state.answers[q];\n\t}\n\n\tpublic componentDidMount() {\n\t\tconst state = SafetyState.loadState();\n\t\tthis.setState(state);\n\t}\n\n\tpublic ans(q, val) {\n\t\tconst answers = Object.assign(new SafetyState(), this.state.answers);\n\t\tanswers[q] = val;\n\t\tconsole.log(q, val, answers);\n\t\tthis.setState({answers}, () => this.saveState());\n\t}\n\n\tpublic saveState() {\n\t\tif (typeof sessionStorage !== 'undefined') {\n\t\t\tsessionStorage.setItem('wizard', JSON.stringify({\n\t\t\t\tanswers: this.state.answers,\n\t\t\t\timplants: this.state.implants,\n\t\t\t\tcurrentImplant: this.state.currentImplant,\n\t\t\t\tfname: this.state.fname,\n\t\t\t\tlname: this.state.lname,\n\t\t\t\temail: this.state.email,\n\t\t\t\tphone: this.state.phone,\n\t\t\t\theight: this.state.height,\n\t\t\t\tweight: this.state.weight,\n\t\t\t\tdoctorName: this.state.doctorName,\n\t\t\t\tdoctorContact: this.state.doctorContact,\n\t\t\t\tinsFront: this.state.insFront,\n\t\t\t\tinsBack: this.state.insBack,\n\t\t\t\tmriOrder: this.state.mriOrder,\n\t\t\t\tscan: this.state.scan || null,\n\t\t\t\thaveOrder: this.state.haveOrder,\n\t\t\t\tdob: this.state.dob,\n\t\t\t}));\n\t\t}\n\t}\n\n\tabstract render();\n}","import * as React from 'react'\nimport styled from 'react-emotion'\nimport { transparentize } from 'polished'\nimport { Link } from 'gatsby'\n\nimport { heights, dimensions, colors } from '../styles/variables'\nimport Container from './Container'\nimport * as Webflow from '../styles/webflow';\nimport { css } from \"emotion\";\n\nconst StyledHeader = styled.header('navContainer');\n\nconst Header: React.SFC<{}> = ({}) => (\n\t<header>\n\t\t<div className=\"nav-grid\">\n\t\t\t<div id=\"w-node-82dfbff5e208-14f3913a\" className=\"header-cta-top\">\n\t\t\t\t<div className=\"header-inline-block\">\n\t\t\t\t\t<div className=\"cta-heading inline-block blue\">Call :</div>\n\t\t\t\t\t<div className=\"cta-heading inline-block\"><a href=\"tel:+18334332567\" className=\"white\">833-IDEAL-MR</a></div>\n\t\t\t\t</div>\n\t\t\t\t<a href=\"/schedule\" className=\"button-3\">Schedule Online</a></div>\n\t\t\t<a href=\"/\" id=\"w-node-82dfbff5e20f-14f3913a\" className=\"brand w-nav-brand w--current\">\n\t\t\t\t<img src=\"https://uploads-ssl.webflow.com/5b9e87c40899a487ba8091e4/5ba3081aff7d475f9a6fa6d1_Logo%20Dark.svg\" alt=\"\" className=\"image-3\"/>\n\t\t\t</a>\n\t\t\t<div data-collapse=\"medium\" data-animation=\"default\" data-duration=\"400\" id=\"w-node-82dfbff5e211-14f3913a\" className=\"navbar w-nav\">\n\t\t\t\t<nav role=\"navigation\" className=\"navigation-menu w-nav-menu\">\n\t\t\t\t\t<a href=\"/why-ideal-mri\" className=\"navigation-link-2 white w-nav-link\">Why ideal MRI</a>\n\t\t\t\t\t<a href=\"/for-clinicians\" className=\"navigation-link-2 white w-nav-link\">Meet Our Team</a>\n\t\t\t\t\t<a href=\"/what-to-expect\" className=\"navigation-link-2 white w-nav-link\">What to Expect</a>\n\t\t\t\t\t<a href=\"/pricing-and-insurance\" className=\"navigation-link-2 white w-nav-link\">Pricing &amp; Insurance</a>\n\t\t\t\t\t<a href=\"/for-clinicians\" className=\"navigation-link-2 white w-nav-link\">For Clinicians</a>\n\t\t\t\t\t<a href=\"/come-see-us\" className=\"navigation-link-2 white w-nav-link\">Find Us</a></nav>\n\t\t\t\t<div className=\"hamburger-button-2 white w-nav-button\">\n\t\t\t\t\t<div className=\"w-icon-nav-menu\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div className=\"nav-spacer\">&nbsp;</div>\n\t</header>\n);\n\nexport default Header\n","import * as React from 'react'\nimport Helmet from \"react-helmet\";\n\nconst Footer: React.SFC<{}> = ({}) => (\n\t<footer className=\"cta-section centered-accented\">\n\t\t<div className=\"cta-footer\">\n\t\t\t<div className=\"footer-inline-block\">\n\t\t\t\t<h2 className=\"cta-heading inline-block blue\"><a href=\"tel:+18334332567\">Call</a> : </h2>\n\t\t\t\t<h2 className=\"cta-heading inline-block\"><a href=\"tel:+18334332567\" className=\"white\">833-IDEAL-MR</a>\n\t\t\t\t</h2>\n\t\t\t</div>\n\t\t\t<a href=\"/schedule\" className=\"button large\">Schedule Online</a></div>\n\t\t<div className=\"cta-footer\"><img\n\t\t\tsrc=\"https://uploads-ssl.webflow.com/5b9e87c40899a487ba8091e4/5ba3081aff7d475f9a6fa6d1_Logo%20Dark.svg\"\n\t\t\theight=\"60\" alt=\"\" className=\"cta-branding\"/><a href=\"/policies-and-hipaa-notice\">Policies and\n\t\t\tInformation</a></div>\n\t\t<Helmet>\n\t\t\t<script src=\"https://code.jquery.com/jquery-3.3.1.min.js\" type=\"text/javascript\"\n\t\t\t\t\tintegrity=\"sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8=\" crossOrigin=\"anonymous\" />\n\t\t\t<script src=\"https://uploads-ssl.webflow.com/5b9e87c40899a487ba8091e4/js/ideal-mri.71c22ec14.js\"\n\t\t\t\t\ttype=\"text/javascript\" />\n\t\t</Helmet>\n\t</footer>\n);\n\nexport default Footer\n","import * as React from 'react'\n\nconst Footer: React.SFC<{}> = ({}) => (\n\t<section className=\"cta-section\">\n\t\t<div className=\"w-container\">\n\t\t\t<div className=\"w-layout-grid grid-2\"><a href=\"/why-ideal-mri\" id=\"w-node-774288a9e25a-774089fe\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t className=\"cta-grid-item w-inline-block\"><img\n\t\t\t\tsrc=\"https://uploads-ssl.webflow.com/5b9e87c40899a487ba8091e4/5b9ead31fb9e09c21b36b101_Why.svg\" alt=\"\"\n\t\t\t\tclassName=\"cta-button-image\"/>\n\t\t\t\t<div id=\"w-node-774288a9e25c-774089fe\">Why ideal MRI</div>\n\t\t\t</a><a href=\"/what-to-expect\" id=\"w-node-774288a9e25e-774089fe\"\n\t\t\t\t   className=\"cta-grid-item w-inline-block\"><img\n\t\t\t\tsrc=\"https://uploads-ssl.webflow.com/5b9e87c40899a487ba8091e4/5b9ead2f69d670128b342c0a_Expect.svg\"\n\t\t\t\talt=\"\" className=\"cta-button-image\"/>\n\t\t\t\t<div>What to Expect</div>\n\t\t\t</a><a href=\"/meet-our-team\" id=\"w-node-774288a9e262-774089fe\" className=\"cta-grid-item w-inline-block\"><img\n\t\t\t\tsrc=\"https://uploads-ssl.webflow.com/5b9e87c40899a487ba8091e4/5b9ead2f3661e73d2f76eedd_Meet%20Our%20Team.svg\"\n\t\t\t\talt=\"\" className=\"cta-button-image\"/>\n\t\t\t\t<div>Meet Our Team</div>\n\t\t\t</a><a href=\"/for-clinicians\" id=\"w-node-774288a9e266-774089fe\"\n\t\t\t\t   className=\"cta-grid-item w-inline-block\"><img\n\t\t\t\tsrc=\"https://uploads-ssl.webflow.com/5b9e87c40899a487ba8091e4/5b9ead313661e7266876eedf_Providers.svg\"\n\t\t\t\talt=\"\" className=\"cta-button-image\"/>\n\t\t\t\t<div>For Clinicians</div>\n\t\t\t</a><a href=\"/pricing-and-insurance\" id=\"w-node-774288a9e26a-774089fe\"\n\t\t\t\t   className=\"cta-grid-item w-inline-block\"><img\n\t\t\t\tsrc=\"https://uploads-ssl.webflow.com/5b9e87c40899a487ba8091e4/5b9ead313661e7547b76eee0_Pricing.svg\"\n\t\t\t\talt=\"\" className=\"cta-button-image\"/>\n\t\t\t\t<div>Pricing &amp; Insurance</div>\n\t\t\t</a><a href=\"/come-see-us\" id=\"w-node-774288a9e26e-774089fe\" className=\"cta-grid-item w-inline-block\"><img\n\t\t\t\tsrc=\"https://uploads-ssl.webflow.com/5b9e87c40899a487ba8091e4/5b9ead2f08470e4beefa3f54_Find%20Us.svg\"\n\t\t\t\talt=\"\" className=\"cta-button-image\"/>\n\t\t\t\t<div>Find Us</div>\n\t\t\t</a></div>\n\t\t</div>\n\t</section>\n);\n\nexport default Footer\n","import * as React from 'react'\nimport Helmet from 'react-helmet'\nimport {StaticQuery, graphql} from 'gatsby'\n\n// import 'modern-normalize'\n// import '../styles/normalize'\nimport '../styles/webflow.css'\nimport '../styles/custom.css'\nimport '../styles/webflow.grid.css'\nimport '../styles/animate.css'\nimport '../styles/tables.css'\n\nimport Header from '../components/Header'\nimport LayoutRoot from '../components/LayoutRoot'\nimport LayoutMain from '../components/LayoutMain'\nimport Footer from \"../components/Footer\";\nimport FooterNav from \"../components/FooterNav\";\n\ntype StaticQueryProps = {\n\tsite: {\n\t\tsiteMetadata: {\n\t\t\ttitle: string\n\t\t\tdescription: string\n\t\t}\n\t}\n}\n\nconst IndexLayout: React.SFC = ({children}) => (\n\t<StaticQuery\n\t\tquery={graphql`\n      query IndexLayoutQuery {\n        site {\n          siteMetadata {\n            title\n            description\n          }\n        }\n      }\n    `}\n\t\trender={(data: StaticQueryProps) => (\n\t\t\t<LayoutRoot>\n\t\t\t\t<Helmet\n\t\t\t\t\ttitle={data.site.siteMetadata.title}\n\t\t\t\t\tmeta={[\n\t\t\t\t\t\t{name: 'description', content: data.site.siteMetadata.description},\n\t\t\t\t\t\t{name: 'keywords', content: 'gatsbyjs, gatsby, javascript, sample, something'}\n\t\t\t\t\t]}\n\t\t\t\t/>\n\t\t\t\t<Header/>\n\t\t\t\t<LayoutMain>{children}</LayoutMain>\n\t\t\t\t<FooterNav/>\n\t\t\t\t<Footer/>\n\t\t\t</LayoutRoot>\n\t\t)}\n\t/>\n)\n\nexport default IndexLayout\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathname(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import * as React from 'react'\nimport styled from 'react-emotion'\n\nconst StyledLayoutRoot = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n`\n\ninterface LayoutRootProps {\n  className?: string\n}\n\nconst LayoutRoot: React.SFC<LayoutRootProps> = ({ children, className }) => (\n  <StyledLayoutRoot className={className}>{children}</StyledLayoutRoot>\n)\n\nexport default LayoutRoot\n","import * as React from 'react'\n// import styled from 'react-emotion'\n// const StyledLayoutMain = styled.main`\n//   display: flex;\n//   flex-direction: column;\n//   flex: 1;\n//\n\ninterface LayoutMainProps {\n  className?: string\n}\n\n// <StyledLayoutMain className={className}>{children}</StyledLayoutMain>\nconst LayoutMain: React.SFC<LayoutMainProps> = ({ children, className }) => (\n  <main className={className || \"white-section\"}>\n      <div className=\"vspace80 w-container\">\n          {children}\n      </div>\n  </main>\n);\n\nexport default LayoutMain\n","export function formatPhone(phone: string) {\n\tconst ph = phone.replace(/[^\\d9]+/g, '');\n\tconst m = /([0-9]{3})([0-9]{3})([0-9]{4})/.exec(ph);\n\tif (m !== null && m.length === 4) {\n\t\treturn `(${m[1]}) ${m[2]}-${m[3]}`;\n\t}\n\treturn ph;\n}\n\nexport function formatDate(date: string) {\n\tconst dt = date.replace(/[^\\d]+/g, '');\n\tconst m = /([0-9]{2})\\/?([0-9]{2})\\/?([0-9]{4})/.exec(dt);\n\tif (m !== null && m.length === 4) {\n\t\treturn `${m[1]}/${m[2]}/${m[3]}`;\n\t}\n\treturn date;\n}"],"sourceRoot":""}