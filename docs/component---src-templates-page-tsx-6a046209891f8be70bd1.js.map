{"version":3,"sources":["webpack:///./src/templates/page.tsx","webpack:///./node_modules/@babel/runtime/helpers/objectDestructuringEmpty.js","webpack:///./src/components/Page.tsx","webpack:///./src/components/Container.tsx","webpack:///./src/styles/variables.ts"],"names":["__webpack_require__","r","__webpack_exports__","d","query","react__WEBPACK_IMPORTED_MODULE_0__","_components_Page__WEBPACK_IMPORTED_MODULE_1__","_components_Container__WEBPACK_IMPORTED_MODULE_2__","_layouts__WEBPACK_IMPORTED_MODULE_3__","default","_ref","data","createElement","a","markdownRemark","frontmatter","title","dangerouslySetInnerHTML","__html","html","162","e","t","module","exports","obj","TypeError","171","react_emotion__WEBPACK_IMPORTED_MODULE_1__","StyledPage","Object","target","children","className","StyledContainer","index_esm","react"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,0BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAA,KAAAO,EAAAP,EAAA,KAAAQ,EAAAR,EAAA,KAwCeE,EAAAO,QAXoC,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OACjDN,EAAAO,cAACJ,EAAAK,EAAD,KACER,EAAAO,cAACN,EAAAO,EAAD,KACER,EAAAO,cAACL,EAAAM,EAAD,KACER,EAAAO,cAAA,UAAKD,EAAKG,eAAeC,YAAYC,OACrCX,EAAAO,cAAA,OAAKK,yBAA2BC,OAAQP,EAAKG,eAAeK,YAQ7D,IAAMf,EAAK,cAAAgB,IAAA,SAAAC,EAAAC,GCtClBC,EAAAC,QAJA,SAAAC,GACA,SAAAA,EAAA,UAAAC,UAAA,kCAAAC,IAAA,SAAAN,EAAAC,EAAAT,GAAA,aCDA,IAAAR,EAAAL,EAAA,GAAA4B,EAAA5B,EAAA,KAKM6B,EAAaC,OAAAF,EAAAf,EAAAiB,CAAH,OAAAC,OAAA,YAAGD,CAAH,2CAYD5B,EAAAW,EAFoB,SAAAH,GAAA,IAAGsB,EAAHtB,EAAGsB,SAAUC,EAAbvB,EAAauB,UAAb,OAA6B5B,EAAAO,cAACiB,GAAWI,UAAWA,GAAYD,0DCT7FE,EAAkBJ,OAAAK,EAAAtB,EAAAiB,CAAH,OAAAC,OAAA,YAAGD,CAAH,6ECkCf,GDlCe,OAgBN5B,EAAAW,EAJ8B,SAAAH,GAAA,IAAGsB,EAAHtB,EAAGsB,SAAUC,EAAbvB,EAAauB,UAAb,OAC3CG,EAAAxB,cAACsB,GAAgBD,UAAWA,GAAYD","file":"component---src-templates-page-tsx-6a046209891f8be70bd1.js","sourcesContent":["import * as React from 'react'\nimport { graphql } from 'gatsby'\n\nimport Page from '../components/Page'\nimport Container from '../components/Container'\nimport IndexLayout from '../layouts'\n\ninterface PageTemplateProps {\n  data: {\n    site: {\n      siteMetadata: {\n        title: string\n        description: string\n        author: {\n          name: string\n          url: string\n        }\n      }\n    }\n    markdownRemark: {\n      html: string\n      excerpt: string\n      frontmatter: {\n        title: string\n      }\n    }\n  }\n}\n\nconst PageTemplate: React.SFC<PageTemplateProps> = ({ data }) => (\n  <IndexLayout>\n    <Page>\n      <Container>\n        <h1>{data.markdownRemark.frontmatter.title}</h1>\n        <div dangerouslySetInnerHTML={{ __html: data.markdownRemark.html }} />\n      </Container>\n    </Page>\n  </IndexLayout>\n)\n\nexport default PageTemplate\n\nexport const query = graphql`\n  query PageTemplateQuery($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        description\n        author {\n          name\n          url\n        }\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      excerpt\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n","function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure undefined\");\n}\n\nmodule.exports = _objectDestructuringEmpty;","import * as React from 'react'\nimport styled from 'react-emotion'\n\nimport { dimensions } from '../styles/variables'\n\nconst StyledPage = styled.div`\n  display: block;\n  flex: 1;\n  position: relative;\n`\n\ninterface PageProps {\n  className?: string\n}\n\nconst Page: React.SFC<PageProps> = ({ children, className }) => <StyledPage className={className}>{children}</StyledPage>\n\nexport default Page\n","import * as React from 'react'\nimport styled from 'react-emotion'\n\nimport { widths } from '../styles/variables'\nimport { getEmSize } from '../styles/mixins'\n\nconst StyledContainer = styled.div`\n  position: relative;\n  margin-left: auto;\n  margin-right: auto;\n  width: auto;\n  max-width: ${getEmSize(widths.lg)}em;\n`\n\ninterface ContainerProps {\n  className?: string\n}\n\nconst Container: React.SFC<ContainerProps> = ({ children, className }) => (\n  <StyledContainer className={className}>{children}</StyledContainer>\n)\n\nexport default Container\n","/* tslint:disable:max-line-length */\n\nexport const colors = {\n  brand: '#663399',\n  lilac: '#9d7cbf',\n  accent: '#ffb238',\n  success: '#37b635',\n  warning: '#ec1818',\n  ui: {\n    bright: '#e0d6eb',\n    light: '#f5f3f7',\n    whisper: '#fbfafc'\n  },\n  code: '#fcf6f0',\n  gray: {\n    dark: 'hsla(270, 17.119554496%, 0%, 0.92)',\n    copy: 'hsla(270, 15.797828016000002%, 0%, 0.88)',\n    calm: 'rgba(0, 0, 0, 0.54)'\n  },\n  white: '#fff',\n  black: '#000'\n};\n\nexport const fonts = {\n  sansSerif:\n    '-apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\", \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\", \"Helvetica Neue\", Arial, sans-serif',\n  serif: 'Georgia, \"Times New Roman\", Times, serif',\n  monospace: 'Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace, monospace'\n};\n\nexport const breakpoints = {\n  xs: 0,\n  sm: 576,\n  md: 768,\n  lg: 992,\n  xl: 1200\n};\n\nexport const widths = {\n  md: 720,\n  lg: 960,\n  xl: 1140\n};\n\nexport const dimensions = {\n  fontSize: {\n    regular: 16,\n    large: 18\n  },\n  headingSizes: {\n    h1: 2.441,\n    h2: 1.953,\n    h3: 1.563,\n    h4: 1.25\n  },\n  lineHeight: {\n    regular: 1.45,\n    heading: 1.2\n  },\n  containerPadding: 1.5\n};\n\nexport const heights = {\n  header: 60\n};\n"],"sourceRoot":""}