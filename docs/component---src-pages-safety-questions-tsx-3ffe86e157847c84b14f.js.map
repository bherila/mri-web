{"version":3,"sources":["webpack:///./src/pages/safety-questions.tsx","webpack:///./src/models/SafetyState.ts","webpack:///./src/components/breadcrumb.tsx","webpack:///./src/helpers/FormBasePage.tsx","webpack:///./src/components/BigBtn.tsx","webpack:///./src/components/Questions.tsx"],"names":["qs","id","q","r","qEye","qPost","SafetyQuestions","props","context","_FormBasePage","call","this","componentDidMount","prototype","addImplant","implants","state","slice","push","currentImplant","setState","removeImplant","console","log","n","validate","qArray","i","length","ans","answers","isComplete","renderQuestionSet","_this","map","item","react__WEBPACK_IMPORTED_MODULE_2__","createElement","_components_Questions__WEBPACK_IMPORTED_MODULE_5__","b","key","val","getAns","onChange","text","isValid","render","_layouts__WEBPACK_IMPORTED_MODULE_3__","a","className","_components_breadcrumb__WEBPACK_IMPORTED_MODULE_6__","num","c","value","haveOrder","scan","d","slot","timeSlot","reserved","renderInner","_this2","Fragment","style","paddingTop","htmlFor","react_modal__WEBPACK_IMPORTED_MODULE_7___default","isOpen","overrideSafetyWarning","overlayClassName","type","onClick","_components_BigBtn__WEBPACK_IMPORTED_MODULE_4__","href","img","wide","opacity","t","__webpack_exports__","default","p","161","e","SafetyState","fname","lname","email","phone","height","weight","doctorName","doctorContact","insFront","insBack","mriOrder","carrierNumber","groupNumber","policyNumber","err","dob","address1","address2","city","zip","optedIn","sessionStorage","JSON","parse","getItem","loadState","jsonState","o","Object","assign","165","s","l","Chevron","src","width","alt","translucent","Ez123","OrderBreadcrumb","gatsby__WEBPACK_IMPORTED_MODULE_3__","Link","to","display","MriTypeBreadcrumb","_ref","name","contrast","TimeslotBreadcrumb","slotId","replace","169","FormBasePage","_React$Component","_models_SafetyState__WEBPACK_IMPORTED_MODULE_3__","_babel_runtime_helpers_inheritsLoose__WEBPACK_IMPORTED_MODULE_1___default","_proto","saveState","setItem","stringify","Component","185","__webpack_require__","BigButton","react__WEBPACK_IMPORTED_MODULE_0__","gatsby__WEBPACK_IMPORTED_MODULE_1__","marginRight","YesNoQuestion","TextQuestion","children","maxLength","currentTarget","data-name"],"mappings":"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","file":"component---src-pages-safety-questions-tsx-3ffe86e157847c84b14f.js","sourcesContent":["import * as React from 'react'\n\nimport IndexLayout from '../layouts'\nimport {BigButton} from \"../components/BigBtn\";\nimport {TextQuestion, YesNoQuestion} from \"../components/Questions\";\nimport {Ez123, MriTypeBreadcrumb, OrderBreadcrumb, TimeslotBreadcrumb} from \"../components/breadcrumb\";\nimport ReactModal from 'react-modal';\nimport {FormBasePage} from \"../helpers/FormBasePage\";\n\nconst qs = [\n\t{id: 'pacemaker', q: 'a cardiac pacemaker?', r: false},\n\t{id: 'defibrillatorImplant', q: 'implanted defibrillator (also called ICD or AICD)?', r: false},\n\t{id: 'spinalStimulator', q: 'a spinal stimulator?', r: false},\n\t{id: 'loopRecorder', q: 'a loop recorder?', r: false},\n\t{id: 'neurostimulator', q: 'a brain neurostimulator?', r: false},\n];\n\nconst qEye = [\n\t{id: 'e1', q: 'Was it completely removed?', r: true },\n\t{id: 'e2', q: 'Have you had an xray of your eyes showing no metal?', r: false },\n\t{id: 'e3', q: 'Have you had an MRI since the injury?', r: false },\n];\n\nconst qPost = [\n\t{id: 'p1', q: 'Are you claustrophobic?', r: false},\n\t{id: 'p2', q: 'Are you allergic to IV contrast or MRI contrast?', r: false},\n\t{id: 'p3', q: 'Do you have any kidney disease?', r: false},\n\t{id: 'p4', q: 'Do you have diabetes?', r: false},\n];\n\n\nclass SafetyQuestions extends FormBasePage {\n\tconstructor(props, context) {\n\t\tsuper(props, context);\n\t}\n\tpublic componentDidMount() {\n\t\tsuper.componentDidMount();\n\t}\n\n\tpublic addImplant() {\n\t\tconst implants = this.state.implants.slice(0);\n\t\timplants.push(this.state.currentImplant);\n\t\tthis.setState({implants});\n\t}\n\n\tpublic removeImplant() {\n\t\tconsole.log('TODO');\n\t}\n\n\tpublic validate(qArray) {\n\t\tfor (let i = 0; i < qArray.length; ++i) {\n\t\t\tconst ans = this.state.answers[qArray[i].q];\n\t\t\tif (typeof ans === 'undefined') {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (ans !== qArray[i].r) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic isComplete(qArray) {\n\t\tfor (let i = 0; i < qArray.length; ++i) {\n\t\t\tconst ans = this.state.answers[qArray[i].q];\n\t\t\tif (typeof ans === 'undefined') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic renderQuestionSet(qArray) {\n\t\treturn qArray.map((item) => {\n\t\t\tif (typeof item.q === 'string') {\n\t\t\t\treturn (\n\t\t\t\t\t<YesNoQuestion\n\t\t\t\t\t\tkey={item.q}\n\t\t\t\t\t\tid={item.id}\n\t\t\t\t\t\tval={this.getAns(item.q)}\n\t\t\t\t\t\tonChange={(val) => this.ans(item.q, val)}\n\t\t\t\t\t\ttext={item.q}\n\t\t\t\t\t/>\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t}\n\n\tpublic isValid() {\n\t\tif (!this.validate(qs)) return false;\n\t\tif (!this.validate(qEye)) return false;\n\t\treturn true;\n\t}\n\n\tpublic render() {\n\t\treturn (\n\t\t\t<IndexLayout>\n\t\t\t\t<section id=\"Q2\" className=\"vspace80 w-container\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Ez123 num={3} />\n\t\t\t\t\t\t<div className=\"breadcrumb-stack\">\n\t\t\t\t\t\t\t<OrderBreadcrumb value={this.state.haveOrder}/>\n\t\t\t\t\t\t\t<MriTypeBreadcrumb value={this.state.scan}/>\n\t\t\t\t\t\t\t<TimeslotBreadcrumb slot={this.state.timeSlot} reserved={true} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"w-col w-col-3\"/>\n\t\t\t\t\t<div className=\"w-col w-col-6\">\n\t\t\t\t\t\t{this.renderInner()}\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\t\t\t</IndexLayout>\n\t\t);\n\t}\n\n\tpublic renderInner() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<h3>We need to ask some safety questions before we can finish scheduling you.</h3>\n\n\t\t\t\t<div className=\"inputrow\" style={{paddingTop: '1em'}}>\n\t\t\t\t\t<label htmlFor=\"DoctorName\" className=\"flexlabel\">\n\t\t\t\t\t\tDo you have...\n\t\t\t\t\t</label>\n\t\t\t\t</div>\n\n\t\t\t\t{this.renderQuestionSet(qs)}\n\n\t\t\t\t<ReactModal\n\t\t\t\t\tisOpen={!this.isValid() && !this.state.overrideSafetyWarning}\n\t\t\t\t\tclassName=\"modal-content animated fadeInUp\"\n\t\t\t\t\toverlayClassName=\"modal-wrapper\"\n\t\t\t\t>\n\t\t\t\t\t<p>Due to your medical history, we are unable to safely perform an MRI. If you feel that you are still a candidate for an MRI, you may submit the form anyway and we will contact you for further information.</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t<button type=\"button\"\n\t\t\t\t\t\t\t\tclassName=\"button w-button\"\n\t\t\t\t\t\t\t\tonClick={() => this.setState({overrideSafetyWarning: true})}>\n\t\t\t\t\t\t\tContinue Anyway\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</p>\n\t\t\t\t</ReactModal>\n\n\t\t\t\t<YesNoQuestion\n\t\t\t\t\tid=\"implants\"\n\t\t\t\t\ttext=\"any other implants?\"\n\t\t\t\t\tonChange={(val) => this.ans('implants', val)}\n\t\t\t\t\tval={this.getAns('implants')}\n\t\t\t\t>\n\t\t\t\t\t<TextQuestion\n\t\t\t\t\t\tid=\"implants\"\n\t\t\t\t\t\tval={this.state.currentImplant}\n\t\t\t\t\t\tonChange={(currentImplant) => this.setState({currentImplant})}\n\t\t\t\t\t\ttext=\"Tell us as much as you can about them.\"\n\t\t\t\t\t/>\n\t\t\t\t</YesNoQuestion>\n\n\t\t\t\t<div style={{paddingTop: '1em'}}>\n\n\t\t\t\t\t<YesNoQuestion\n\t\t\t\t\t\tid=\"eye\"\n\t\t\t\t\t\ttext=\"Have you ever had injury to your eye with metal, or metal in your eye?\"\n\t\t\t\t\t\tonChange={(val) => this.ans('MetalInEye', val)}\n\t\t\t\t\t\tval={this.getAns('MetalInEye')}\n\t\t\t\t\t>\n\n\t\t\t\t\t\t{this.renderQuestionSet(qEye)}\n\n\t\t\t\t\t\t<TextQuestion\n\t\t\t\t\t\t\tid=\"eyeDetails\"\n\t\t\t\t\t\t\tval={this.state.currentImplant}\n\t\t\t\t\t\t\tonChange={(currentImplant) => this.setState({currentImplant})}\n\t\t\t\t\t\t\ttext=\"Additional details\"\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t</YesNoQuestion>\n\n\t\t\t\t\t{this.renderQuestionSet(qPost)}\n\n\t\t\t\t\t<YesNoQuestion\n\t\t\t\t\t\ttext=\"Are you allergic to IV contrast or MRI contrast?\"\n\t\t\t\t\t\tval={this.getAns('AllergicToContrast')}\n\t\t\t\t\t\tonChange={(val) => this.ans('AllergicToContrast', val)}\n\t\t\t\t\t\tid=\"contrastAllergy\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<div className=\"alert\">\n\t\t\t\t\t\t\tIf your MRI requires contract, you will need to be premedicated with steriods\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</YesNoQuestion>\n\n\t\t\t\t</div>\n\n\t\t\t\t{(this.isValid() || this.state.overrideSafetyWarning) && this.isComplete(qs) ? (\n\t\t\t\t\t<div className=\"cta-subitem distributed\">\n\t\t\t\t\t\t<BigButton\n\t\t\t\t\t\t\thref=\"/questions-2\"\n\t\t\t\t\t\t\timg=\"https://uploads-ssl.webflow.com/5b9e87c40899a487ba8091e4/5b9ead2f3661e73d2f76eedd_Meet%20Our%20Team.svg\"\n\t\t\t\t\t\t\ttext=\"Continue\"\n\t\t\t\t\t\t\twide\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t) : (\n\t\t\t\t\t<div className=\"cta-subitem distributed\" style={{opacity: 0.5}}>\n\t\t\t\t\t\t<BigButton\n\t\t\t\t\t\t\thref=\"/safety-questions\"\n\t\t\t\t\t\t\timg=\"https://uploads-ssl.webflow.com/5b9e87c40899a487ba8091e4/5b9ead2f3661e73d2f76eedd_Meet%20Our%20Team.svg\"\n\t\t\t\t\t\t\ttext=\"All questions are required\"\n\t\t\t\t\t\t\twide\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default SafetyQuestions;","import {SlotAvailabilityTime} from \"../api/api\";\nimport {IScan} from \"./Scan\";\n\nexport class SafetyState {\n\tconstructor() {\n\t\tthis.fname =  '';\n\t\tthis.lname =  '';\n\t\tthis.answers =  {};\n\t\tthis.implants =  [];\n\t\tthis.currentImplant =  '';\n\t\tthis.scan =  null;\n\t\tthis.haveOrder =  false;\n\t\tthis.overrideSafetyWarning =  false;\n\t\tthis.email = '';\n\t\tthis.phone = '';\n\t\tthis.height = '';\n\t\tthis.weight = '';\n\t\tthis.doctorName = '';\n\t\tthis.doctorContact = '';\n\t\tthis.insFront = '';\n\t\tthis.insBack = '';\n\t\tthis.mriOrder = '';\n\t\tif (typeof sessionStorage !== 'undefined') {\n\t\t\tthis.timeSlot = JSON.parse(sessionStorage.getItem('timeSlot') || '{}');\n\t\t} else {\n\t\t\tthis.timeSlot = null;\n\t\t}\n\t\tthis.err = '';\n\t\tthis.dob = '';\n\t\tthis.carrierNumber = '';\n\t\tthis.groupNumber = '';\n\t\tthis.policyNumber = '';\n\t\tthis.address1 = '';\n\t\tthis.address2 = '';\n\t\tthis.city = '';\n\t\tthis.state = '';\n\t\tthis.zip = '';\n\t\tthis.optedIn = true;\n\t}\n\tpublic fname: string;\n\tpublic lname: string;\n\tpublic email: string;\n\tpublic phone: string;\n\tpublic answers: any;\n\tpublic implants: string[];\n\tpublic currentImplant: string;\n\tpublic haveOrder: boolean;\n\tpublic scan: IScan | null;\n\tpublic overrideSafetyWarning: boolean;\n\tpublic height: string;\n\tpublic weight: string;\n\tpublic doctorName: string;\n\tpublic doctorContact: string;\n\tpublic insFront: string;\n\tpublic insBack: string;\n\tpublic mriOrder: string;\n\tpublic carrierNumber: string;\n\tpublic groupNumber: string;\n\tpublic policyNumber: string;\n\tpublic timeSlot: SlotAvailabilityTime | null;\n\tpublic err: string;\n\tpublic dob: string;\n\tpublic address1: string;\n\tpublic address2: string;\n\tpublic city: string;\n\tpublic state: string;\n\tpublic zip: string;\n\tpublic optedIn: boolean;\n\n\tpublic static loadState(): SafetyState {\n\t\tif (typeof sessionStorage !== 'undefined') {\n\t\t\tconst jsonState = JSON.parse(sessionStorage.getItem('wizard') || '{}');\n\t\t\tconst o = {\n\t\t\t\t// fname: sessionStorage.getItem('fname') || '',\n\t\t\t\t// lname: sessionStorage.getItem('lname') || '',\n\t\t\t\t// email: sessionStorage.getItem('email') || '',\n\t\t\t\t// phone: sessionStorage.getItem('phone') || '',\n\t\t\t\t// height: sessionStorage.getItem('height') || '',\n\t\t\t\t// weight: sessionStorage.getItem('weight') || '',\n\t\t\t\t// doctorName: sessionStorage.getItem('doctorName') || '',\n\t\t\t\t// insFront: sessionStorage.getItem('insFront') || '',\n\t\t\t\t// insBack: sessionStorage.getItem('insBack') || '',\n\t\t\t\t// mriOrder: sessionStorage.getItem('mriOrder') || '',\n\t\t\t\tscan: JSON.parse(sessionStorage.getItem('scan') || '{}'),\n\t\t\t\thaveOrder: sessionStorage.getItem('haveOrder') === 'true',\n\t\t\t};\n\t\t\treturn Object.assign(new SafetyState(), jsonState, o);\n\t\t}\n\t\treturn new SafetyState();\n\t}\n}\n","import * as React from 'react';\nimport {Link} from 'gatsby';\nimport {SlotAvailabilityTime} from \"../api/api\";\n\nconst Chevron = (props: {translucent?: boolean}) => (\n\t<img\n\t\tsrc=\"https://uploads-ssl.webflow.com/5b9e87c40899a487ba8091e4/5be12c8e888fb5963088dc64_chevron-right-blue-2.svg\"\n\t\twidth=\"38\" height=\"38\" alt=\"Chevron right\" className={props.translucent ? 'translucent' : ''}/>\n);\n\nexport const Ez123 = (props: {num: number}) => (\n\t<div>\n\t\t<div className=\"breadcrumb-row\">\n\t\t\t<div className={'circled ' + (props.num < 1 ? 'translucent' : '') }>1</div>\n\t\t\t<Chevron translucent={props.num < 2} />\n\t\t\t<div className={'circled ' + (props.num < 2 ? 'translucent' : '') }>2</div>\n\t\t\t<Chevron translucent={props.num < 3} />\n\t\t\t<div className={'circled ' + (props.num < 3 ? 'translucent' : '') }>3</div>\n\t\t</div>\n\t\t<div className=\"breadcrumb-row\">\n\t\t\t{props.num === 1 && <h3><strong>Step 1.</strong> Your details</h3>}\n\t\t\t{props.num === 2 && <h3><strong>Step 2.</strong> Choose your scan</h3>}\n\t\t\t{props.num === 3 && <h3><strong>Step 3.</strong> Health &amp; Safety Information</h3>}\n\t\t</div>\n\t</div>\n);\n\nexport const OrderBreadcrumb = (props: {value: boolean}) => (\n    <Link to=\"/have-order\"\n       className=\"breadcrumb w-button\" style={{display: 'none'}}>\n\t\t{props.value ? 'Have Doctor\\'s Order' : 'No Order'} ✓\n\t</Link>\n);\n\nexport const MriTypeBreadcrumb = ({value}) => {\n\tif (!value) {\n\t\treturn (\n\t\t\t<Link to=\"/mri-type\" className=\"breadcrumb w-button\">\n\t\t\t\tClick here to select MRI type\n\t\t\t</Link>\n\t\t);\n\t}\n\tif (typeof value === 'string') {\n\t\treturn (\n\t\t\t<Link to=\"/mri-type\" className=\"breadcrumb w-button\">\n\t\t\t\tScan type: {value} &times;\n\t\t\t</Link>\n\t\t);\n\t}\n\treturn (\n\t\t<Link to=\"/mri-type\" className=\"breadcrumb w-button\">\n\t\t\tScan type: {value.name || 'e!name'} {value.contrast || 'e!contrast'} &times;\n\t\t</Link>\n\t)\n};\n\nexport const TimeslotBreadcrumb = (props: {slot: SlotAvailabilityTime | null, reserved?: boolean}) => (\n\t!!props.slot ? (\n\t\t<Link to=\"/pick-time\" className=\"breadcrumb w-button\">\n\t\t\t{(props.slot.slotId || 'no time selected').replace(/(\\d{4})-(\\d{2})-(\\d{2})T([^\\s]{5}).*/g, \"$2/$3/$1 at $4\")} &times;<br /><small>({props.reserved ? 'reserved' : 'not yet reserved'})</small>\n\t\t</Link>\n\t) : <div />\n);\n","import * as React from 'react';\nimport {SafetyState} from \"../models/SafetyState\";\n\nexport abstract class FormBasePage extends React.Component<{}, SafetyState> {\n\tconstructor(props, context) {\n\t\tsuper(props, context);\n\t\tthis.state = SafetyState.loadState();\n\t}\n\n\tpublic getAns(q) {\n\t\treturn this.state.answers[q];\n\t}\n\n\tpublic componentDidMount() {\n\t\tconst state = SafetyState.loadState();\n\t\tthis.setState(state);\n\t}\n\n\tpublic ans(q, val) {\n\t\tconst answers = Object.assign(new SafetyState(), this.state.answers);\n\t\tanswers[q] = val;\n\t\tconsole.log(q, val, answers);\n\t\tthis.setState({answers}, () => this.saveState());\n\t}\n\n\tpublic saveState() {\n\t\tif (typeof sessionStorage !== 'undefined') {\n\t\t\tsessionStorage.setItem('wizard', JSON.stringify({\n\t\t\t\tanswers: this.state.answers,\n\t\t\t\timplants: this.state.implants,\n\t\t\t\tcurrentImplant: this.state.currentImplant,\n\t\t\t\tfname: this.state.fname,\n\t\t\t\tlname: this.state.lname,\n\t\t\t\temail: this.state.email,\n\t\t\t\tphone: this.state.phone,\n\t\t\t\theight: this.state.height,\n\t\t\t\tweight: this.state.weight,\n\t\t\t\tdoctorName: this.state.doctorName,\n\t\t\t\tdoctorContact: this.state.doctorContact,\n\t\t\t\tinsFront: this.state.insFront,\n\t\t\t\tinsBack: this.state.insBack,\n\t\t\t\tmriOrder: this.state.mriOrder,\n\t\t\t\tscan: this.state.scan || null,\n\t\t\t\thaveOrder: this.state.haveOrder,\n\t\t\t\tdob: this.state.dob,\n\t\t\t}));\n\t\t}\n\t}\n\n\tabstract render();\n}","import * as React from \"react\";\nimport {Link} from \"gatsby\";\n\nexport const BigButton = ({href, img, wide, text}) => (\n\t<Link\n\t\tto={href}\n\t\tclassName={`cta-link ${wide ? 'wider' : ''} w-inline-block`}\n\t>\n\t\t<img\n\t\t\tsrc={img}\n\t\t\tclassName=\"image\"\n\t\t\tstyle={{marginRight: '8px'}}\n\t\t/>\n\t\t<div>{text}</div>\n\t</Link>\n);\n\n","import * as React from \"react\";\n\nexport const YesNoQuestion = (props: {text: string, val: boolean | null, onChange: any, id: string, children?: any}) => (\n\t<div>\n\t\t<div className=\"inputrow\">\n\t\t\t<label htmlFor={props.id} className=\"flexlabel\">{props.text}<br /></label>\n\t\t\t<div className=\"flexinput\">\n\t\t\t\t<a href=\"javascript:void(0);\" onClick={() => props.onChange(true)} className={`button green small ${props.val === true && 'selected'} w-button`}>\n\t\t\t\t\tYes\n\t\t\t\t</a>\n\t\t\t\t<a href=\"javascript:void(0);\" onClick={() => props.onChange(false)} className={`button green small ${props.val === false && 'selected'} w-button`}>\n\t\t\t\t\tNo\n\t\t\t\t</a>\n\t\t\t</div>\n\t\t</div>\n\t\t{props.val === true && typeof props.children !== 'undefined' && <div className=\"inputrow\">\n            <span className=\"flexmargin\">&nbsp;</span>\n            <div className=\"flexsubitem\">\n\t\t\t{props.children}\n\t\t\t</div>\n\t\t</div>}\n\t</div>\n);\n\nexport const TextQuestion = ({text, val, onChange, id}) => (\n\t<div className=\"inputrow\"><label htmlFor={id} className=\"flexlabel\">{text}<br /></label>\n\t\t<input\n\t\t\ttype=\"text\"\n\t\t\tclassName=\"flexinput w-input\"\n\t\t\tmaxLength={256}\n\t\t\tname={id}\n\t\t\tonClick={(e) => onChange(e.currentTarget.value)}\n\t\t\tvalue={val || ''}\n\t\t\tdata-name={id}\n\t\t\tid={id}\n\t\t/>\n\t</div>\n);\n\n// export class ListQuestiton = ({text, val, onChange, id})"],"sourceRoot":""}