{"version":3,"file":"0583a6e0ede2fa3ab1d1e7f35d0c8132a6041b23-70b48c68913e3ffd6f5e.js","mappings":"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","sources":["webpack://mri-web/./src/components/patient-details.tsx","webpack://mri-web/./src/components/pick-time-component.tsx","webpack://mri-web/./src/helpers/authToken.ts","webpack://mri-web/./src/helpers/copyAppointment.ts","webpack://mri-web/./src/models/Scan.ts"],"sourcesContent":["import * as React from 'react';\nimport {Appointment, ScheduleApi, ServiceType, SlotAvailabilityTime} from \"../api/api\";\nimport {getAuthToken} from \"../helpers/authToken\";\nimport copyAppointment from \"../helpers/copyAppointment\";\nimport {isEmpty} from \"ucshared\";\nimport ReactModal from 'react-modal';\nimport {TimePickWidget} from \"./pick-time-component\";\nimport {scanTypes} from \"../models/Scan\";\n\nexport interface PatientDetailsFormProps {\n\tselectedSlotAvailabilityTime: SlotAvailabilityTime;\n\tonConfirm: () => any;\n\tonCancel: () => any;\n}\n\nexport class PatientDetailsForm extends React.Component<PatientDetailsFormProps, Appointment & {isPickTime?: boolean, scanTypes?: ServiceType[]}> {\n\tconstructor(props, context) {\n\t\tsuper(props, context);\n\t\tconst appointment = this.props.selectedSlotAvailabilityTime.linkedAppointment;\n\t\tif (appointment) {\n\t\t\t// standardize json format\n\t\t\tappointment.serviceType = JSON.stringify(JSON.parse(appointment.serviceType || '{}'));\n\t\t}\n\t\tthis.state = appointment || {};\n\t}\n\n\tpublic componentDidMount(): void {\n\t\tnew ScheduleApi().serviceTypesGET({locationId: ''}).then((res) => this.setState({scanTypes: res.value || []}));\n\t}\n\n\tpublic UNSAFE_componentWillReceiveProps(nextProps: Readonly<PatientDetailsFormProps>): void {\n\t\tconst {selectedSlotAvailabilityTime} = nextProps;\n\t\tif (selectedSlotAvailabilityTime !== this.props.selectedSlotAvailabilityTime) {\n\t\t\tthis.setState(selectedSlotAvailabilityTime.linkedAppointment || {});\n\t\t}\n\t}\n\n\tpublic renderSafetyAnswers() {\n\t\tif (!this.props.selectedSlotAvailabilityTime) {\n\t\t\tconsole.log('!this.props.selectedSlotAvailabilityTime');\n\t\t\treturn false;\n\t\t}\n\t\tif (!this.props.selectedSlotAvailabilityTime.linkedAppointment) {\n\t\t\tconsole.log('!this.props.selectedSlotAvailabilityTime.linkedAppointment');\n\t\t\treturn false;\n\t\t}\n\t\tconst json = this.props.selectedSlotAvailabilityTime.linkedAppointment.surveyDataJson;\n\t\tconst isComplete = !isEmpty(json);\n\t\tconst q = JSON.parse(json || '{}');\n\t\tconst safetyItems = {\n\t\t\t\"Cardiac pacer\": q['a cardiac pacemaker?'] ? 'yes' : 'no',\n\t\t\t\"Stimulator\": q['a spinal stimulator?'] ? 'yes' : 'no',\n\t\t\t\"Brain implant\": !!q['a brain neurostimulator?'],\n\t\t\t\"Loop recorder\": !!q['a loop recorder?'],\n\t\t\t\"Defibrillator implant\": !!q['implanted defibrillator (also called ICD or AICD)?'],\n\t\t\t\"Other implants\": q.implants ? (`yes:${q.currentImplant}` || 'no detail') : 'no',\n\t\t\t\"Metal in eye\": q.MetalInEye ? 'yes' : 'no',\n\t\t\t\"Metal removed\": q.MetalInEye ? (q['Was it completely removed?'] ? 'yes' : 'no') : 'N/A',\n\t\t\t\"claustrophobic?\": !!q['Are you claustrophobic?'],\n\t\t\t\"Contrast allergy\": q['Are you allergic to IV contrast or MRI contrast?'] ? 'yes' : 'no',\n\t\t\t\"kidney disease?\": !!q['Do you have any kidney disease?'],\n\t\t\t\"diabetes?\": !!q['Do you have diabetes?'],\n\t\t\t\"pain?\": !!q.pain,\n\t\t\t\"injury?\": !!q.injury,\n\t\t\t\"cancer?\": !!q.cancer,\n\t\t};\n\t\tconst keys = Object.keys(safetyItems);\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<div style={{color: isComplete ? 'black' : 'red'}}>\n\t\t\t\t\tSafety form completed: {isComplete ? 'yes' : 'no'}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"qa-container\" style={{opacity: isComplete ? 1 : 0.5}}>\n\t\t\t\t\t{keys.map((key) => (\n\t\t\t\t\t\t<div key={key} className=\"qa-item\">\n\t\t\t\t\t\t\t<div className=\"qa-label\">{key}</div>\n\t\t\t\t\t\t\t<div className=\"qa-answer\">\n\t\t\t\t\t\t\t\t{typeof safetyItems[key] === 'boolean'\n\t\t\t\t\t\t\t\t\t? (safetyItems[key] === true ? 'yes' : 'no')\n\t\t\t\t\t\t\t\t\t: (safetyItems[key])\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t))}\n\t\t\t\t</div>\n\t\t\t\t<div style={{opacity: isComplete ? 1 : 0.5}}>\n\t\t\t\t\t{this.renderSafetyFormTable()}\n\t\t\t\t</div>\n\t\t\t</React.Fragment>\n\t\t)\n\t}\n\n\tprivate field(name: string, display: string, value: string|undefined, onChange: any) {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<label htmlFor={name} className=\"flexlabel\" style={{textAlign: 'right'}}>\n\t\t\t\t\t{display}&nbsp;\n\t\t\t\t</label>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tclassName=\"flexinput w-input\"\n\t\t\t\t\tmaxLength={256}\n\t\t\t\t\tname={name}\n\t\t\t\t\tdata-name={name}\n\t\t\t\t\tid={name}\n\t\t\t\t\tvalue={value || ''}\n\t\t\t\t\tonChange={(e) => onChange(e.currentTarget.value)}\n\t\t\t\t/>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n\n\tpublic render() {\n\t\t// const scan: ServiceType = JSON.parse(this.state.serviceType || '{}') || {};\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className=\"centered\">\n\t\t\t\t\t<select onChange={(e) => this.setState({serviceType: e.currentTarget.value})}\n\t\t\t\t\t\t\tvalue={this.state.serviceType}>\n\t\t\t\t\t\t{scanTypes.map((tt) => {\n\t\t\t\t\t\t\tconst val = JSON.stringify(tt);\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<option key={val} value={val}>{tt.name} {tt.contrast} ({tt.time})</option>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</select>\n\t\t\t\t</div>\n\t\t\t\t<button onClick={(e) => this.pickNewTime(e)} className=\"link centered\">\n\t\t\t\t\t{this.state.rowKey}\n\t\t\t\t</button>\n\t\t\t\t<div className=\"inputrow\">\n\t\t\t\t\t{this.field('first', 'First', this.state.firstName, (firstName) => this.setState({firstName}))}\n\t\t\t\t\t{this.field('last', 'Last', this.state.lastName, (lastName) => this.setState({lastName}))}\n\t\t\t\t\t{this.field('dob', 'DOB', this.state.birthday, (birthday) => this.setState({birthday}))}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"inputrow\">\n\t\t\t\t\t{this.field('phone', 'Phone', this.state.phone, (phone) => this.setState({phone}))}\n\t\t\t\t\t{this.field('Email', 'Email', this.state.email, (email) => this.setState({email}))}\n\t\t\t\t\t{/*{this.field('Weight', 'Weight', this.state.weight, (weight) => this.setState({weight}))}*/}\n\t\t\t\t</div>\n\t\t\t\t<div className=\"inputrow\">\n\t\t\t\t\t{this.field('Address1', 'Address1', this.state.address1, (address1) => this.setState({address1}))}\n\t\t\t\t\t{this.field('Address2', 'Address2', this.state.address2, (address2) => this.setState({address2}))}\n\t\t\t\t\t{this.field('City', 'City', this.state.city, (city) => this.setState({city}))}\n\t\t\t\t\t{this.field('State', 'State', this.state.state, (state) => this.setState({state}))}\n\t\t\t\t\t{this.field('Zip', 'Zip', this.state.zip, (zip) => this.setState({zip}))}\n\t\t\t\t</div>\n\t\t\t\t<hr/>\n\t\t\t\t<div className=\"inputrow\">\n\t\t\t\t\t{this.field('doctorName', 'doctorName', this.state.doctorName, (doctorName) => this.setState({doctorName}))}\n\t\t\t\t\t{this.field('doctorPhone', 'doctorPhone', this.state.doctorPhone, (doctorPhone) => this.setState({doctorPhone}))}\n\n\t\t\t\t\tView order image below\n\t\t\t\t\t{/*<button className=\"w-button\">*/}\n\t\t\t\t\t\t{/*View Order*/}\n\t\t\t\t\t{/*</button>*/}\n\t\t\t\t</div>\n\n\t\t\t\t<hr/>\n\t\t\t\t<div className=\"inputrow\">\n\t\t\t\t\t{this.field('insuranceCarrier', 'insuranceCarrier', this.state.insuranceCarrier, (insuranceCarrier) => this.setState({insuranceCarrier}))}\n\t\t\t\t\t{this.field('insuranceGroupNumber', 'insuranceGroupNumber', this.state.insuranceGroupNumber, (insuranceGroupNumber) => this.setState({insuranceGroupNumber}))}\n\t\t\t\t\t{this.field('insurancePolicyNumber', 'insurancePolicyNumber', this.state.insurancePolicyNumber, (insurancePolicyNumber) => this.setState({insurancePolicyNumber}))}\n\t\t\t\t\t{/*<a className=\"w-button\" href=\"#\">View Card Front</a>*/}\n\t\t\t\t\t{/*<button className=\"w-button\">View Card Back</button>*/}\n\t\t\t\t</div>\n\t\t\t\t<hr/>\n\t\t\t\t{this.renderSafetyAnswers()}\n\t\t\t\t<hr/>\n\t\t\t\t<div className=\"centered\">\n\t\t\t\t\t<button type=\"button\" className=\"button w-button\" onClick={(e) => this.doUpdate(e)}>Update</button>\n\t\t\t\t\t<button type=\"button\" className=\"button w-button\" onClick={(e) => this.doPrint(e)}>Print Data</button>\n\t\t\t\t\t<button type=\"button\" className=\"button w-button\" onClick={(e) => this.doCancel(e)}>Nevermind</button>\n\t\t\t\t</div>\n\t\t\t\t{this.renderTimePickModal()}\n\t\t\t\t<hr />\n\t\t\t\t<div className=\"inputrow\">\n\t\t\t\t\t<img style={{maxWidth: '700px', maxHeight: '500px'}} src={`https://mrischedba06.blob.core.windows.net/uploads/${this.state.orderImageUrl}`}/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"inputrow\">\n\t\t\t\t\t<img style={{maxWidth: '700px', maxHeight: '500px'}} src={`https://mrischedba06.blob.core.windows.net/uploads/${this.state.insuranceFrontUrl}`}/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"inputrow\">\n\t\t\t\t\t<img style={{maxWidth: '700px', maxHeight: '500px'}} src={`https://mrischedba06.blob.core.windows.net/uploads/${this.state.insuranceBackUrl}`}/>\n\t\t\t\t</div>\n\t\t\t\t<hr />\n\t\t\t</div>\n\t\t);\n\t}\n\n\tprivate doUpdate(e: React.MouseEvent<HTMLButtonElement>) {\n\t\te.preventDefault();\n\t\tnew ScheduleApi().appointmentHandlerPOST({\n\t\t\tauthToken: getAuthToken(),\n\t\t\tlocationId: '',\n\t\t\treq: copyAppointment(this.state),\n\t\t\tsearch: '',\n\t\t\twithContrast: false,\n\t\t}).then((releaseResp) => {\n\t\t\tif (releaseResp.success) {\n\t\t\t\tif (this.props.onConfirm instanceof Function) {\n\t\t\t\t\tthis.props.onConfirm();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\talert(releaseResp.message || 'Error');\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate doPrint(e: React.MouseEvent<HTMLButtonElement>) {\n\t\te.preventDefault();\n\t\twindow.print();\n\t}\n\n\tprivate doCancel(e: React.MouseEvent<HTMLButtonElement>) {\n\t\te.preventDefault();\n\t\tif (this.props.onCancel instanceof Function) {\n\t\t\tthis.props.onCancel();\n\t\t}\n\t}\n\n\tprivate renderTimePickModal() {\n\t\treturn (this.state.isPickTime && (\n\t\t\t<ReactModal isOpen={true} onRequestClose={() => this.setState({isPickTime: false})}\n\t\t\t\t\t\tclassName=\"modal-content-full animated fadeInUp\"\n\t\t\t\t\t\toverlayClassName=\"modal-wrapper\">\n\t\t\t\t<div className=\"centered white-box\">\n\t\t\t\t\t<TimePickWidget\n\t\t\t\t\t\tscan={{\n\t\t\t\t\t\t\tcontrast: this.state.serviceType || '',\n\t\t\t\t\t\t\tname: this.state.serviceType || 'Unknown',\n\t\t\t\t\t\t\tname2: '',\n\t\t\t\t\t\t\tname3: '',\n\t\t\t\t\t\t\tname4: '',\n\t\t\t\t\t\t\ttime: 30\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonPick={(slotAvailabilityTime) => this.setTime(slotAvailabilityTime)}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</ReactModal>\n\t\t))\n\t}\n\n\tprivate setTime(slotAvailabilityTime: SlotAvailabilityTime) {\n\t\tif (typeof slotAvailabilityTime.slotId !== 'string') {\n\t\t\talert('No slotId was specified!');\n\t\t\treturn;\n\t\t}\n\t\tconst oldAppointment = copyAppointment(this.state);\n\t\tthis.setState({\n\t\t\tpartitionKey: slotAvailabilityTime.slotId.split(' ')[1],\n\t\t\trowKey: slotAvailabilityTime.slotId\n\t\t}, () => {\n\t\t\tnew ScheduleApi().appointmentHandlerPOST({\n\t\t\t\tauthToken: getAuthToken(),\n\t\t\t\tlocationId: '',\n\t\t\t\treq: copyAppointment(this.state),\n\t\t\t\tsearch: '',\n\t\t\t\twithContrast: false,\n\t\t\t}).then((releaseResp) => {\n\t\t\t\tif (releaseResp.success) {\n\t\t\t\t\tnew ScheduleApi().appointmentHandlerDELETE({\n\t\t\t\t\t\tauthToken: getAuthToken(),\n\t\t\t\t\t\treq: oldAppointment,\n\t\t\t\t\t}).then((res) => {\n\t\t\t\t\t\tif (res.success) {\n\t\t\t\t\t\t\talert('Time updated, you will need to refresh the appointment list to see the new appointment.');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\talert('Failed to release old appointment: ' + res.message);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tprivate pickNewTime(e) {\n\t\tif (e) {\n\t\t\te.preventDefault();\n\t\t}\n\t\tthis.setState({\n\t\t\tisPickTime: true,\n\t\t});\n\t}\n\n\tprivate renderSafetyFormTable() {\n\t\tconst sd = JSON.parse(this.state.surveyDataJson || '{}');\n\t\treturn (\n\t\t\t<table>\n\t\t\t\t<tbody>\n\t\t\t\t{Object.keys(sd).map((row) => {\n\t\t\t\t\tif (excluded.indexOf(row) > -1) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<tr key={row}>\n\t\t\t\t\t\t\t<td>{row}</td>\n\t\t\t\t\t\t\t<td>{(typeof sd[row] === 'boolean' ? (sd[row] === true ? <span style={{color: 'red', fontWeight: 'bold'}}>Yes</span> : 'No') : sd[row].toString())}</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t);\n\t}\n}\n\nconst excluded = [\n\t'fname',\n\t'lname',\n\t'email',\n\t'phone',\n\t'answers',\n\t'implants',\n\t'currentImplant',\n\t'haveOrder',\n\t'scan',\n\t'overrideSafetyWarning',\n\t'height',\n\t'weight',\n\t'doctorName',\n\t'doctorContact',\n\t'insFront',\n\t'insBack',\n\t'mriOrder',\n\t'carrierNumber',\n\t'groupNumber',\n\t'policyNumber',\n\t'timeSlot',\n\t'err',\n\t'dob',\n\t'address1',\n\t'address2',\n\t'city',\n\t'state',\n\t'zip',\n\t'optedIn',\n\t'validationResult',\n\t'implanted defibrillator (also called ICD or AICD)?',\n\t'a cardiac pacemaker?',\n\t'a brain neurostimulator?',\n\t'a spinal stimulator?',\n\t'neurostimulator',\n\t'a loop recorder?',\n\t'defibrillatorImplant',\n\t'implants',\n\t'MetalInEye',\n\t'Was it completely removed?',\n\t'Are you claustrophobic?',\n\t'injury',\n\t'cancer',\n\t'pain',\n\t'Are you allergic to IV contrast or MRI contrast?',\n\t'Do you have any kidney disease?',\n\t'Do you have diabetes?'\n];\n","import * as React from 'react'\nimport * as Api from '../api/api'\nimport {SafetyState} from \"../models/SafetyState\";\nimport ReactModal from 'react-modal';\nimport {ServiceType, SlotAvailabilityTime} from \"../api/api\";\n\nconst take = 4;\n\ninterface TimePickState {\n\terr: any,\n\toffset: number;\n\ttotal: number;\n\tqna: SafetyState;\n\ttimes: Api.SlotAvailabilityDate[];\n\tselectedTime: any;\n\tshowModal: boolean;\n}\n\nexport class TimePickWidget extends React.Component<{scan: ServiceType, onPick: (time: Api.SlotAvailabilityTime) => any}, TimePickState> {\n\tconstructor(props, context) {\n\t\tsuper(props, context);\n\t\tthis.state = {\n\t\t\terr: '',\n\t\t\toffset: 0,\n\t\t\ttotal: 14,\n\t\t\tqna: SafetyState.loadState(),\n\t\t\tselectedTime: null,\n\t\t\ttimes: [],\n\t\t\tshowModal: false,\n\t\t};\n\t}\n\n\tpublic componentDidMount() {\n\t\tnew Api.ScheduleApi().timeSlotsGET({\n\t\t\twithContrast: this.props.scan.contrast === 'with and without contrast',\n\t\t\tlocationId: ''\n\t\t}).then((result) => {\n\t\t\tif (result.value) {\n\t\t\t\tthis.setState({\n\t\t\t\t\ttimes: result.value || [],\n\t\t\t\t\ttotal: result.value.length || 0,\n\t\t\t\t\tqna: SafetyState.loadState(),\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.setState({\n\t\t\t\t\terr: result.message || 'Error',\n\t\t\t\t\tqna: SafetyState.loadState(),\n\t\t\t\t});\n\t\t\t}\n\t\t}, (err) => this.setState({\n\t\t\terr,\n\t\t\tqna: SafetyState.loadState(),\n\t\t}));\n\t}\n\n\tpublic UNSAFE_componentWillReceiveProps(nextProps: Readonly<{ scan: ServiceType; onPick: (time: SlotAvailabilityTime) => any }>, nextContext: any): void {\n\t\tthis.setState({offset: 0});\n\t\tthis.componentDidMount();\n\t}\n\n\tpublic renderModal() {\n\t\treturn (\n\t\t\t<ReactModal\n\t\t\t\tisOpen={this.state.showModal}\n\t\t\t\tclassName=\"modal-content animated fadeInUp\"\n\t\t\t\toverlayClassName=\"modal-wrapper\"\n\t\t\t>\n\t\t\t\t<p><b>The time you selected is tomorrow.</b></p>\n\t\t\t\t<p>We won't have time to obtain prior authorization from your insurance carrier. If you aren't using insurance, this won't be a problem.</p>\n\t\t\t\t<p>Are you sure you want to select this time?</p>\n\t\t\t\t<p>\n\t\t\t\t\t<button type=\"button\"\n\t\t\t\t\t\t\tclassName=\"button w-button\"\n\t\t\t\t\t\t\tonClick={() => this.pickTime(this.state.selectedTime, false)}>\n\t\t\t\t\t\tYes, continue\n\t\t\t\t\t</button>\n\t\t\t\t\t<button type=\"button\"\n\t\t\t\t\t\t\tclassName=\"button w-button\"\n\t\t\t\t\t\t\tonClick={() => this.setState({showModal: false})}>\n\t\t\t\t\t\tNo, change time\n\t\t\t\t\t</button>\n\t\t\t\t</p>\n\t\t\t</ReactModal>\n\t\t);\n\t}\n\n\tpublic render() {\n\t\tconst {offset, total, times} = this.state;\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<div className=\"w-row\">\n\t\t\t\t\t<div className=\"w-col w-col-2\">\n\t\t\t\t\t\t<div className=\"timeslotcolumn\">\n\t\t\t\t\t\t\t{offset > 0 && (\n\t\t\t\t\t\t\t\t<a href=\"javascript:void(0)\"\n\t\t\t\t\t\t\t\t   onClick={() => this.setState({offset: offset - 1})}\n\t\t\t\t\t\t\t\t   className=\"buttontimeslot w-button\">\n\t\t\t\t\t\t\t\t\t&laquo; Earlier Dates\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t{times && times.map((date, i) => (\n\t\t\t\t\t\t(i >= offset && (i - offset) < take) && (\n\t\t\t\t\t\t\t<div key={JSON.stringify(date || i)} className=\"w-col w-col-2\">\n\t\t\t\t\t\t\t\t{this.renderSlotAvailabilityDate(date, !!date.isTomorrow)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)\n\t\t\t\t\t))}\n\t\t\t\t\t{offset + take < total && (\n\t\t\t\t\t\t<div className=\"w-col w-col-2\">\n\t\t\t\t\t\t\t<div className=\"timeslotcolumn\">\n\t\t\t\t\t\t\t\t<a href=\"javascript:void(0)\"\n\t\t\t\t\t\t\t\t   onClick={() => this.setState({offset: offset + 1})}\n\t\t\t\t\t\t\t\t   className=\"buttontimeslot w-button\">\n\t\t\t\t\t\t\t\t\tLater Dates &raquo;\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t\t{this.renderModal()}\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n\n\tprivate renderSlotAvailabilityDate(dt: Api.SlotAvailabilityDate, needConfirm: boolean) {\n\t\treturn (\n\t\t\t<div className=\"timeslotcolumn\">\n\t\t\t\t<h3 style={{whiteSpace: 'nowrap'}}>{dt.friendlyBegin}</h3>\n\t\t\t\t{dt.times ? dt.times.map((timeSlot) => (\n\t\t\t\t\t<a key={timeSlot.time}\n\t\t\t\t\t   href=\"#\"\n\t\t\t\t\t   className={`buttontimeslot ${timeSlot.isAvailable ? '' : 'unavailable '}w-button`}\n\t\t\t\t\t   onClick={() => this.pickTime(timeSlot, needConfirm)}\n\t\t\t\t\t>\n\t\t\t\t\t\t{timeSlot.time}\n\t\t\t\t\t</a>\n\t\t\t\t)) : <div>dt.times is {typeof dt.times}</div>}\n\t\t\t</div>\n\t\t);\n\t}\n\tprivate pickTime(timeSlot: Api.SlotAvailabilityTime, needConfirm: boolean) {\n\t\tif (timeSlot.isAvailable) {\n\t\t\tif (needConfirm) {\n\t\t\t\tthis.setState({selectedTime: timeSlot, showModal: true});\n\t\t\t} else {\n\t\t\t\tthis.props.onPick(timeSlot);\n\t\t\t}\n\t\t}\n\t}\n}","import { navigate } from \"gatsby\"\n\nexport function getAuthToken(): string {\n\tconst token = sessionStorage.getItem('sessionId') || '';\n\tif (token.length === 0) {\n\t\tloginRedirect();\n\t}\n\treturn token;\n}\n\nexport function loginRedirect() {\n\tsessionStorage.removeItem('sessionId');\n\tnavigate('/admin');\n}","import {Appointment} from \"../api/api\";\n\nfunction copyAppointment(o): Appointment {\n\tif (!o.partitionKey) {\n\t\tthrow 'No partitionKey';\n\t}\n\tif (!o.rowKey) {\n\t\tthrow 'No rowKey';\n\t}\n\treturn {\n\t\tresourceId: o.resourceId,\n\t\tserviceType: o.serviceType,\n\t\tserviceLength: o.serviceLength,\n\t\tfirstName: o.firstName,\n\t\tlastName: o.lastName,\n\t\tphone: o.phone,\n\t\temail: o.email,\n\t\taddress1: o.address1,\n\t\tcity: o.city,\n\t\tstate: o.state,\n\t\tzip: o.zip,\n\t\theight: o.height,\n\t\tweight: o.weight,\n\t\treminder: o.reminder,\n\t\tdoctorName: o.doctorName,\n\t\tdoctorPhone: o.doctorPhone,\n\t\tinsuranceCarrier: o.insuranceCarrier,\n\t\tinsuranceGroupNumber: o.insuranceGroupNumber,\n\t\tinsurancePolicyNumber: o.insurancePolicyNumber,\n\t\tinsuranceVerified: o.insuranceVerified,\n\t\tpriorAuthObtained: o.priorAuthObtained,\n\t\torderEnteredToRIS: o.orderEnteredToRIS,\n\t\tpatientWasCalled: o.patientWasCalled,\n\t\tconfirmed: o.confirmed,\n\t\torderImageUrl: o.orderImageUrl,\n\t\tinsuranceFrontUrl: o.insuranceFrontUrl,\n\t\tinsuranceBackUrl: o.insuranceBackUrl,\n\t\tsurveyDataJson: o.surveyDataJson,\n\t\tapprovedDate: o.approvedDate,\n\t\tsubmittedDate: o.submittedDate,\n\t\tconfirmedDate: o.confirmedDate,\n\t\tbirthday: o.birthday,\n\t\tpartitionKey: o.partitionKey,\n\t\trowKey: o.rowKey,\n\t\ttimestamp: o.timestamp,\n\t\tsafetyWarnings: o.safetyWarnings,\n\t\teTag: '*',\n\t};\n}\n\nexport default copyAppointment;\n","import {SafetyState} from \"./SafetyState\";\nimport {ScheduleApi, ServiceType} from \"../api/api\";\n\nexport let scanTypes: ServiceType[] = [];\n\nnew ScheduleApi().serviceTypesGET({locationId: ''}).then((res) => scanTypes = res.value || []);\n\n// export const scanTypes: ServiceType[] = [\n// \t{name: 'Hip MRI', contrast: 'without contrast', time: '45 min', name2: '', name3: '', name4: ''},\n// \t{name: 'Hip MRI', contrast: 'with and without contrast', time: '45 min', name2: '', name3: '', name4: ''},\n// \t{name: 'Knee MRI', contrast: 'without contrast', time: '45 min', name2: '', name3: '', name4: ''},\n// \t{name: 'Knee MRI', contrast: 'with and without contrast', time: '45 min', name2: '', name3: '', name4: ''},\n// \t{name: 'Ankle MRI', contrast: 'without contrast', time: '45 min', name2: '', name3: '', name4: ''},\n// \t{name: 'Ankle MRI', contrast: 'with and without contrast', time: '45 min', name2: '', name3: '', name4: ''},\n// \t{name: 'Calf MRI', contrast: 'without contrast', time: '45 min', name2: 'Tib-Fib MRI', name3: 'Tibia Fibula MRI', name4: ''},\n// \t{name: 'Calf MRI', contrast: 'with and without contrast', time: '45 min', name2: 'Tib-Fib MRI', name3: 'Tibia Fibula MRI', name4: ''},\n// \t{name: 'Foot MRI', contrast: 'without contrast', time: '45 min', name2: '', name3: '', name4: ''},\n// \t{name: 'Foot MRI', contrast: 'with and without contrast', time: '45 min', name2: '', name3: '', name4: ''},\n// \t{name: 'Thigh MRI', contrast: 'without contrast', time: '45 min', name2: '', name3: '', name4: ''},\n// \t{name: 'Thigh MRI', contrast: 'with and without contrast', time: '45 min', name2: '', name3: '', name4: ''},\n// \t{name: 'Hand MRI', contrast: 'without contrast', time: '45 min', name2: '', name3: '', name4: ''},\n// \t{name: 'Hand MRI', contrast: 'with and without contrast', time: '45 min', name2: '', name3: '', name4: ''},\n// \t{name: 'Wrist MRI', contrast: 'without contrast', time: '45 min', name2: '', name3: '', name4: ''},\n// \t{name: 'Wrist MRI', contrast: 'with and without contrast', time: '45 min', name2: '', name3: '', name4: ''},\n// \t{name: 'Forearm MRI', contrast: 'without contrast', time: '45 min', name2: '', name3: '', name4: ''},\n// \t{name: 'Forearm MRI', contrast: 'with and without contrast', time: '45 min', name2: '', name3: '', name4: ''},\n// \t{name: 'Elbow MRI', contrast: 'without contrast', time: '45 min', name2: '', name3: '', name4: ''},\n// \t{name: 'Elbow MRI', contrast: 'with and without contrast', time: '45 min', name2: '', name3: '', name4: ''},\n// \t{name: 'Humerus MRI', contrast: 'without contrast', time: '45 min', name2: '', name3: '', name4: ''},\n// \t{name: 'Humerus MRI', contrast: 'with and without contrast', time: '45 min', name2: '', name3: '', name4: ''},\n// \t{name: 'Shoulder MRI', contrast: 'without contrast', time: '45 min', name2: '', name3: '', name4: ''},\n// \t{name: 'Shoulder MRI', contrast: 'with and without contrast', time: '45 min', name2: '', name3: '', name4: ''},\n// \t{name: 'Cervical spine MRI', contrast: 'without contrast', time: '45 min', name2: '', name3: '', name4: ''},\n// \t{name: 'Cervical spine MRI', contrast: 'with and without contrast', time: '45 min', name2: 'Multiple sclerosis protocol', name3: '', name4: ''},\n// \t{name: 'Thoracic spine MRI', contrast: 'without contrast', time: '45 min', name2: '', name3: '', name4: ''},\n// \t{name: 'Thoracic spine MRI', contrast: 'with and without contrast', time: '45 min', name2: 'Multiple sclerosis protocol', name3: '', name4: ''},\n// \t{name: 'Lumbar spine MRI', contrast: 'without contrast', time: '45 min', name2: 'Low back pain MRI', name3: '', name4: ''},\n// \t{name: 'Lumbar spine MRI', contrast: 'with and without contrast', time: '45 min', name2: '', name3: '', name4: ''},\n// \t{name: 'Brain MRI', contrast: 'without contrast', time: '45 min', name2: 'Memory loss MRI', name3: 'Concussion evaluation MRI', name4: ''},\n// \t{name: 'Brain MRI', contrast: 'with and without contrast', time: '45 min', name2: '', name3: '', name4: ''},\n// \t{name: 'Pituitary (Brain MRI)', contrast: 'with and without contrast', time: '45 min', name2: 'Pituitary protocol MRI', name3: '', name4: ''},\n// \t{name: 'Brain MRA', contrast: 'without contrast', time: '45 min', name2: '', name3: '', name4: ''},\n// \t{name: 'Neck MRA', contrast: 'without contrast', time: '45 min', name2: '', name3: '', name4: ''},\n// \t{name: 'Neck (soft tissues) MRI', contrast: 'with and without contrast', time: '45 min', name2: 'Soft tissue neck MRI', name3: 'Neck mass MRI', name4: ''},\n// \t{name: 'Chest MRI', contrast: 'without contrast', time: '45 min', name2: '', name3: '', name4: ''},\n// \t{name: 'Chest MRI', contrast: 'with and without contrast', time: '45 min', name2: '', name3: '', name4: ''},\n// \t{name: 'Abdomen MRI', contrast: 'without contrast', time: '45 min', name2: '', name3: '', name4: ''},\n// \t{name: 'Abdomen MRI', contrast: 'with and without contrast', time: '45 min', name2: 'Liver lesion MRI', name3: 'Kidney lesion MRI', name4: 'Adrenal lesion MRI'},\n// \t{name: 'MRCP', contrast: 'without contrast', time: '45 min', name2: 'Biliary MRI', name3: 'MR Cholangiogram', name4: ''},\n// \t{name: 'Breast implant MRI', contrast: 'without contrast', time: '45 min', name2: '', name3: '', name4: ''},\n// \t{name: 'Pelvic (bony) MRI', contrast: 'without contrast', time: '45 min', name2: 'Sacrum MRI', name3: 'SI joint MRI', name4: ''},\n// \t{name: 'Pelvic (bony) MRI', contrast: 'with and without contrast', time: '45 min', name2: '', name3: '', name4: ''},\n// \t{name: 'Pelvic (prostate) MRI', contrast: 'with and without contrast', time: '45 min', name2: 'Prostate MRI', name3: '', name4: ''},\n// \t{name: 'Pelvic (rectum) MRI', contrast: 'with and without contrast', time: '45 min', name2: 'Rectal MRI', name3: '', name4: ''},\n// \t{name: 'Pelvic (female) MRI', contrast: 'with and without contrast', time: '45 min', name2: 'Female pelvis MRI', name3: 'Uterus MRI', name4: ''},\n// \t{name: 'MR Enterography', contrast: 'with and without contrast', time: '90 min', name2: 'Crohns protocol MRI', name3: '', name4: ''},\n// ];\n\nexport interface IScanTypeState {\n\tmriName: string;\n\tmatches: ServiceType[];\n\toops: string|null;\n\thaveOrder: boolean;\n\tsafetyState: SafetyState;\n}\n"],"names":["PatientDetailsForm","_React$Component","props","context","_this","appointment","call","selectedSlotAvailabilityTime","linkedAppointment","serviceType","JSON","stringify","parse","state","_inheritsLoose","_proto","prototype","componentDidMount","_this2","ScheduleApi","serviceTypesGET","locationId","then","res","setState","scanTypes","value","UNSAFE_componentWillReceiveProps","nextProps","this","renderSafetyAnswers","console","log","json","surveyDataJson","isComplete","isEmpty","q","safetyItems","implants","currentImplant","MetalInEye","pain","injury","cancer","keys","Object","React","style","color","className","opacity","map","key","renderSafetyFormTable","field","name","display","onChange","htmlFor","textAlign","type","maxLength","id","e","currentTarget","render","_this3","tt","val","contrast","time","onClick","pickNewTime","rowKey","firstName","lastName","birthday","phone","email","address1","address2","city","zip","doctorName","doctorPhone","insuranceCarrier","insuranceGroupNumber","insurancePolicyNumber","doUpdate","doPrint","doCancel","renderTimePickModal","maxWidth","maxHeight","src","orderImageUrl","insuranceFrontUrl","insuranceBackUrl","_this4","preventDefault","appointmentHandlerPOST","authToken","getAuthToken","req","copyAppointment","search","withContrast","releaseResp","success","onConfirm","Function","alert","message","window","print","onCancel","_this5","isPickTime","ReactModal","isOpen","onRequestClose","overlayClassName","TimePickWidget","scan","name2","name3","name4","onPick","slotAvailabilityTime","setTime","_this6","slotId","oldAppointment","partitionKey","split","appointmentHandlerDELETE","sd","row","excluded","indexOf","fontWeight","toString","err","offset","total","qna","SafetyState","loadState","selectedTime","times","showModal","Api","timeSlotsGET","result","length","nextContext","renderModal","pickTime","_this$state","href","date","i","renderSlotAvailabilityDate","isTomorrow","dt","needConfirm","whiteSpace","friendlyBegin","timeSlot","isAvailable","token","sessionStorage","getItem","loginRedirect","removeItem","navigate","o","resourceId","serviceLength","height","weight","reminder","insuranceVerified","priorAuthObtained","orderEnteredToRIS","patientWasCalled","confirmed","approvedDate","submittedDate","confirmedDate","timestamp","safetyWarnings","eTag"],"sourceRoot":""}