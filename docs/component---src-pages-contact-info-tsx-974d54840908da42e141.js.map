{"version":3,"sources":["webpack:///./src/pages/contact-info.tsx","webpack:///./src/components/Page.tsx","webpack:///./src/components/Container.tsx","webpack:///./node_modules/core-js/modules/es6.function.name.js","webpack:///./src/forms/index.tsx"],"names":["ContactInformation","props","context","_this","_React$Component","call","this","state","name","hasInsurance","render","_this2","react__WEBPACK_IMPORTED_MODULE_2__","createElement","_layouts__WEBPACK_IMPORTED_MODULE_6__","a","_components_Page__WEBPACK_IMPORTED_MODULE_4__","_components_Container__WEBPACK_IMPORTED_MODULE_5__","_forms__WEBPACK_IMPORTED_MODULE_3__","boundTextboxValue","setState","boundCheckboxValue","t","Component","__webpack_exports__","default","u","156","e","n","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react_emotion__WEBPACK_IMPORTED_MODULE_1__","StyledPage","Object","target","_ref","children","className","_styles_variables__WEBPACK_IMPORTED_MODULE_2__","_styles_mixins__WEBPACK_IMPORTED_MODULE_3__","StyledContainer","lg","dP","f","FProto","Function","prototype","nameRE","configurable","get","match","165","d","r","l","c","o","moment","formStyle","Row","react__WEBPACK_IMPORTED_MODULE_5__","Col","EditFormBase","_babel_runtime_helpers_inheritsLoose__WEBPACK_IMPORTED_MODULE_4___default","boundLabel","title","defaultValue","ucshared__WEBPACK_IMPORTED_MODULE_7__","isEmpty","toString","formGroup","sm","sm3","ctrlLabel","sm9","boundTextbox","bindFn","placeHolder","readOnly","isDisabled","wrn","renderWarnings","disabled","maxLength","type","onChange","value","placeholder","style","backgroundColor","bindValFn","currentTarget","minWidth","boundChoices","choices","cc","map","choice","i","key","label","submitRow","actionText","submitButton","boundDate","isStart","start","end","react_datepicker__WEBPACK_IMPORTED_MODULE_6__","selected","selectsEnd","startDate","endDate","dateFormatCalendar","showMonthDropdown","showYearDropdown","val","vlc","toLowerCase","indexOf","boundTextarea","rows","boundTextareaValue","boundCheckbox","defaultChecked","checked","boundBooleanSwitch","insertBlock","detailBlock"],"mappings":"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","file":"component---src-pages-contact-info-tsx-974d54840908da42e141.js","sourcesContent":["import * as React from 'react'\r\nimport { Link } from 'gatsby'\r\nimport {EditFormBase} from '../forms';\r\n\r\nimport Page from '../components/Page'\r\nimport Container from '../components/Container'\r\nimport IndexLayout from '../layouts'\r\n\r\nclass ContactInformation extends React.Component<{}, {name: string, hasInsurance: boolean}> {\r\n\tconstructor(props, context) {\r\n\t\tsuper(props, context);\r\n\t\tthis.state = {name: '', hasInsurance: true};\r\n\t}\r\n\r\n\tpublic render() {\r\n\t\treturn (\r\n\t\t\t<IndexLayout>\r\n\t\t\t\t<Page>\r\n\t\t\t\t\t<Container>\r\n\t\t\t\t\t\t<h1>Great!</h1>\r\n\t\t\t\t\t\t<p>We need a little information to get started...</p>\r\n\t\t\t\t\t\t{EditFormBase.boundTextboxValue('Name', this.state.name, (name) => this.setState({name}))}\r\n\t\t\t\t\t\t{EditFormBase.boundTextboxValue('Email', this.state.name, (name) => this.setState({name}))}\r\n\t\t\t\t\t\t{EditFormBase.boundTextboxValue('Phone', this.state.name, (name) => this.setState({name}))}\r\n\t\t\t\t\t\t{EditFormBase.boundCheckboxValue('Do you have insurance?', this.state.hasInsurance, (hasInsurance) => this.setState({hasInsurance}))}\r\n\t\t\t\t\t\t<p>We offer different MRI types on different days. Reserve your time, and we'll reschedule you if needed</p>\r\n\t\t\t\t\t</Container>\r\n\t\t\t\t</Page>\r\n\t\t\t</IndexLayout>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default ContactInformation;\r\n","import * as React from 'react'\r\nimport styled from 'react-emotion'\r\n\r\nimport { dimensions } from '../styles/variables'\r\n\r\nconst StyledPage = styled.div`\r\n  display: block;\r\n  flex: 1;\r\n  position: relative;\r\n`\r\n\r\ninterface PageProps {\r\n  className?: string\r\n}\r\n\r\nconst Page: React.SFC<PageProps> = ({ children, className }) => <StyledPage className={className}>{children}</StyledPage>\r\n\r\nexport default Page\r\n","import * as React from 'react'\r\nimport styled from 'react-emotion'\r\n\r\nimport { widths } from '../styles/variables'\r\nimport { getEmSize } from '../styles/mixins'\r\n\r\nconst StyledContainer = styled.div`\r\n  position: relative;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  width: auto;\r\n  max-width: ${getEmSize(widths.lg)}em;\r\n`\r\n\r\ninterface ContainerProps {\r\n  className?: string\r\n}\r\n\r\nconst Container: React.SFC<ContainerProps> = ({ children, className }) => (\r\n  <StyledContainer className={className}>{children}</StyledContainer>\r\n)\r\n\r\nexport default Container\r\n","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n","import * as React from 'react';\nimport DatePicker from 'react-datepicker';\nimport {isEmpty} from 'ucshared';\n\nconst moment = require('moment');\nconst formStyle = require('./formStyle.css');\n\nexport function formatAdminDate(date: any) {\n\treturn moment(date).format('MM/DD/YYYY');\n}\n\nconst Row = (props: any) => <div>{props.children}</div>;\nconst Col = (props: any) => <div>{props.children}</div>;\n\nexport class EditFormBase<TProps, TState> extends React.Component<TProps, TState> {\n\tpublic static formGroup = 'form-group';\n\tpublic static ctrlLabel = 'control-label';\n\tpublic static sm3 = '3';\n\tpublic static sm9 = '9';\n\tpublic static insertBlock = formStyle.insertBlock;\n\tpublic static detailBlock = formStyle.detailBlock;\n\n\tconstructor(props, context) {\n\t\tsuper(props, context);\n\t}\n\n\tpublic static boundLabel(title: string, defaultValue: string | number | Date) {\n\t\tif (isEmpty(title)) {\n\t\t\treturn <span>{(defaultValue || 'null').toString()}</span>;\n\t\t}\n\t\treturn (\n\t\t\t<Row className={EditFormBase.formGroup}>\n\t\t\t\t<Col sm={EditFormBase.sm3}><label className={EditFormBase.ctrlLabel}>{title}</label></Col>\n\t\t\t\t<Col sm={EditFormBase.sm9}>\n\t\t\t\t\t{(defaultValue || 'null').toString()}\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t);\n\t}\n\n\tpublic static boundTextbox(title: string, defaultValue: string | number | Date, bindFn: React.FormEventHandler<HTMLInputElement>, placeHolder?: string, readOnly?: boolean, isDisabled?: boolean) {\n\t\tconst wrn = EditFormBase.renderWarnings(defaultValue);\n\t\tif (isEmpty(title)) {\n\t\t\treturn (\n\t\t\t\t<span>\n\t\t\t\t\t<input\n\t\t\t\t\t\tdisabled={isDisabled}\n\t\t\t\t\t\tmaxLength={255}\n\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tonChange={bindFn}\n\t\t\t\t\t\tvalue={defaultValue ? defaultValue.toString() : ''}\n\t\t\t\t\t\tplaceholder={placeHolder || ''}\n\t\t\t\t\t\treadOnly={readOnly}\n\t\t\t\t\t\tstyle={!wrn ? {} : {backgroundColor: 'yellow'}}\n\t\t\t\t\t/>\n\t\t\t\t\t{wrn}\n\t\t\t\t</span>\n\t\t\t);\n\t\t}\n\t\treturn (\n\t\t\t<Row className={EditFormBase.formGroup}>\n\t\t\t\t<Col sm={EditFormBase.sm3}><label className={EditFormBase.ctrlLabel}>{title}</label></Col>\n\t\t\t\t<Col sm={EditFormBase.sm9}>\n\t\t\t\t\t<input\n\t\t\t\t\t\tdisabled={isDisabled}\n\t\t\t\t\t\tmaxLength={255}\n\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tonChange={bindFn}\n\t\t\t\t\t\tvalue={defaultValue ? defaultValue.toString() : ''}\n\t\t\t\t\t\tplaceholder={placeHolder || ''}\n\t\t\t\t\t\treadOnly={readOnly}\n\t\t\t\t\t\tstyle={!wrn ? {} : {backgroundColor: 'yellow'}}\n\t\t\t\t\t/>\n\t\t\t\t\t{wrn}\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t);\n\t}\n\n\tpublic static boundTextboxValue(title: string|null, defaultValue: string | number | Date, bindValFn: (value: string) => any, placeHolder?: string, readOnly?: boolean, isDisabled?: boolean) {\n\t\tconst wrn = EditFormBase.renderWarnings(defaultValue);\n\t\tif (isEmpty(title)) {\n\t\t\treturn (\n\t\t\t\t<span>\n\t\t\t\t\t<input\n\t\t\t\t\t\tdisabled={isDisabled}\n\t\t\t\t\t\tmaxLength={255}\n\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tonChange={(e) => bindValFn(e.currentTarget.value)}\n\t\t\t\t\t\tvalue={defaultValue ? defaultValue.toString() : ''}\n\t\t\t\t\t\tplaceholder={placeHolder || ''}\n\t\t\t\t\t\treadOnly={readOnly}\n\t\t\t\t\t\tstyle={!wrn ? {minWidth: '40px'} : {backgroundColor: 'yellow'}}\n\t\t\t\t\t/>\n\t\t\t\t\t{wrn}\n\t\t\t\t</span>\n\t\t\t);\n\t\t}\n\t\treturn (\n\t\t\t<Row className={EditFormBase.formGroup}>\n\t\t\t\t<Col sm={EditFormBase.sm3}><label className={EditFormBase.ctrlLabel}>{title}</label></Col>\n\t\t\t\t<Col sm={EditFormBase.sm9}>\n\t\t\t\t\t{EditFormBase.boundTextboxValue(null, defaultValue, bindValFn, placeHolder, readOnly, isDisabled)}\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t);\n\t}\n\n\tpublic static boundChoices(title: string|null, choices: Array<{label?: string, value: string}|string>, defaultValue: string | number | Date, bindValFn: (value: string) => any, placeHolder?: string, isDisabled?: boolean) {\n\t\tconst wrn = EditFormBase.renderWarnings(defaultValue);\n\t\tif (isEmpty(title)) {\n\t\t\tconst cc = choices.map((choice) => (typeof choice === 'string') ? {value: choice} : choice);\n\t\t\treturn (\n\t\t\t\t<span>\n\t\t\t\t\t<select\n\t\t\t\t\t\tdisabled={isDisabled}\n\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\tonChange={(e) => bindValFn(e.currentTarget.value)}\n\t\t\t\t\t\tvalue={defaultValue ? defaultValue.toString() : ''}\n\t\t\t\t\t\tplaceholder={placeHolder || ''}\n\t\t\t\t\t\tstyle={!wrn ? {minWidth: '40px'} : {backgroundColor: 'yellow'}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<option value=\"\">(none)</option>\n\t\t\t\t\t\t{cc.map((choice, i) => <option key={choice.value + i} value={choice.value}>{choice.label || choice.value}</option>)}\n\t\t\t\t\t</select>\n\t\t\t\t\t{wrn}\n\t\t\t\t</span>\n\t\t\t);\n\t\t}\n\t\treturn (\n\t\t\t<Row className={EditFormBase.formGroup}>\n\t\t\t\t<Col sm={EditFormBase.sm3}><label className={EditFormBase.ctrlLabel}>{title}</label></Col>\n\t\t\t\t<Col sm={EditFormBase.sm9}>\n\t\t\t\t\t{EditFormBase.boundChoices(null, choices, defaultValue, bindValFn, placeHolder, isDisabled)}\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t);\n\t}\n\n\n\tpublic static submitRow(actionText?: string) {\n\t\treturn (\n\t\t\t<Row className={EditFormBase.formGroup}>\n\t\t\t\t<Col sm={EditFormBase.sm3}/>\n\t\t\t\t<Col sm={EditFormBase.sm9}>\n\t\t\t\t\t{EditFormBase.submitButton(actionText)}\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t);\n\t}\n\n\tpublic static submitButton(actionText?: string) {\n\t\treturn (\n\t\t\t<button type=\"submit\">{actionText || 'Submit'}</button>\n\t\t);\n\t}\n\n\tpublic static boundDate(title: string, bindFn: React.FormEventHandler<HTMLInputElement>, isStart: boolean, start?: Date, end?: Date, isDisabled?: boolean) {\n\t\treturn (\n\t\t\t<Row className={EditFormBase.formGroup}>\n\t\t\t\t<Col sm={EditFormBase.sm3}><label className={EditFormBase.ctrlLabel}>{title}</label></Col>\n\t\t\t\t<Col sm={EditFormBase.sm9}>\n\t\t\t\t\t<DatePicker\n\t\t\t\t\t\tdisabled={isDisabled}\n\t\t\t\t\t\tclassName={'form-control'}\n\t\t\t\t\t\tselected={isStart ? moment(start) : moment(end)}\n\t\t\t\t\t\tselectsEnd\n\t\t\t\t\t\tstartDate={start && moment(start)}\n\t\t\t\t\t\tendDate={end && moment(end)}\n\t\t\t\t\t\tonChange={bindFn}\n\t\t\t\t\t\tdateFormatCalendar={'MMM YYYY'}\n\t\t\t\t\t\tshowMonthDropdown\n\t\t\t\t\t\tshowYearDropdown\n\t\t\t\t\t/>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t);\n\t}\n\n\tprotected static renderWarnings(val: string|number|Date) {\n\t\tif (typeof val !== 'string') {\n\t\t\treturn this.renderWarnings(val.toString());\n\t\t}\n\t\tif (val) {\n\t\t\tconst vlc = val.toLowerCase();\n\t\t\tif (vlc.indexOf('included') > -1) {\n\t\t\t\treturn <div className=\"alert alert-error\"><b>Warning:</b> Consider removing term <em>included</em></div>;\n\t\t\t}\n\t\t\tif (vlc.indexOf('refund') > -1) {\n\t\t\t\treturn <div className=\"alert alert-error\"><b>Warning:</b> We don't offer refunds.</div>;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic static boundTextarea(title: string, defaultValue: string | number, bindFn: React.FormEventHandler<HTMLTextAreaElement>) {\n\t\tconst wrn = EditFormBase.renderWarnings(defaultValue);\n\t\treturn (\n\t\t\t<Row className={EditFormBase.formGroup}>\n\t\t\t\t<Col sm={EditFormBase.sm3}><label className={EditFormBase.ctrlLabel}>{title}</label></Col>\n\t\t\t\t<Col sm={EditFormBase.sm9}>\n\t\t\t\t<textarea className=\"form-control\" onChange={bindFn} value={defaultValue ? defaultValue.toString() : ''}\n\t\t\t\t\t\t  style={!wrn ? {} : {backgroundColor: 'yellow'}}\n\t\t\t\t\t\t  rows={5}/>\n\t\t\t\t\t{wrn}\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t);\n\t}\n\n\tpublic static boundTextareaValue(title: string, defaultValue: string | number, bindFn: (value) => any) {\n\t\tconst wrn = EditFormBase.renderWarnings(defaultValue);\n\t\treturn (\n\t\t\t<Row className={EditFormBase.formGroup}>\n\t\t\t\t<Col sm={EditFormBase.sm3}><label className={EditFormBase.ctrlLabel}>{title}</label></Col>\n\t\t\t\t<Col sm={EditFormBase.sm9}>\n\t\t\t\t<textarea className=\"form-control\"\n\t\t\t\t\t\t  onChange={(e) => bindFn(e.currentTarget.value)}\n\t\t\t\t\t\t  value={defaultValue ? defaultValue.toString() : ''}\n\t\t\t\t\t\t  style={!wrn ? {} : {backgroundColor: 'yellow'}}\n\t\t\t\t\t\t  rows={5}/>\n\t\t\t\t\t{wrn}\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t);\n\t}\n\n\tpublic static boundCheckbox(title: string, defaultChecked: boolean, bindFn: React.FormEventHandler<HTMLInputElement>, readOnly?: boolean) {\n\t\treturn <Row className={EditFormBase.formGroup}>\n\t\t\t<Col sm={EditFormBase.sm3}>\n\t\t\t\t<div className={EditFormBase.ctrlLabel}/>\n\t\t\t</Col>\n\t\t\t<Col sm={EditFormBase.sm9}>\n\t\t\t\t<div className=\"form-check\">\n\t\t\t\t\t<label className=\"form-check-label\">\n\t\t\t\t\t\t<input className=\"form-check-input\" type=\"checkbox\" onChange={bindFn}\n\t\t\t\t\t\t\t   checked={defaultChecked}\n\t\t\t\t\t\t\t   disabled={readOnly}/>{' '}{title}\n\t\t\t\t\t</label>\n\t\t\t\t</div>\n\t\t\t</Col>\n\t\t</Row>;\n\t}\n\n\tpublic static boundCheckboxValue(title: string, defaultChecked: boolean, bindFn: (isChecked: boolean) => any, readOnly?: boolean) {\n\t\treturn <Row className={EditFormBase.formGroup}>\n\t\t\t<Col sm={EditFormBase.sm3}>\n\t\t\t\t<div className={EditFormBase.ctrlLabel}/>\n\t\t\t</Col>\n\t\t\t<Col sm={EditFormBase.sm9}>\n\t\t\t\t<div className=\"form-check\">\n\t\t\t\t\t<label className=\"form-check-label\">\n\t\t\t\t\t\t<input className=\"form-check-input\" type=\"checkbox\" onChange={(e) => bindFn(e.currentTarget.checked)}\n\t\t\t\t\t\t\t   checked={defaultChecked}\n\t\t\t\t\t\t\t   disabled={readOnly}/>{' '}{title}\n\t\t\t\t\t</label>\n\t\t\t\t</div>\n\t\t\t</Col>\n\t\t</Row>;\n\t}\n\n\tpublic static boundBooleanSwitch(title: string, defaultChecked: boolean, bindFn: (isChecked: boolean) => any, readOnly?: boolean) {\n\t\treturn <Row className={EditFormBase.formGroup}>\n\t\t\t<Col sm={EditFormBase.sm3}>\n\t\t\t\t<div className={EditFormBase.ctrlLabel}/>\n\t\t\t</Col>\n\t\t\t<Col sm={EditFormBase.sm9}>\n\t\t\t\t<div className=\"form-check\">\n\t\t\t\t\t<label className=\"form-check-label\">\n\t\t\t\t\t\t<input className=\"form-check-input\" type=\"checkbox\" onChange={(e) => bindFn(e.currentTarget.checked)}\n\t\t\t\t\t\t\t   checked={defaultChecked}\n\t\t\t\t\t\t\t   disabled={readOnly}/>{' '}{title}\n\t\t\t\t\t</label>\n\t\t\t\t</div>\n\t\t\t</Col>\n\t\t</Row>;\n\t}\n}\n"],"sourceRoot":""}